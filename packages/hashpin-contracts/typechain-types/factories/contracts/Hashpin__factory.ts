/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Hashpin, HashpinInterface } from "../../contracts/Hashpin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "adapter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "whitelisted",
        type: "bool",
      },
    ],
    name: "AdapterWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDifficulty",
        type: "uint256",
      },
    ],
    name: "DifficultyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "adapter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "HashClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pinner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "powHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "HashPinned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "INITIAL_DIFFICULTY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "adapter",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    name: "claimHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentDifficulty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDifficulty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "powHash",
        type: "bytes32",
      },
    ],
    name: "getHashDetails",
    outputs: [
      {
        internalType: "address",
        name: "pinner",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "meetsDifficulty",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "pinHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pinnedHashes",
    outputs: [
      {
        internalType: "address",
        name: "pinner",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adapter",
        type: "address",
      },
      {
        internalType: "bool",
        name: "whitelisted",
        type: "bool",
      },
    ],
    name: "setAdapterWhitelisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newDifficulty",
        type: "uint256",
      },
    ],
    name: "setDifficulty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "verifyHash",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedAdapters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100408161004b565b50600460025561009b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111be806100aa6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806380a25abc11610097578063b893cce211610066578063b893cce2146101f5578063d3ed240914610218578063ebdfd6ec14610220578063f2fde38b1461023357600080fd5b806380a25abc146101a65780638da5cb5b146101c957806395314d51146101da578063b6baffe3146101ed57600080fd5b80635c062d6c116100d35780635c062d6c1461016d578063602512e114610176578063715018a61461018b57806379381a971461019357600080fd5b8063060c0bfc146100fa5780631758c77a1461012a5780634c8460a11461014c575b600080fd5b61010d610108366004610c43565b610246565b6040516001600160a01b0390911681526020015b60405180910390f35b61013d610138366004610c8f565b6102fa565b60405161012193929190610ca8565b61015f61015a366004610d4f565b610415565b604051908152602001610121565b61015f60025481565b610189610184366004610c8f565b610629565b005b6101896106c8565b61015f6101a1366004610dbe565b6106dc565b6101b96101b4366004610c8f565b61096a565b6040519015158152602001610121565b6000546001600160a01b031661010d565b61013d6101e8366004610c8f565b610a1f565b60025461015f565b6101b9610203366004610e4b565b60036020526000908152604090205460ff1681565b61015f600481565b61018961022e366004610e6d565b610ad5565b610189610241366004610e4b565b610b3c565b60008161026e5760405162461bcd60e51b815260040161026590610ea9565b60405180910390fd5b8360005b838110156102d9578185858381811061028d5761028d610ef5565b905060200201356040516020016102ae929190918252602082015260400190565b60405160208183030381529060405280519060200120915080806102d190610f21565b915050610272565b506000908152600160205260409020546001600160a01b0316949350505050565b600081815260016020526040812060020154606090829061034e5760405162461bcd60e51b815260206004820152600e60248201526d12185cda081b9bdd08199bdd5b9960921b6044820152606401610265565b600084815260016020819052604090912080546002820154928201805492936001600160a01b0390921692909190829061038790610f3a565b80601f01602080910402602001604051908101604052809291908181526020018280546103b390610f3a565b80156104005780601f106103d557610100808354040283529160200191610400565b820191906000526020600020905b8154815290600101906020018083116103e357829003601f168201915b50505050509150935093509350509193909250565b60008461045b5760405162461bcd60e51b8152602060048201526014602482015273486173682063616e6e6f7420626520656d70747960601b6044820152606401610265565b604080516020808201889052818301879052825180830384018152606090920183528151918101919091206000818152600190925291902060020154156104da5760405162461bcd60e51b815260206004820152601360248201527212185cda08185b1c9958591e481c1a5b9b9959606a1b6044820152606401610265565b6104e38161096a565b6105415760405162461bcd60e51b815260206004820152602960248201527f4861736820646f6573206e6f74206d65657420646966666963756c74792072656044820152681c5d5a5c995b595b9d60ba1b6064820152608401610265565b6040518060600160405280336001600160a01b0316815260200185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050426020938401525083815260018083526040909120835181546001600160a01b0319166001600160a01b0390911617815591830151908201906105d59082610fd9565b5060409182015160029091015551819033907fe4bba2d0223259da1a7581431df71e45609917cfb573b4d2c434499441f23ea190610618908890889042906110c2565b60405180910390a395945050505050565b610631610b7a565b61010081111561068d5760405162461bcd60e51b815260206004820152602160248201527f446966666963756c74792063616e6e6f742065786365656420323536206269746044820152607360f81b6064820152608401610265565b60028190556040518181527f5a790c48cbebdceff3f1fcd445afd12d57302b7196738d61c60dcd491bf3efba9060200160405180910390a150565b6106d0610b7a565b6106da6000610ba7565b565b6000846106fb5760405162461bcd60e51b815260040161026590610ea9565b8660005b86811015610766578188888381811061071a5761071a610ef5565b9050602002013560405160200161073b929190918252602082015260400190565b604051602081830303815290604052805190602001209150808061075e90610f21565b9150506106ff565b5060008181526001602052604090206002015481906107b85760405162461bcd60e51b815260206004820152600e60248201526d12185cda081b9bdd08199bdd5b9960921b6044820152606401610265565b6000818152600160205260409020546001600160a01b0316331461082a5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79207468652070696e6e65722063616e20636c61696d207468697320686044820152620c2e6d60eb1b6064820152608401610265565b6001600160a01b03861660009081526003602052604090205460ff166108925760405162461bcd60e51b815260206004820152601760248201527f41646170746572206e6f742077686974656c69737465640000000000000000006044820152606401610265565b60405163b6483bab60e01b815286906000906001600160a01b0383169063b6483bab906108c99033908f908c908c906004016110e6565b6020604051808303816000875af11580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c9190611118565b9050876001600160a01b03168b336001600160a01b03167f3d095c3b92d17d84e3cd9810eb5ad0a1e7e5934d567f1cb32e60c78596368c778460405161095491815260200190565b60405180910390a49a9950505050505050505050565b600080600860025461097c9190611147565b90506000600860025461098f919061115b565b905060005b828110156109d1578481602081106109ae576109ae610ef5565b1a156109bf57506000949350505050565b806109c981610f21565b915050610994565b508015610a155760006109e582600861116f565b60ff901b9050808584602081106109fe576109fe610ef5565b1a1660ff1615610a1357506000949350505050565b505b5060019392505050565b6001602081905260009182526040909120805491810180546001600160a01b0390931692610a4c90610f3a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7890610f3a565b8015610ac55780601f10610a9a57610100808354040283529160200191610ac5565b820191906000526020600020905b815481529060010190602001808311610aa857829003601f168201915b5050505050908060020154905083565b610add610b7a565b6001600160a01b038216600081815260036020908152604091829020805460ff191685151590811790915591519182527f3cece36ac6216147f57b10bb30975f82b18b8b290a7925c322277e684afcce4a910160405180910390a25050565b610b44610b7a565b6001600160a01b038116610b6e57604051631e4fbdf760e01b815260006004820152602401610265565b610b7781610ba7565b50565b6000546001600160a01b031633146106da5760405163118cdaa760e01b8152336004820152602401610265565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f840112610c0957600080fd5b50813567ffffffffffffffff811115610c2157600080fd5b6020830191508360208260051b8501011115610c3c57600080fd5b9250929050565b600080600060408486031215610c5857600080fd5b83359250602084013567ffffffffffffffff811115610c7657600080fd5b610c8286828701610bf7565b9497909650939450505050565b600060208284031215610ca157600080fd5b5035919050565b60018060a01b038416815260006020606081840152845180606085015260005b81811015610ce457868101830151858201608001528201610cc8565b506000608082860101526080601f19601f83011685010192505050826040830152949350505050565b60008083601f840112610d1f57600080fd5b50813567ffffffffffffffff811115610d3757600080fd5b602083019150836020828501011115610c3c57600080fd5b60008060008060608587031215610d6557600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610d8a57600080fd5b610d9687828801610d0d565b95989497509550505050565b80356001600160a01b0381168114610db957600080fd5b919050565b60008060008060008060808789031215610dd757600080fd5b86359550602087013567ffffffffffffffff80821115610df657600080fd5b610e028a838b01610bf7565b9097509550859150610e1660408a01610da2565b94506060890135915080821115610e2c57600080fd5b50610e3989828a01610d0d565b979a9699509497509295939492505050565b600060208284031215610e5d57600080fd5b610e6682610da2565b9392505050565b60008060408385031215610e8057600080fd5b610e8983610da2565b915060208301358015158114610e9e57600080fd5b809150509250929050565b6020808252602c908201527f4d65726b6c652070726f6f66206d75737420696e636c756465206174206c656160408201526b737420746865206e6f6e636560a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610f3357610f33610f0b565b5060010190565b600181811c90821680610f4e57607f821691505b602082108103610f6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610fd457600081815260208120601f850160051c81016020861015610fb15750805b601f850160051c820191505b81811015610fd057828155600101610fbd565b5050505b505050565b815167ffffffffffffffff811115610ff357610ff3610f74565b611007816110018454610f3a565b84610f8a565b602080601f83116001811461103c57600084156110245750858301515b600019600386901b1c1916600185901b178555610fd0565b600085815260208120601f198616915b8281101561106b5788860151825594840194600190910190840161104c565b50858210156110895787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6040815260006110d6604083018587611099565b9050826020830152949350505050565b60018060a01b038516815283602082015260606040820152600061110e606083018486611099565b9695505050505050565b60006020828403121561112a57600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b60008261115657611156611131565b500490565b60008261116a5761116a611131565b500690565b8181038181111561118257611182610f0b565b9291505056fea26469706673582212205b5556de0d9b8fbdf56c842435164f38dd9e554079e0bff17bb3bec4d9e6992464736f6c63430008140033";

type HashpinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HashpinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hashpin__factory extends ContractFactory {
  constructor(...args: HashpinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Hashpin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Hashpin__factory {
    return super.connect(runner) as Hashpin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HashpinInterface {
    return new Interface(_abi) as HashpinInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Hashpin {
    return new Contract(address, _abi, runner) as unknown as Hashpin;
  }
}
