/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC721HashpinAdapter,
  ERC721HashpinAdapterInterface,
} from "../../../contracts/adapters/ERC721HashpinAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getHashByTokenId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "hashMinted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "hashToTokenID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hashpinContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "isHashMinted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "metadata",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_hashpinContract",
        type: "address",
      },
    ],
    name: "setHashpinContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenIDToHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a6138038062001a618339810160408190526200003491620001b1565b3382826000620000458382620002aa565b506001620000548282620002aa565b5050506001600160a01b0381166200008657604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000091816200009a565b50505062000376565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011457600080fd5b81516001600160401b0380821115620001315762000131620000ec565b604051601f8301601f19908116603f011681019082821181831017156200015c576200015c620000ec565b816040528381526020925086838588010111156200017957600080fd5b600091505b838210156200019d57858201830151818301840152908201906200017e565b600093810190920192909252949350505050565b60008060408385031215620001c557600080fd5b82516001600160401b0380821115620001dd57600080fd5b620001eb8683870162000102565b935060208501519150808211156200020257600080fd5b50620002118582860162000102565b9150509250929050565b600181811c908216806200023057607f821691505b6020821081036200025157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002a557600081815260208120601f850160051c81016020861015620002805750805b601f850160051c820191505b81811015620002a1578281556001016200028c565b5050505b505050565b81516001600160401b03811115620002c657620002c6620000ec565b620002de81620002d784546200021b565b8462000257565b602080601f831160018114620003165760008415620002fd5750858301515b600019600386901b1c1916600185901b178555620002a1565b600085815260208120601f198616915b82811015620003475788860151825594840194600190910190840162000326565b5085821015620003665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6116db80620003866000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063b88d4fde1161007c578063b88d4fde146102d5578063c87b56dd146102e8578063e9427cbb146102fb578063e985e9c51461030e578063f2fde38b14610321578063f79ec5c31461033457600080fd5b80638da5cb5b146102705780638faa9edf146102815780639456f7e91461029457806395d89b41146102a7578063a22cb465146102af578063b6483bab146102c257600080fd5b806342842e0e1161011557806342842e0e1461021057806359383991146102235780636352211e1461024257806370a0823114610255578063715018a614610268578063808132881461022357600080fd5b806301ffc9a71461015d57806306fdde0314610185578063081812fc1461019a578063095ea7b3146101c5578063129b3e27146101da57806323b872dd146101fd575b600080fd5b61017061016b3660046111be565b610357565b60405190151581526020015b60405180910390f35b61018d610382565b60405161017c919061122b565b6101ad6101a836600461123e565b610414565b6040516001600160a01b03909116815260200161017c565b6101d86101d3366004611273565b61043d565b005b6101706101e836600461123e565b60009081526008602052604090205460ff1690565b6101d861020b36600461129d565b61044c565b6101d861021e36600461129d565b6104dc565b61023461023136600461123e565b90565b60405190815260200161017c565b6101ad61025036600461123e565b6104fc565b6102346102633660046112d9565b610507565b6101d861054f565b6007546001600160a01b03166101ad565b6101d861028f3660046112d9565b610563565b6102346102a236600461123e565b61058d565b61018d610643565b6101d86102bd3660046112f4565b610652565b6102346102d0366004611330565b61065d565b6101d86102e33660046113cd565b610782565b61018d6102f636600461123e565b61079a565b6009546101ad906001600160a01b031681565b61017061031c3660046114a9565b6108ab565b6101d861032f3660046112d9565b6108d9565b61017061034236600461123e565b60086020526000908152604090205460ff1681565b60006001600160e01b03198216632dedfc8360e21b148061037c575061037c82610917565b92915050565b606060008054610391906114dc565b80601f01602080910402602001604051908101604052809291908181526020018280546103bd906114dc565b801561040a5780601f106103df5761010080835404028352916020019161040a565b820191906000526020600020905b8154815290600101906020018083116103ed57829003601f168201915b5050505050905090565b600061041f8261093c565b506000828152600460205260409020546001600160a01b031661037c565b610448828233610975565b5050565b6001600160a01b03821661047b57604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610488838333610982565b9050836001600160a01b0316816001600160a01b0316146104d6576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610472565b50505050565b6104f783838360405180602001604052806000815250610782565b505050565b600061037c8261093c565b60006001600160a01b038216610533576040516322718ad960e21b815260006004820152602401610472565b506001600160a01b031660009081526003602052604090205490565b610557610a7b565b6105616000610aa8565b565b61056b610a7b565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60008181526002602052604081205482906001600160a01b03166105f35760405162461bcd60e51b815260206004820152601760248201527f546f6b656e20494420646f6573206e6f742065786973740000000000000000006044820152606401610472565b60008181526008602052604090205460ff1661037c5760405162461bcd60e51b815260206004820152600f60248201526e12185cda081b9bdd081b5a5b9d1959608a1b6044820152606401610472565b606060018054610391906114dc565b610448338383610afa565b6009546000906001600160a01b031633146106ba5760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c79204861736870696e20636f6e74726163742063616e206d696e7400006044820152606401610472565b60008481526008602052604090205460ff161561070f5760405162461bcd60e51b815260206004820152601360248201527212185cda08185b1c9958591e481b5a5b9d1959606a1b6044820152606401610472565b6000848152600860205260409020805460ff19166001179055836107338682610b99565b8215610779576107798185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bb392505050565b95945050505050565b61078d84848461044c565b6104d63385858585610c03565b60606107a58261093c565b50600082815260066020526040812080546107bf906114dc565b80601f01602080910402602001604051908101604052809291908181526020018280546107eb906114dc565b80156108385780601f1061080d57610100808354040283529160200191610838565b820191906000526020600020905b81548152906001019060200180831161081b57829003601f168201915b50505050509050600061085660408051602081019091526000815290565b90508051600003610868575092915050565b81511561089a578082604051602001610882929190611516565b60405160208183030381529060405292505050919050565b6108a384610d2e565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6108e1610a7b565b6001600160a01b03811661090b57604051631e4fbdf760e01b815260006004820152602401610472565b61091481610aa8565b50565b60006001600160e01b03198216632483248360e11b148061037c575061037c82610da3565b6000818152600260205260408120546001600160a01b03168061037c57604051637e27328960e01b815260048101849052602401610472565b6104f78383836001610df3565b6000828152600260205260408120546001600160a01b03908116908316156109af576109af818486610ef9565b6001600160a01b038116156109ed576109cc600085600080610df3565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610a1c576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6007546001600160a01b031633146105615760405163118cdaa760e01b8152336004820152602401610472565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610b2c57604051630b61174360e31b81526001600160a01b0383166004820152602401610472565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610448828260405180602001604052806000815250610f5d565b6000828152600660205260409020610bcb828261158b565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6001600160a01b0383163b15610d2757604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610c4590889088908790879060040161164b565b6020604051808303816000875af1925050508015610c80575060408051601f3d908101601f19168201909252610c7d91810190611688565b60015b610ce9573d808015610cae576040519150601f19603f3d011682016040523d82523d6000602084013e610cb3565b606091505b508051600003610ce157604051633250574960e11b81526001600160a01b0385166004820152602401610472565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610d2557604051633250574960e11b81526001600160a01b0385166004820152602401610472565b505b5050505050565b6060610d398261093c565b506000610d5160408051602081019091526000815290565b90506000815111610d715760405180602001604052806000815250610d9c565b80610d7b84610f75565b604051602001610d8c929190611516565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b1480610dd457506001600160e01b03198216635b5e139f60e01b145b8061037c57506301ffc9a760e01b6001600160e01b031983161461037c565b8080610e0757506001600160a01b03821615155b15610ec9576000610e178461093c565b90506001600160a01b03831615801590610e435750826001600160a01b0316816001600160a01b031614155b8015610e565750610e5481846108ab565b155b15610e7f5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610472565b8115610ec75783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610f04838383611008565b6104f7576001600160a01b038316610f3257604051637e27328960e01b815260048101829052602401610472565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610472565b610f67838361106b565b6104f7336000858585610c03565b60606000610f82836110d0565b600101905060008167ffffffffffffffff811115610fa257610fa26113b7565b6040519080825280601f01601f191660200182016040528015610fcc576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610fd657509392505050565b60006001600160a01b038316158015906108a35750826001600160a01b0316846001600160a01b03161480611042575061104284846108ab565b806108a35750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160a01b03821661109557604051633250574960e11b815260006004820152602401610472565b60006110a383836000610982565b90506001600160a01b038116156104f7576040516339e3563760e11b815260006004820152602401610472565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061110f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061113b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061115957662386f26fc10000830492506010015b6305f5e1008310611171576305f5e100830492506008015b612710831061118557612710830492506004015b60648310611197576064830492506002015b600a831061037c5760010192915050565b6001600160e01b03198116811461091457600080fd5b6000602082840312156111d057600080fd5b8135610d9c816111a8565b60005b838110156111f65781810151838201526020016111de565b50506000910152565b600081518084526112178160208601602086016111db565b601f01601f19169290920160200192915050565b602081526000610d9c60208301846111ff565b60006020828403121561125057600080fd5b5035919050565b80356001600160a01b038116811461126e57600080fd5b919050565b6000806040838503121561128657600080fd5b61128f83611257565b946020939093013593505050565b6000806000606084860312156112b257600080fd5b6112bb84611257565b92506112c960208501611257565b9150604084013590509250925092565b6000602082840312156112eb57600080fd5b610d9c82611257565b6000806040838503121561130757600080fd5b61131083611257565b91506020830135801515811461132557600080fd5b809150509250929050565b6000806000806060858703121561134657600080fd5b61134f85611257565b935060208501359250604085013567ffffffffffffffff8082111561137357600080fd5b818701915087601f83011261138757600080fd5b81358181111561139657600080fd5b8860208285010111156113a857600080fd5b95989497505060200194505050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156113e357600080fd5b6113ec85611257565b93506113fa60208601611257565b925060408501359150606085013567ffffffffffffffff8082111561141e57600080fd5b818701915087601f83011261143257600080fd5b813581811115611444576114446113b7565b604051601f8201601f19908116603f0116810190838211818310171561146c5761146c6113b7565b816040528281528a602084870101111561148557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156114bc57600080fd5b6114c583611257565b91506114d360208401611257565b90509250929050565b600181811c908216806114f057607f821691505b60208210810361151057634e487b7160e01b600052602260045260246000fd5b50919050565b600083516115288184602088016111db565b83519083019061153c8183602088016111db565b01949350505050565b601f8211156104f757600081815260208120601f850160051c8101602086101561156c5750805b601f850160051c820191505b81811015610d2557828155600101611578565b815167ffffffffffffffff8111156115a5576115a56113b7565b6115b9816115b384546114dc565b84611545565b602080601f8311600181146115ee57600084156115d65750858301515b600019600386901b1c1916600185901b178555610d25565b600085815260208120601f198616915b8281101561161d578886015182559484019460019091019084016115fe565b508582101561163b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061167e908301846111ff565b9695505050505050565b60006020828403121561169a57600080fd5b8151610d9c816111a856fea26469706673582212204c9f524c29c5c6ad6faac512b7a871993aaa6c07722342cc1a8b161d2af7bf7764736f6c63430008140033";

type ERC721HashpinAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721HashpinAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721HashpinAdapter__factory extends ContractFactory {
  constructor(...args: ERC721HashpinAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, overrides || {}) as Promise<
      ERC721HashpinAdapter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ERC721HashpinAdapter__factory {
    return super.connect(runner) as ERC721HashpinAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721HashpinAdapterInterface {
    return new Interface(_abi) as ERC721HashpinAdapterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC721HashpinAdapter {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ERC721HashpinAdapter;
  }
}
