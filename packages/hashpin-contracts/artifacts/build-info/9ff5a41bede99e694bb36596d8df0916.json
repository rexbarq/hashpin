{"id":"9ff5a41bede99e694bb36596d8df0916","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/adapters/ERC1155HashpinAdapter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../interfaces/IHashpinNFT.sol\";\n\n/**\n * @title ERC1155HashpinAdapter\n * @dev Adapter for minting ERC-1155 tokens for claimed hashes\n */\ncontract ERC1155HashpinAdapter is IHashpinNFT, ERC1155, Ownable {\n    // Mapping from hash to whether it has been minted\n    mapping(bytes32 => bool) public hashMinted;\n    \n    // The Hashpin contract address that is allowed to call mint\n    address public hashpinContract;\n    \n    /**\n     * @dev Constructor\n     * @param uri_ The base URI for token metadata\n     */\n    constructor(string memory uri_) \n        ERC1155(uri_) \n        Ownable(msg.sender) \n    {}\n    \n    /**\n     * @dev Sets the Hashpin contract address\n     * @param _hashpinContract The address of the Hashpin contract\n     */\n    function setHashpinContract(address _hashpinContract) external onlyOwner {\n        hashpinContract = _hashpinContract;\n    }\n    \n    /**\n     * @dev Mints an ERC-1155 token representing the claimed hash\n     * @param to The address that will receive the token\n     * @param hash The hash being claimed\n     * @param metadata Additional metadata for the token (ignored for ERC-1155)\n     * @return tokenId The ID of the newly minted token\n     */\n    function mint(address to, bytes32 hash, bytes calldata metadata) external override returns (uint256) {\n        require(msg.sender == hashpinContract, \"Only Hashpin contract can mint\");\n        require(!hashMinted[hash], \"Hash already minted\");\n        \n        // Use the hash itself as the token ID\n        uint256 tokenId = uint256(hash);\n        \n        // Mark the hash as minted\n        hashMinted[hash] = true;\n        \n        // Mint the token to the recipient (amount = 1)\n        _mint(to, tokenId, 1, metadata);\n        \n        return tokenId;\n    }\n    \n    /**\n     * @dev Check if a hash has been minted\n     * @param hash The hash to check\n     * @return bool True if the hash has been minted\n     */\n    function isHashMinted(bytes32 hash) external view returns (bool) {\n        return hashMinted[hash];\n    }\n    \n    /**\n     * @dev Checks if the contract supports a given interface\n     * @param interfaceId The interface identifier\n     * @return bool True if the contract supports the interface\n     */\n    function supportsInterface(bytes4 interfaceId) public view override(ERC1155, IHashpinNFT) returns (bool) {\n        return \n            interfaceId == type(IHashpinNFT).interfaceId || \n            super.supportsInterface(interfaceId);\n    }\n} "},"contracts/adapters/ERC721HashpinAdapter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../interfaces/IHashpinNFT.sol\";\n\n/**\n * @title ERC721HashpinAdapter\n * @dev Adapter for minting ERC-721 tokens for claimed hashes\n */\ncontract ERC721HashpinAdapter is IHashpinNFT, ERC721URIStorage, Ownable {\n    // Mapping to track which hashes have been minted\n    mapping(bytes32 => bool) public hashMinted;\n    \n    // The Hashpin contract address that is allowed to call mint\n    address public hashpinContract;\n    \n    /**\n     * @dev Constructor\n     * @param name The name of the NFT collection\n     * @param symbol The symbol of the NFT collection\n     */\n    constructor(string memory name, string memory symbol) \n        ERC721(name, symbol) \n        Ownable(msg.sender) \n    {}\n    \n    /**\n     * @dev Sets the Hashpin contract address\n     * @param _hashpinContract The address of the Hashpin contract\n     */\n    function setHashpinContract(address _hashpinContract) external onlyOwner {\n        hashpinContract = _hashpinContract;\n    }\n    \n    /**\n     * @dev Convert a bytes32 hash to a uint256 token ID\n     * @param hash The hash to convert\n     * @return tokenId The resulting token ID\n     */\n    function hashToTokenID(bytes32 hash) public pure returns (uint256) {\n        return uint256(hash);\n    }\n    \n    /**\n     * @dev Convert a uint256 token ID to a bytes32 hash\n     * @param tokenId The token ID to convert\n     * @return hash The resulting hash\n     */\n    function tokenIDToHash(uint256 tokenId) public pure returns (bytes32) {\n        return bytes32(tokenId);\n    }\n    \n    /**\n     * @dev Mints an NFT representing the claimed hash\n     * @param to The address that will receive the NFT\n     * @param hash The hash being claimed\n     * @param metadata Additional metadata for the NFT (token URI as bytes)\n     * @return tokenId The ID of the newly minted NFT\n     */\n    function mint(address to, bytes32 hash, bytes calldata metadata) external override returns (uint256) {\n        require(msg.sender == hashpinContract, \"Only Hashpin contract can mint\");\n        require(!hashMinted[hash], \"Hash already minted\");\n        \n        // Use the hash itself as the token ID\n        uint256 tokenId = hashToTokenID(hash);\n        \n        // Mark the hash as minted\n        hashMinted[hash] = true;\n        \n        // Mint the NFT to the recipient\n        _safeMint(to, tokenId);\n        \n        // Set the token URI if metadata is provided\n        if (metadata.length > 0) {\n            _setTokenURI(tokenId, string(metadata));\n        }\n        \n        return tokenId;\n    }\n    \n    /**\n     * @dev Get the hash associated with a token ID\n     * @param tokenId The token ID to query\n     * @return hash The hash associated with the token\n     */\n    function getHashByTokenId(uint256 tokenId) external view returns (bytes32) {\n        bytes32 hash = tokenIDToHash(tokenId);\n        require(_ownerOf(tokenId) != address(0), \"Token ID does not exist\");\n        require(hashMinted[hash], \"Hash not minted\");\n        return hash;\n    }\n    \n    /**\n     * @dev Check if a hash has been minted as an NFT\n     * @param hash The hash to check\n     * @return bool True if the hash has been minted\n     */\n    function isHashMinted(bytes32 hash) external view returns (bool) {\n        return hashMinted[hash];\n    }\n    \n    /**\n     * @dev Checks if the contract supports a given interface\n     * @param interfaceId The interface identifier\n     * @return bool True if the contract supports the interface\n     */\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721URIStorage, IHashpinNFT) returns (bool) {\n        return \n            interfaceId == type(IHashpinNFT).interfaceId || \n            super.supportsInterface(interfaceId);\n    }\n} "},"contracts/Hashpin.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/IHashpinNFT.sol\";\n\n/**\n * @title Hashpin\n * @dev A protocol for pinning cryptographic hashes to the blockchain and claiming them as NFTs\n */\ncontract Hashpin is Ownable {\n    // Events\n    event HashPinned(address indexed pinner, bytes32 indexed powHash, string metadata, uint256 timestamp);\n    event DifficultyUpdated(uint256 newDifficulty);\n    event HashClaimed(address indexed claimer, bytes32 indexed hash, address indexed adapter, uint256 tokenId);\n    event AdapterWhitelisted(address indexed adapter, bool whitelisted);\n    \n    // Structs\n    struct PinnedHash {\n        address pinner;\n        string metadata;\n        uint256 timestamp;\n    }\n    \n    // State variables\n    mapping(bytes32 => PinnedHash) public pinnedHashes; // Maps powHash to PinnedHash struct\n    uint256 public currentDifficulty;  // Number of leading zeros required\n    uint256 public constant INITIAL_DIFFICULTY = 4;  // Start with 4 leading zeros\n    \n    // Whitelisted NFT adapters\n    mapping(address => bool) public whitelistedAdapters;\n    \n    constructor() Ownable(msg.sender) {\n        currentDifficulty = INITIAL_DIFFICULTY;\n    }\n    \n    /**\n     * @notice Verifies if a provided hash meets the required difficulty\n     * @dev Difficulty is represented by the number of leading zero bits required\n     * @param hash The hash to verify\n     * @return bool True if the hash meets the difficulty requirement\n     */\n    function meetsDifficulty(bytes32 hash) public view returns (bool) {\n        // Convert difficulty to number of bytes and bits to check\n        uint256 fullBytes = currentDifficulty / 8;\n        uint256 remainingBits = currentDifficulty % 8;\n        \n        // Check full bytes first (most efficient)\n        for (uint256 i = 0; i < fullBytes; i++) {\n            if (uint8(hash[i]) != 0) {\n                return false;\n            }\n        }\n        \n        // Check remaining bits if any\n        if (remainingBits > 0) {\n            // Create mask for remaining bits\n            // e.g., for 3 bits: 11100000 (0xE0)\n            uint8 mask = uint8(0xFF) << (8 - remainingBits);\n            \n            // Apply mask and check if result is 0\n            if ((uint8(hash[fullBytes]) & mask) != 0) {\n                return false;\n            }\n        }\n        \n        return true;\n    }    \n    \n    /**\n     * @dev Pin a hash to the blockchain with proof of work\n     * @param hash The hash to pin (could be a single hash or a merkle root)\n     * @param nonce The nonce used to meet the difficulty requirement\n     * @param metadata Optional metadata associated with the hash\n     * @return powHash The proof-of-work hash that was generated\n     */\n    function pinHash(bytes32 hash, uint256 nonce, string calldata metadata) external returns (bytes32) {\n        require(hash != bytes32(0), \"Hash cannot be empty\");\n        \n        // Calculate the proof of work hash\n        bytes32 powHash = keccak256(abi.encodePacked(hash, nonce));\n        \n        // Ensure the powHash isn't already pinned\n        require(pinnedHashes[powHash].timestamp == 0, \"Hash already pinned\");\n        \n        // Verify proof of work\n        require(meetsDifficulty(powHash), \"Hash does not meet difficulty requirement\");\n        \n        // Store the powHash information\n        pinnedHashes[powHash] = PinnedHash({\n            pinner: msg.sender,\n            metadata: metadata,\n            timestamp: block.timestamp\n        });\n        \n        // Emit event\n        emit HashPinned(msg.sender, powHash, metadata, block.timestamp);\n        \n        return powHash;\n    }\n    \n    /**\n     * @dev Claim a hash as an NFT using the specified adapter\n     * @param hash The hash to claim\n     * @param merkleProof The merkle proof (including the nonce as the last element)\n     * @param adapter The address of the NFT adapter to use\n     * @param metadata Additional metadata for the NFT\n     * @return tokenId The ID of the newly minted NFT\n     */\n    function claimHash(\n        bytes32 hash, \n        bytes32[] calldata merkleProof, \n        address adapter, \n        bytes calldata metadata\n    ) external returns (uint256) {\n        require(merkleProof.length > 0, \"Merkle proof must include at least the nonce\");\n        \n        // Start with the hash to claim\n        bytes32 currentHash = hash;\n        \n        // Process the entire Merkle proof (including the nonce as the last element)\n        for (uint256 i = 0; i < merkleProof.length; i++) {\n            // Combine the current hash with each proof element\n            currentHash = keccak256(abi.encodePacked(currentHash, merkleProof[i]));\n        }\n        \n        // The final hash is the powHash that should be stored in our contract\n        bytes32 powHash = currentHash;\n        \n        // Verify the powHash exists and is pinned by the caller\n        require(pinnedHashes[powHash].timestamp > 0, \"Hash not found\");\n        require(pinnedHashes[powHash].pinner == msg.sender, \"Only the pinner can claim this hash\");\n        require(whitelistedAdapters[adapter], \"Adapter not whitelisted\");\n        \n        // Use the adapter to mint an NFT with the original hash\n        IHashpinNFT nftAdapter = IHashpinNFT(adapter);\n        uint256 tokenId = nftAdapter.mint(msg.sender, hash, metadata);\n        \n        // Emit event\n        emit HashClaimed(msg.sender, hash, adapter, tokenId);\n        \n        return tokenId;\n    }\n    \n    /**\n     * @dev Whitelist or de-whitelist an NFT adapter\n     * @param adapter The address of the adapter\n     * @param whitelisted Whether the adapter should be whitelisted\n     */\n    function setAdapterWhitelisted(address adapter, bool whitelisted) external onlyOwner {\n        whitelistedAdapters[adapter] = whitelisted;\n        emit AdapterWhitelisted(adapter, whitelisted);\n    }\n    \n    /**\n     * @dev Verify if a hash has been pinned\n     * @param hash The hash to verify\n     * @param merkleProof The merkle proof (including the nonce as the last element)\n     * @return address The address that pinned the hash, null if not pinned\n     */\n    function verifyHash(bytes32 hash, bytes32[] calldata merkleProof) external view returns (address) {\n        require(merkleProof.length > 0, \"Merkle proof must include at least the nonce\");\n        \n        // Start with the hash to verify\n        bytes32 currentHash = hash;\n        \n        // Process the entire Merkle proof (including the nonce as the last element)\n        for (uint256 i = 0; i < merkleProof.length; i++) {\n            // Combine the current hash with each proof element\n            currentHash = keccak256(abi.encodePacked(currentHash, merkleProof[i]));\n        }\n        \n        // The final hash is the powHash that should be stored in our contract\n        bytes32 powHash = currentHash;\n        \n        return pinnedHashes[powHash].pinner;\n    }\n    \n    /**\n     * @dev Get details of a pinned hash\n     * @param powHash The proof-of-work hash to get details for\n     * @return pinner The address that pinned the hash\n     * @return metadata The metadata associated with the hash\n     * @return timestamp The timestamp when the hash was pinned\n     */\n    function getHashDetails(bytes32 powHash) external view returns (\n        address pinner,\n        string memory metadata,\n        uint256 timestamp\n    ) {\n        require(pinnedHashes[powHash].timestamp > 0, \"Hash not found\");\n        \n        PinnedHash storage pinnedHash = pinnedHashes[powHash];\n        \n        return (\n            pinnedHash.pinner,\n            pinnedHash.metadata,\n            pinnedHash.timestamp\n        );\n    }\n    \n    /**\n     * @dev Get the current difficulty target\n     * @return uint256 The current difficulty (number of leading zeros required)\n     */\n    function getDifficulty() external view returns (uint256) {\n        return currentDifficulty;\n    }\n\n    /**\n     * @dev Set the current difficulty target (for testing only)\n     * @param newDifficulty The new difficulty value (number of leading zero bits required)\n     */\n    function setDifficulty(uint256 newDifficulty) external onlyOwner {\n        require(newDifficulty <= 256, \"Difficulty cannot exceed 256 bits\");\n        currentDifficulty = newDifficulty;\n        emit DifficultyUpdated(newDifficulty);\n    }\n} \n\n/** TODOs\n * 1. Tokens\n * 2. Usurping\n *     a. Change timestamp to block number or another more reliable method to tell two same hash registrations apart\n *     b. If usurpation is called on the same merkle root, the first caller wins\n * 3. Add reentrancy guard\n * 4. Use bytes for metadata instead of string\n * 5. Fee for claimHash\n * 6. \n * \n */"},"contracts/interfaces/IHashpinNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title IHashpinNFT\n * @dev Interface for NFT adapters that can mint tokens for claimed hashes\n */\ninterface IHashpinNFT {\n    /**\n     * @dev Mints an NFT representing the claimed hash\n     * @param to The address that will receive the NFT\n     * @param hash The hash being claimed\n     * @param metadata Additional metadata for the NFT (e.g., token URI for ERC-721)\n     * @return tokenId The ID of the newly minted NFT\n     */\n    function mint(address to, bytes32 hash, bytes calldata metadata) external returns (uint256 tokenId);\n    \n    /**\n     * @dev Checks if the contract supports a given interface\n     * @param interfaceId The interface identifier\n     * @return bool True if the contract supports the interface\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n} "},"contracts/test/MockHashpinNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"../interfaces/IHashpinNFT.sol\";\n\n/**\n * @title MockHashpinNFT\n * @dev A mock implementation of IHashpinNFT for testing purposes\n */\ncontract MockHashpinNFT is IHashpinNFT {\n    mapping(bytes32 => bool) public minted;\n    mapping(bytes32 => address) public hashOwners;\n    \n    /**\n     * @dev Mock implementation of mint function\n     */\n    function mint(address to, bytes32 hash, bytes calldata) external override returns (uint256) {\n        minted[hash] = true;\n        hashOwners[hash] = to;\n        \n        // Return the hash as the token ID for simplicity\n        return uint256(hash);\n    }\n    \n    /**\n     * @dev Mock implementation of supportsInterface\n     */\n    function supportsInterface(bytes4 interfaceId) external view override returns (bool) {\n        return interfaceId == type(IHashpinNFT).interfaceId;\n    }\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"3149","formattedMessage":"Warning: The result type of the shift operation is equal to the type of the first operand (uint8) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.\n  --> contracts/Hashpin.sol:59:26:\n   |\n59 |             uint8 mask = uint8(0xFF) << (8 - remainingBits);\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"The result type of the shift operation is equal to the type of the first operand (uint8) ignoring the (larger) type of the second operand (uint256) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.","severity":"warning","sourceLocation":{"end":2226,"file":"contracts/Hashpin.sol","start":2192},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> contracts/test/MockHashpinNFT.sol:28:5:\n   |\n28 |     function supportsInterface(bytes4 interfaceId) external view override returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":896,"file":"contracts/test/MockHashpinNFT.sol","start":743},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3831],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":3832,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3831,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,3831],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[5373]},"id":152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":152,"sourceUnit":5374,"src":"132:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"140:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[5373],"IERC4906":[175],"IERC721":[2642]},"id":176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":153,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":152,"src":"133:38:2","symbolAliases":[{"foreign":{"id":154,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":180,"src":"172:38:2","symbolAliases":[{"foreign":{"id":156,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"180:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":159,"name":"IERC165","nameLocations":["279:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":5373,"src":"279:7:2"},"id":160,"nodeType":"InheritanceSpecifier","src":"279:7:2"},{"baseName":{"id":161,"name":"IERC721","nameLocations":["288:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2642,"src":"288:7:2"},"id":162,"nodeType":"InheritanceSpecifier","src":"288:7:2"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"212:45:2","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":175,"linearizedBaseContracts":[175,2642,5373],"name":"IERC4906","nameLocation":"267:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"302:201:2","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":167,"name":"MetadataUpdate","nameLocation":"514:14:2","nodeType":"EventDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:2","nodeType":"VariableDeclaration","scope":167,"src":"529:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:2"},"src":"508:39:2"},{"anonymous":false,"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"553:212:2","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":174,"name":"BatchMetadataUpdate","nameLocation":"776:19:2","nodeType":"EventDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:2","nodeType":"VariableDeclaration","scope":174,"src":"796:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:2","nodeType":"VariableDeclaration","scope":174,"src":"818:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:2"},"src":"770:68:2"}],"scope":176,"src":"257:583:2","usedErrors":[],"usedEvents":[167,174,2541,2550,2559]}],"src":"107:734:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[2642]},"id":180,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":177,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":180,"sourceUnit":2643,"src":"132:52:3","symbolAliases":[{"foreign":{"id":178,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"140:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[316],"IERC20Errors":[221],"IERC721Errors":[269]},"id":317,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":181,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"138:141:4","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":221,"linearizedBaseContracts":[221],"name":"IERC20Errors","nameLocation":"290:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"309:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":191,"name":"ERC20InsufficientBalance","nameLocation":"629:24:4","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"sender","nameLocation":"662:6:4","nodeType":"VariableDeclaration","scope":191,"src":"654:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"balance","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":191,"src":"670:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"needed","nameLocation":"695:6:4","nodeType":"VariableDeclaration","scope":191,"src":"687:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:4"},"src":"623:80:4"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"709:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":196,"name":"ERC20InvalidSender","nameLocation":"872:18:4","nodeType":"ErrorDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"sender","nameLocation":"899:6:4","nodeType":"VariableDeclaration","scope":196,"src":"891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:4"},"src":"866:41:4"},{"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"913:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":201,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:4","nodeType":"ErrorDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:4","nodeType":"VariableDeclaration","scope":201,"src":"1104:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:4"},"src":"1077:45:4"},{"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"1128:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":210,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:4","nodeType":"ErrorDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"spender","nameLocation":"1519:7:4","nodeType":"VariableDeclaration","scope":210,"src":"1511:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:4","nodeType":"VariableDeclaration","scope":210,"src":"1528:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"needed","nameLocation":"1555:6:4","nodeType":"VariableDeclaration","scope":210,"src":"1547:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:4"},"src":"1478:85:4"},{"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"1569:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":215,"name":"ERC20InvalidApprover","nameLocation":"1754:20:4","nodeType":"ErrorDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"approver","nameLocation":"1783:8:4","nodeType":"VariableDeclaration","scope":215,"src":"1775:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:4"},"src":"1748:45:4"},{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"1799:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":220,"name":"ERC20InvalidSpender","nameLocation":"2005:19:4","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"spender","nameLocation":"2033:7:4","nodeType":"VariableDeclaration","scope":220,"src":"2025:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:4"},"src":"1999:43:4"}],"scope":317,"src":"280:1764:4","usedErrors":[191,196,201,210,215,220],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"2046:143:4","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":269,"linearizedBaseContracts":[269],"name":"IERC721Errors","nameLocation":"2200:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"2220:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":227,"name":"ERC721InvalidOwner","nameLocation":"2450:18:4","nodeType":"ErrorDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"owner","nameLocation":"2477:5:4","nodeType":"VariableDeclaration","scope":227,"src":"2469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:4"},"src":"2444:40:4"},{"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"2490:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":232,"name":"ERC721NonexistentToken","nameLocation":"2633:22:4","nodeType":"ErrorDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:4","nodeType":"VariableDeclaration","scope":232,"src":"2656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:4"},"src":"2627:46:4"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"2679:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":241,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:4","nodeType":"ErrorDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"sender","nameLocation":"3008:6:4","nodeType":"VariableDeclaration","scope":241,"src":"3000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:4","nodeType":"VariableDeclaration","scope":241,"src":"3016:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"3041:5:4","nodeType":"VariableDeclaration","scope":241,"src":"3033:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:4"},"src":"2973:75:4"},{"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"3054:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":246,"name":"ERC721InvalidSender","nameLocation":"3217:19:4","nodeType":"ErrorDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"sender","nameLocation":"3245:6:4","nodeType":"VariableDeclaration","scope":246,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:4"},"src":"3211:42:4"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"3259:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":251,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:4","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:4","nodeType":"VariableDeclaration","scope":251,"src":"3451:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:4"},"src":"3423:46:4"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3475:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":258,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:4","nodeType":"ErrorDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"operator","nameLocation":"3768:8:4","nodeType":"VariableDeclaration","scope":258,"src":"3760:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:4","nodeType":"VariableDeclaration","scope":258,"src":"3778:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:4"},"src":"3727:68:4"},{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"3801:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":263,"name":"ERC721InvalidApprover","nameLocation":"3986:21:4","nodeType":"ErrorDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"approver","nameLocation":"4016:8:4","nodeType":"VariableDeclaration","scope":263,"src":"4008:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:4"},"src":"3980:46:4"},{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4032:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":268,"name":"ERC721InvalidOperator","nameLocation":"4240:21:4","nodeType":"ErrorDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"operator","nameLocation":"4270:8:4","nodeType":"VariableDeclaration","scope":268,"src":"4262:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:4"},"src":"4234:46:4"}],"scope":317,"src":"2190:2092:4","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"4284:145:4","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":316,"linearizedBaseContracts":[316],"name":"IERC1155Errors","nameLocation":"4440:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"4461:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":281,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:4","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"sender","nameLocation":"4868:6:4","nodeType":"VariableDeclaration","scope":281,"src":"4860:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"balance","nameLocation":"4884:7:4","nodeType":"VariableDeclaration","scope":281,"src":"4876:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"needed","nameLocation":"4901:6:4","nodeType":"VariableDeclaration","scope":281,"src":"4893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:4","nodeType":"VariableDeclaration","scope":281,"src":"4909:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:4"},"src":"4827:99:4"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"4932:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":286,"name":"ERC1155InvalidSender","nameLocation":"5095:20:4","nodeType":"ErrorDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"sender","nameLocation":"5124:6:4","nodeType":"VariableDeclaration","scope":286,"src":"5116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:4"},"src":"5089:43:4"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"5138:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":291,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:4","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:4","nodeType":"VariableDeclaration","scope":291,"src":"5331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:4"},"src":"5302:47:4"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5355:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":298,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:4","nodeType":"ErrorDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"operator","nameLocation":"5659:8:4","nodeType":"VariableDeclaration","scope":298,"src":"5651:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"owner","nameLocation":"5677:5:4","nodeType":"VariableDeclaration","scope":298,"src":"5669:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:4"},"src":"5616:68:4"},{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"5690:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":303,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:4","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"approver","nameLocation":"5906:8:4","nodeType":"VariableDeclaration","scope":303,"src":"5898:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:4"},"src":"5869:47:4"},{"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"5922:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":308,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:4","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"operator","nameLocation":"6161:8:4","nodeType":"VariableDeclaration","scope":308,"src":"6153:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:4"},"src":"6124:47:4"},{"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"6177:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":315,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:4","nodeType":"ErrorDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:4","nodeType":"VariableDeclaration","scope":315,"src":"6494:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:4","nodeType":"VariableDeclaration","scope":315,"src":"6513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:4"},"src":"6462:73:4"}],"scope":317,"src":"4430:2107:4","usedErrors":[281,286,291,298,303,308,315],"usedEvents":[]}],"src":"112:6426:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[3769],"Context":[3831],"ERC1155":[1233],"ERC1155Utils":[1568],"ERC165":[5361],"IERC1155":[1356],"IERC1155Errors":[316],"IERC1155MetadataURI":[1414],"IERC165":[5373]},"id":1234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":318,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1234,"sourceUnit":1357,"src":"135:40:5","symbolAliases":[{"foreign":{"id":319,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"143:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1234,"sourceUnit":1415,"src":"176:73:5","symbolAliases":[{"foreign":{"id":321,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"184:19:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1234,"sourceUnit":1569,"src":"250:54:5","symbolAliases":[{"foreign":{"id":323,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"258:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1234,"sourceUnit":3832,"src":"305:48:5","symbolAliases":[{"foreign":{"id":325,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"313:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":329,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1234,"sourceUnit":5362,"src":"354:69:5","symbolAliases":[{"foreign":{"id":327,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"362:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":328,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"371:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":331,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1234,"sourceUnit":3770,"src":"424:46:5","symbolAliases":[{"foreign":{"id":330,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"432:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":333,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1234,"sourceUnit":317,"src":"471:67:5","symbolAliases":[{"foreign":{"id":332,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"479:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":335,"name":"Context","nameLocations":["754:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3831,"src":"754:7:5"},"id":336,"nodeType":"InheritanceSpecifier","src":"754:7:5"},{"baseName":{"id":337,"name":"ERC165","nameLocations":["763:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"763:6:5"},"id":338,"nodeType":"InheritanceSpecifier","src":"763:6:5"},{"baseName":{"id":339,"name":"IERC1155","nameLocations":["771:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1356,"src":"771:8:5"},"id":340,"nodeType":"InheritanceSpecifier","src":"771:8:5"},{"baseName":{"id":341,"name":"IERC1155MetadataURI","nameLocations":["781:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1414,"src":"781:19:5"},"id":342,"nodeType":"InheritanceSpecifier","src":"781:19:5"},{"baseName":{"id":343,"name":"IERC1155Errors","nameLocations":["802:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":316,"src":"802:14:5"},"id":344,"nodeType":"InheritanceSpecifier","src":"802:14:5"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"540:184:5","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1233,"linearizedBaseContracts":[1233,316,1414,1356,5361,5373,3831],"name":"ERC1155","nameLocation":"743:7:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":348,"libraryName":{"id":345,"name":"Arrays","nameLocations":["829:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3769,"src":"829:6:5"},"nodeType":"UsingForDirective","src":"823:27:5","typeName":{"baseType":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":347,"nodeType":"ArrayTypeName","src":"840:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":352,"libraryName":{"id":349,"name":"Arrays","nameLocations":["861:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3769,"src":"861:6:5"},"nodeType":"UsingForDirective","src":"855:27:5","typeName":{"baseType":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":351,"nodeType":"ArrayTypeName","src":"872:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":358,"mutability":"mutable","name":"_balances","nameLocation":"955:9:5","nodeType":"VariableDeclaration","scope":1233,"src":"888:76:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":357,"keyName":"id","keyNameLocation":"904:2:5","keyType":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":356,"keyName":"account","keyNameLocation":"926:7:5","keyType":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":364,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:5","nodeType":"VariableDeclaration","scope":1233,"src":"971:88:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":363,"keyName":"account","keyNameLocation":"987:7:5","keyType":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":362,"keyName":"operator","keyNameLocation":"1014:8:5","keyType":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":361,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":366,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:5","nodeType":"VariableDeclaration","scope":1233,"src":"1180:19:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":365,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":376,"nodeType":"Block","src":"1281:30:5","statements":[{"expression":{"arguments":[{"id":373,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"1299:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":372,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"1291:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":375,"nodeType":"ExpressionStatement","src":"1291:13:5"}]},"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"1206:38:5","text":" @dev See {_setURI}."},"id":377,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:5","nodeType":"VariableDeclaration","scope":377,"src":"1261:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":368,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:5"},"returnParameters":{"id":371,"nodeType":"ParameterList","parameters":[],"src":"1281:0:5"},"scope":1233,"src":"1249:62:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5360,5372],"body":{"id":407,"nodeType":"Block","src":"1486:197:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":388,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"1515:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":390,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"1535:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1356_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1356_$","typeString":"type(contract IERC1155)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1530:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1356","typeString":"type(contract IERC1155)"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1545:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1530:26:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1515:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":394,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"1572:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":396,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"1592:19:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1414_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1414_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":395,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1587:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1587:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1414","typeString":"type(contract IERC1155MetadataURI)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1613:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1587:37:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1572:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:109:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":403,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"1664:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":401,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1640:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1233_$","typeString":"type(contract super ERC1155)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:17:5","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5360,"src":"1640:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:161:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":387,"id":406,"nodeType":"Return","src":"1496:180:5"}]},"documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"1317:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":408,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1387:17:5","nodeType":"FunctionDefinition","overrides":{"id":384,"nodeType":"OverrideSpecifier","overrides":[{"id":382,"name":"ERC165","nameLocations":["1454:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"1454:6:5"},{"id":383,"name":"IERC165","nameLocations":["1462:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":5373,"src":"1462:7:5"}],"src":"1445:25:5"},"parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"interfaceId","nameLocation":"1412:11:5","nodeType":"VariableDeclaration","scope":408,"src":"1405:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":379,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1405:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1404:20:5"},"returnParameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":408,"src":"1480:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":385,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1479:6:5"},"scope":1233,"src":"1378:305:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1413],"body":{"id":418,"nodeType":"Block","src":"2157:28:5","statements":[{"expression":{"id":416,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"2174:4:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":415,"id":417,"nodeType":"Return","src":"2167:11:5"}]},"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"1689:388:5","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":419,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2091:3:5","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":419,"src":"2095:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:18:5"},"returnParameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":419,"src":"2142:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":413,"name":"string","nodeType":"ElementaryTypeName","src":"2142:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2141:15:5"},"scope":1233,"src":"2082:103:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1294],"body":{"id":435,"nodeType":"Block","src":"2331:46:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":429,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"2348:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":431,"indexExpression":{"id":430,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2358:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":433,"indexExpression":{"id":432,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"2362:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":428,"id":434,"nodeType":"Return","src":"2341:29:5"}]},"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"2191:49:5","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":436,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2254:9:5","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"account","nameLocation":"2272:7:5","nodeType":"VariableDeclaration","scope":436,"src":"2264:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"id","nameLocation":"2289:2:5","nodeType":"VariableDeclaration","scope":436,"src":"2281:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":423,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:29:5"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":436,"src":"2322:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2321:9:5"},"scope":1233,"src":"2245:132:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1307],"body":{"id":505,"nodeType":"Block","src":"2676:410:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":449,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2690:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2699:6:5","memberName":"length","nodeType":"MemberAccess","src":"2690:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":451,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"2709:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:5","memberName":"length","nodeType":"MemberAccess","src":"2709:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2690:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"IfStatement","src":"2686:121:5","trueBody":{"id":461,"nodeType":"Block","src":"2721:86:5","statements":[{"errorCall":{"arguments":[{"expression":{"id":455,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"2768:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:6:5","memberName":"length","nodeType":"MemberAccess","src":"2768:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":457,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2780:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2789:6:5","memberName":"length","nodeType":"MemberAccess","src":"2780:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":454,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2742:25:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"RevertStatement","src":"2735:61:5"}]}},{"assignments":[467],"declarations":[{"constant":false,"id":467,"mutability":"mutable","name":"batchBalances","nameLocation":"2834:13:5","nodeType":"VariableDeclaration","scope":505,"src":"2817:30:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":466,"nodeType":"ArrayTypeName","src":"2817:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":474,"initialValue":{"arguments":[{"expression":{"id":471,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2864:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2873:6:5","memberName":"length","nodeType":"MemberAccess","src":"2864:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2850:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2854:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":469,"nodeType":"ArrayTypeName","src":"2854:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2817:63:5"},{"body":{"id":501,"nodeType":"Block","src":"2937:112:5","statements":[{"expression":{"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":486,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"2951:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":488,"indexExpression":{"id":487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2965:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2951:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":492,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"3008:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":490,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2980:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2989:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3709,"src":"2980:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":496,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"3035:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":494,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"3012:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3016:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"3012:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":489,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"2970:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:87:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":500,"nodeType":"ExpressionStatement","src":"2951:87:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2911:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":480,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2915:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:5","memberName":"length","nodeType":"MemberAccess","src":"2915:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":502,"initializationExpression":{"assignments":[476],"declarations":[{"constant":false,"id":476,"mutability":"mutable","name":"i","nameLocation":"2904:1:5","nodeType":"VariableDeclaration","scope":502,"src":"2896:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":478,"initialValue":{"hexValue":"30","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2896:13:5"},"loopExpression":{"expression":{"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2932:3:5","subExpression":{"id":483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2934:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":485,"nodeType":"ExpressionStatement","src":"2932:3:5"},"nodeType":"ForStatement","src":"2891:158:5"},{"expression":{"id":503,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"3066:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":448,"id":504,"nodeType":"Return","src":"3059:20:5"}]},"documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"2383:146:5","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":506,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2543:14:5","nodeType":"FunctionDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"accounts","nameLocation":"2584:8:5","nodeType":"VariableDeclaration","scope":506,"src":"2567:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":439,"nodeType":"ArrayTypeName","src":"2567:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"ids","nameLocation":"2619:3:5","nodeType":"VariableDeclaration","scope":506,"src":"2602:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":442,"nodeType":"ArrayTypeName","src":"2602:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2557:71:5"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":506,"src":"2658:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":446,"nodeType":"ArrayTypeName","src":"2658:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2657:18:5"},"scope":1233,"src":"2534:552:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1315],"body":{"id":521,"nodeType":"Block","src":"3229:69:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":515,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"3258:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":517,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"3272:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":518,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3282:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":514,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"3239:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"3239:52:5"}]},"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"3092:57:5","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":522,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3163:17:5","nodeType":"FunctionDefinition","parameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"operator","nameLocation":"3189:8:5","nodeType":"VariableDeclaration","scope":522,"src":"3181:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"approved","nameLocation":"3204:8:5","nodeType":"VariableDeclaration","scope":522,"src":"3199:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":510,"name":"bool","nodeType":"ElementaryTypeName","src":"3199:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3180:33:5"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[],"src":"3229:0:5"},"scope":1233,"src":"3154:144:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1325],"body":{"id":538,"nodeType":"Block","src":"3461:61:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":532,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"3478:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":534,"indexExpression":{"id":533,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3497:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":536,"indexExpression":{"id":535,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3506:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":531,"id":537,"nodeType":"Return","src":"3471:44:5"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3304:56:5","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":539,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3374:16:5","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"account","nameLocation":"3399:7:5","nodeType":"VariableDeclaration","scope":539,"src":"3391:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"operator","nameLocation":"3416:8:5","nodeType":"VariableDeclaration","scope":539,"src":"3408:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3390:35:5"},"returnParameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":539,"src":"3455:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":529,"name":"bool","nodeType":"ElementaryTypeName","src":"3455:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3454:6:5"},"scope":1233,"src":"3365:157:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1339],"body":{"id":582,"nodeType":"Block","src":"3702:238:5","statements":[{"assignments":[554],"declarations":[{"constant":false,"id":554,"mutability":"mutable","name":"sender","nameLocation":"3720:6:5","nodeType":"VariableDeclaration","scope":582,"src":"3712:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":557,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":555,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"3729:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3712:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":558,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3755:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":559,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3763:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3755:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3773:31:5","subExpression":{"arguments":[{"id":562,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3791:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":563,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3797:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":561,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"3774:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3755:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":573,"nodeType":"IfStatement","src":"3751:129:5","trueBody":{"id":572,"nodeType":"Block","src":"3806:74:5","statements":[{"errorCall":{"arguments":[{"id":568,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3856:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":569,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3864:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":567,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3827:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3827:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":571,"nodeType":"RevertStatement","src":"3820:49:5"}]}},{"expression":{"arguments":[{"id":575,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3907:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":576,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3913:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"3917:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"3921:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":579,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"3928:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":574,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3889:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"3889:44:5"}]},"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"3528:56:5","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":583,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3598:16:5","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"from","nameLocation":"3623:4:5","nodeType":"VariableDeclaration","scope":583,"src":"3615:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"3615:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"to","nameLocation":"3637:2:5","nodeType":"VariableDeclaration","scope":583,"src":"3629:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"id","nameLocation":"3649:2:5","nodeType":"VariableDeclaration","scope":583,"src":"3641:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"value","nameLocation":"3661:5:5","nodeType":"VariableDeclaration","scope":583,"src":"3653:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":550,"mutability":"mutable","name":"data","nameLocation":"3681:4:5","nodeType":"VariableDeclaration","scope":583,"src":"3668:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":549,"name":"bytes","nodeType":"ElementaryTypeName","src":"3668:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3614:72:5"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[],"src":"3702:0:5"},"scope":1233,"src":"3589:351:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1355],"body":{"id":628,"nodeType":"Block","src":"4196:245:5","statements":[{"assignments":[600],"declarations":[{"constant":false,"id":600,"mutability":"mutable","name":"sender","nameLocation":"4214:6:5","nodeType":"VariableDeclaration","scope":628,"src":"4206:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"4206:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":603,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":601,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"4223:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4206:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":604,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4249:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":605,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"4257:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4249:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4267:31:5","subExpression":{"arguments":[{"id":608,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4285:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":609,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"4291:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":607,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4268:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4268:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4249:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":619,"nodeType":"IfStatement","src":"4245:129:5","trueBody":{"id":618,"nodeType":"Block","src":"4300:74:5","statements":[{"errorCall":{"arguments":[{"id":614,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"4350:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":615,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4358:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":613,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"4321:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"RevertStatement","src":"4314:49:5"}]}},{"expression":{"arguments":[{"id":621,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4406:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4412:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":623,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"4416:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":624,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4421:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":625,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"4429:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":620,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"4383:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":627,"nodeType":"ExpressionStatement","src":"4383:51:5"}]},"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"3946:61:5","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":629,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4021:21:5","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"from","nameLocation":"4060:4:5","nodeType":"VariableDeclaration","scope":629,"src":"4052:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":585,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"to","nameLocation":"4082:2:5","nodeType":"VariableDeclaration","scope":629,"src":"4074:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"ids","nameLocation":"4111:3:5","nodeType":"VariableDeclaration","scope":629,"src":"4094:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":589,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":590,"nodeType":"ArrayTypeName","src":"4094:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"values","nameLocation":"4141:6:5","nodeType":"VariableDeclaration","scope":629,"src":"4124:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":593,"nodeType":"ArrayTypeName","src":"4124:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":596,"mutability":"mutable","name":"data","nameLocation":"4170:4:5","nodeType":"VariableDeclaration","scope":629,"src":"4157:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":595,"name":"bytes","nodeType":"ElementaryTypeName","src":"4157:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4042:138:5"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"4196:0:5"},"scope":1233,"src":"4012:429:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":781,"nodeType":"Block","src":"5249:1174:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":643,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"5263:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5267:6:5","memberName":"length","nodeType":"MemberAccess","src":"5263:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":645,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"5277:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:5","memberName":"length","nodeType":"MemberAccess","src":"5277:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":656,"nodeType":"IfStatement","src":"5259:117:5","trueBody":{"id":655,"nodeType":"Block","src":"5292:84:5","statements":[{"errorCall":{"arguments":[{"expression":{"id":649,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"5339:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5343:6:5","memberName":"length","nodeType":"MemberAccess","src":"5339:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":651,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"5351:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5358:6:5","memberName":"length","nodeType":"MemberAccess","src":"5351:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":648,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5313:25:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"RevertStatement","src":"5306:59:5"}]}},{"assignments":[658],"declarations":[{"constant":false,"id":658,"mutability":"mutable","name":"operator","nameLocation":"5394:8:5","nodeType":"VariableDeclaration","scope":781,"src":"5386:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"5386:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":661,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":659,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"5405:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5386:31:5"},{"body":{"id":742,"nodeType":"Block","src":"5469:650:5","statements":[{"assignments":[674],"declarations":[{"constant":false,"id":674,"mutability":"mutable","name":"id","nameLocation":"5491:2:5","nodeType":"VariableDeclaration","scope":742,"src":"5483:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":673,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":679,"initialValue":{"arguments":[{"id":677,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"5519:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":675,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"5496:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5500:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"5496:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5483:38:5"},{"assignments":[681],"declarations":[{"constant":false,"id":681,"mutability":"mutable","name":"value","nameLocation":"5543:5:5","nodeType":"VariableDeclaration","scope":742,"src":"5535:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"5535:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":686,"initialValue":{"arguments":[{"id":684,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"5577:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":682,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"5551:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5558:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"5551:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5551:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5535:44:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":687,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5598:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5614:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5606:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"5606:7:5","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5598:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":725,"nodeType":"IfStatement","src":"5594:420:5","trueBody":{"id":724,"nodeType":"Block","src":"5618:396:5","statements":[{"assignments":[694],"declarations":[{"constant":false,"id":694,"mutability":"mutable","name":"fromBalance","nameLocation":"5644:11:5","nodeType":"VariableDeclaration","scope":724,"src":"5636:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"5636:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":700,"initialValue":{"baseExpression":{"baseExpression":{"id":695,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5658:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":697,"indexExpression":{"id":696,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5668:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":699,"indexExpression":{"id":698,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5672:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5636:41:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":701,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"5699:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5713:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":712,"nodeType":"IfStatement","src":"5695:129:5","trueBody":{"id":711,"nodeType":"Block","src":"5720:104:5","statements":[{"errorCall":{"arguments":[{"id":705,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5776:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":706,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"5782:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5795:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":708,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5802:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":704,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"5749:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":710,"nodeType":"RevertStatement","src":"5742:63:5"}]}},{"id":723,"nodeType":"UncheckedBlock","src":"5841:159:5","statements":[{"expression":{"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":713,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5940:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":716,"indexExpression":{"id":714,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"5950:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5940:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":717,"indexExpression":{"id":715,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5954:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5940:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":718,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"5962:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5976:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5962:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5940:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":722,"nodeType":"ExpressionStatement","src":"5940:41:5"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":726,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"6032:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6046:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6038:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:5","typeDescriptions":{}}},"id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6032:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":741,"nodeType":"IfStatement","src":"6028:81:5","trueBody":{"id":740,"nodeType":"Block","src":"6050:59:5","statements":[{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":732,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"6068:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":735,"indexExpression":{"id":733,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"6078:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6068:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":736,"indexExpression":{"id":734,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"6082:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6068:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6089:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6068:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"6068:26:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":666,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"5448:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":667,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"5452:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:6:5","memberName":"length","nodeType":"MemberAccess","src":"5452:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5448:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":743,"initializationExpression":{"assignments":[663],"declarations":[{"constant":false,"id":663,"mutability":"mutable","name":"i","nameLocation":"5441:1:5","nodeType":"VariableDeclaration","scope":743,"src":"5433:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":662,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":665,"initialValue":{"hexValue":"30","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5445:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5433:13:5"},"loopExpression":{"expression":{"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5464:3:5","subExpression":{"id":670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"5466:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":672,"nodeType":"ExpressionStatement","src":"5464:3:5"},"nodeType":"ForStatement","src":"5428:691:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":744,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"6133:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6137:6:5","memberName":"length","nodeType":"MemberAccess","src":"6133:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6147:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6133:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":779,"nodeType":"Block","src":"6341:76:5","statements":[{"eventCall":{"arguments":[{"id":772,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"6374:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":773,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"6384:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":774,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"6390:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"6394:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":776,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"6399:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":771,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6360:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"EmitStatement","src":"6355:51:5"}]},"id":780,"nodeType":"IfStatement","src":"6129:288:5","trueBody":{"id":770,"nodeType":"Block","src":"6150:185:5","statements":[{"assignments":[749],"declarations":[{"constant":false,"id":749,"mutability":"mutable","name":"id","nameLocation":"6172:2:5","nodeType":"VariableDeclaration","scope":770,"src":"6164:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint256","nodeType":"ElementaryTypeName","src":"6164:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":754,"initialValue":{"arguments":[{"hexValue":"30","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6200:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":750,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"6177:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"6177:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6177:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6164:38:5"},{"assignments":[756],"declarations":[{"constant":false,"id":756,"mutability":"mutable","name":"value","nameLocation":"6224:5:5","nodeType":"VariableDeclaration","scope":770,"src":"6216:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":761,"initialValue":{"arguments":[{"hexValue":"30","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6258:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":757,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"6232:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"6232:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:44:5"},{"eventCall":{"arguments":[{"id":763,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"6294:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"6304:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":765,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"6310:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":766,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6314:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"6318:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":762,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"6279:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":769,"nodeType":"EmitStatement","src":"6274:50:5"}]}}]},"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"4447:690:5","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":782,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5151:7:5","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"from","nameLocation":"5167:4:5","nodeType":"VariableDeclaration","scope":782,"src":"5159:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"to","nameLocation":"5181:2:5","nodeType":"VariableDeclaration","scope":782,"src":"5173:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"ids","nameLocation":"5202:3:5","nodeType":"VariableDeclaration","scope":782,"src":"5185:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"5185:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":636,"nodeType":"ArrayTypeName","src":"5185:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"values","nameLocation":"5224:6:5","nodeType":"VariableDeclaration","scope":782,"src":"5207:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":639,"nodeType":"ArrayTypeName","src":"5207:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5158:73:5"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"5249:0:5"},"scope":1233,"src":"5142:1281:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":861,"nodeType":"Block","src":"7193:509:5","statements":[{"expression":{"arguments":[{"id":799,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"7211:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":800,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7217:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":801,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"7221:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":802,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7226:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":798,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"7203:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"ExpressionStatement","src":"7203:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":805,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7247:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7253:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:5","typeDescriptions":{}}},"id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7247:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":860,"nodeType":"IfStatement","src":"7243:453:5","trueBody":{"id":859,"nodeType":"Block","src":"7265:431:5","statements":[{"assignments":[812],"declarations":[{"constant":false,"id":812,"mutability":"mutable","name":"operator","nameLocation":"7287:8:5","nodeType":"VariableDeclaration","scope":859,"src":"7279:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"7279:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":815,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":813,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"7298:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7279:31:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":816,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"7328:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7332:6:5","memberName":"length","nodeType":"MemberAccess","src":"7328:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7328:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":857,"nodeType":"Block","src":"7574:112:5","statements":[{"expression":{"arguments":[{"id":849,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"7633:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":850,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"7643:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":851,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7649:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":852,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"7653:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":853,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7658:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":854,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7666:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":846,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"7592:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1568_$","typeString":"type(library ERC1155Utils)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:27:5","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1567,"src":"7592:40:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7592:79:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":856,"nodeType":"ExpressionStatement","src":"7592:79:5"}]},"id":858,"nodeType":"IfStatement","src":"7324:362:5","trueBody":{"id":845,"nodeType":"Block","src":"7345:223:5","statements":[{"assignments":[821],"declarations":[{"constant":false,"id":821,"mutability":"mutable","name":"id","nameLocation":"7371:2:5","nodeType":"VariableDeclaration","scope":845,"src":"7363:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"7363:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":826,"initialValue":{"arguments":[{"hexValue":"30","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7399:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":822,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"7376:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7380:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"7376:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7363:38:5"},{"assignments":[828],"declarations":[{"constant":false,"id":828,"mutability":"mutable","name":"value","nameLocation":"7427:5:5","nodeType":"VariableDeclaration","scope":845,"src":"7419:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":833,"initialValue":{"arguments":[{"hexValue":"30","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7461:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":829,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7435:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7442:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"7435:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7419:44:5"},{"expression":{"arguments":[{"id":837,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"7517:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":838,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"7527:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"7533:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":840,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"7537:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"7541:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":842,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7548:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":834,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"7481:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1568_$","typeString":"type(library ERC1155Utils)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7494:22:5","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1493,"src":"7481:35:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"ExpressionStatement","src":"7481:72:5"}]}}]}}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"6429:568:5","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":862,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7011:26:5","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"from","nameLocation":"7055:4:5","nodeType":"VariableDeclaration","scope":862,"src":"7047:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"7047:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"to","nameLocation":"7077:2:5","nodeType":"VariableDeclaration","scope":862,"src":"7069:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"7069:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"ids","nameLocation":"7106:3:5","nodeType":"VariableDeclaration","scope":862,"src":"7089:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":789,"nodeType":"ArrayTypeName","src":"7089:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"values","nameLocation":"7136:6:5","nodeType":"VariableDeclaration","scope":862,"src":"7119:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"7119:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":792,"nodeType":"ArrayTypeName","src":"7119:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"data","nameLocation":"7165:4:5","nodeType":"VariableDeclaration","scope":862,"src":"7152:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":794,"name":"bytes","nodeType":"ElementaryTypeName","src":"7152:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7037:138:5"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"7193:0:5"},"scope":1233,"src":"7002:700:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":927,"nodeType":"Block","src":"8267:355:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":876,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"8281:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8295:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8287:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"8287:7:5","typeDescriptions":{}}},"id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8287:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8281:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":890,"nodeType":"IfStatement","src":"8277:88:5","trueBody":{"id":889,"nodeType":"Block","src":"8299:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8351:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8343:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:5","typeDescriptions":{}}},"id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":882,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"8320:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8320:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":888,"nodeType":"RevertStatement","src":"8313:41:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":891,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8378:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8394:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:5","typeDescriptions":{}}},"id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8386:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8378:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":905,"nodeType":"IfStatement","src":"8374:88:5","trueBody":{"id":904,"nodeType":"Block","src":"8398:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8448:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8440:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"8440:7:5","typeDescriptions":{}}},"id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8440:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":897,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8419:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"RevertStatement","src":"8412:39:5"}]}},{"assignments":[910,913],"declarations":[{"constant":false,"id":910,"mutability":"mutable","name":"ids","nameLocation":"8489:3:5","nodeType":"VariableDeclaration","scope":927,"src":"8472:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"8472:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":909,"nodeType":"ArrayTypeName","src":"8472:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":913,"mutability":"mutable","name":"values","nameLocation":"8511:6:5","nodeType":"VariableDeclaration","scope":927,"src":"8494:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":911,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":912,"nodeType":"ArrayTypeName","src":"8494:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":918,"initialValue":{"arguments":[{"id":915,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"8540:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"8544:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":914,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"8521:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8471:79:5"},{"expression":{"arguments":[{"id":920,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8587:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":921,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"8593:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":922,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"8597:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":923,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"8602:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":924,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"8610:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":919,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"8560:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"ExpressionStatement","src":"8560:55:5"}]},"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"7708:446:5","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":928,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8168:17:5","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"from","nameLocation":"8194:4:5","nodeType":"VariableDeclaration","scope":928,"src":"8186:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"8186:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"to","nameLocation":"8208:2:5","nodeType":"VariableDeclaration","scope":928,"src":"8200:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"8200:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"id","nameLocation":"8220:2:5","nodeType":"VariableDeclaration","scope":928,"src":"8212:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"8232:5:5","nodeType":"VariableDeclaration","scope":928,"src":"8224:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"8224:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"data","nameLocation":"8252:4:5","nodeType":"VariableDeclaration","scope":928,"src":"8239:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":872,"name":"bytes","nodeType":"ElementaryTypeName","src":"8239:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8185:72:5"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[],"src":"8267:0:5"},"scope":1233,"src":"8159:463:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":982,"nodeType":"Block","src":"9202:266:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":944,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"9216:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9230:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9222:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"9222:7:5","typeDescriptions":{}}},"id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9216:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":958,"nodeType":"IfStatement","src":"9212:88:5","trueBody":{"id":957,"nodeType":"Block","src":"9234:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9278:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:5","typeDescriptions":{}}},"id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":950,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"9255:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":956,"nodeType":"RevertStatement","src":"9248:41:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":959,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"9313:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:5","typeDescriptions":{}}},"id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9313:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":973,"nodeType":"IfStatement","src":"9309:88:5","trueBody":{"id":972,"nodeType":"Block","src":"9333:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9383:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9375:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:5","typeDescriptions":{}}},"id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":965,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"9354:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"RevertStatement","src":"9347:39:5"}]}},{"expression":{"arguments":[{"id":975,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"9433:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":976,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"9439:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":977,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"9443:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":978,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"9448:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":979,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"9456:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":974,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"9406:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9406:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":981,"nodeType":"ExpressionStatement","src":"9406:55:5"}]},"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"8628:390:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":983,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9032:22:5","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"from","nameLocation":"9072:4:5","nodeType":"VariableDeclaration","scope":983,"src":"9064:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"9064:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"to","nameLocation":"9094:2:5","nodeType":"VariableDeclaration","scope":983,"src":"9086:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"ids","nameLocation":"9123:3:5","nodeType":"VariableDeclaration","scope":983,"src":"9106:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"9106:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":935,"nodeType":"ArrayTypeName","src":"9106:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"values","nameLocation":"9153:6:5","nodeType":"VariableDeclaration","scope":983,"src":"9136:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"9136:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":938,"nodeType":"ArrayTypeName","src":"9136:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"data","nameLocation":"9182:4:5","nodeType":"VariableDeclaration","scope":983,"src":"9169:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":940,"name":"bytes","nodeType":"ElementaryTypeName","src":"9169:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9054:138:5"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[],"src":"9202:0:5"},"scope":1233,"src":"9023:445:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":993,"nodeType":"Block","src":"10346:30:5","statements":[{"expression":{"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":989,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"10356:4:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":990,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"10363:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10356:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":992,"nodeType":"ExpressionStatement","src":"10356:13:5"}]},"documentation":{"id":984,"nodeType":"StructuredDocumentation","src":"9474:811:5","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":994,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10299:7:5","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"newuri","nameLocation":"10321:6:5","nodeType":"VariableDeclaration","scope":994,"src":"10307:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":985,"name":"string","nodeType":"ElementaryTypeName","src":"10307:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10306:22:5"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"10346:0:5"},"scope":1233,"src":"10290:86:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"10836:264:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"10850:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10864:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10856:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"10856:7:5","typeDescriptions":{}}},"id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10850:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1020,"nodeType":"IfStatement","src":"10846:88:5","trueBody":{"id":1019,"nodeType":"Block","src":"10868:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10920:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10912:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"10912:7:5","typeDescriptions":{}}},"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10912:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1012,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"10889:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"RevertStatement","src":"10882:41:5"}]}},{"assignments":[1025,1028],"declarations":[{"constant":false,"id":1025,"mutability":"mutable","name":"ids","nameLocation":"10961:3:5","nodeType":"VariableDeclaration","scope":1045,"src":"10944:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1024,"nodeType":"ArrayTypeName","src":"10944:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"values","nameLocation":"10983:6:5","nodeType":"VariableDeclaration","scope":1045,"src":"10966:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"10966:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1027,"nodeType":"ArrayTypeName","src":"10966:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1033,"initialValue":{"arguments":[{"id":1030,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"11012:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"11016:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1029,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"10993:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10993:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10943:79:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11067:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11059:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"11059:7:5","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11059:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"11071:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1040,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11075:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1041,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"11080:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1042,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"11088:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1034,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"11032:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"ExpressionStatement","src":"11032:61:5"}]},"documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"10382:367:5","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10763:5:5","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"to","nameLocation":"10777:2:5","nodeType":"VariableDeclaration","scope":1046,"src":"10769:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"10769:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":999,"mutability":"mutable","name":"id","nameLocation":"10789:2:5","nodeType":"VariableDeclaration","scope":1046,"src":"10781:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"10781:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"value","nameLocation":"10801:5:5","nodeType":"VariableDeclaration","scope":1046,"src":"10793:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"data","nameLocation":"10821:4:5","nodeType":"VariableDeclaration","scope":1046,"src":"10808:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1002,"name":"bytes","nodeType":"ElementaryTypeName","src":"10808:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10768:58:5"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[],"src":"10836:0:5"},"scope":1233,"src":"10754:346:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1086,"nodeType":"Block","src":"11638:175:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1060,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"11652:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11666:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11658:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"11658:7:5","typeDescriptions":{}}},"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11658:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11652:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1074,"nodeType":"IfStatement","src":"11648:88:5","trueBody":{"id":1073,"nodeType":"Block","src":"11670:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11722:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11714:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:5","typeDescriptions":{}}},"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11714:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1066,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"11691:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1072,"nodeType":"RevertStatement","src":"11684:41:5"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11780:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11772:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"11772:7:5","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11772:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1080,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"11784:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1081,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"11788:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1082,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"11793:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1083,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"11801:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1075,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"11745:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1085,"nodeType":"ExpressionStatement","src":"11745:61:5"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"11106:420:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1087,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11540:10:5","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"to","nameLocation":"11559:2:5","nodeType":"VariableDeclaration","scope":1087,"src":"11551:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"ids","nameLocation":"11580:3:5","nodeType":"VariableDeclaration","scope":1087,"src":"11563:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1051,"nodeType":"ArrayTypeName","src":"11563:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"values","nameLocation":"11602:6:5","nodeType":"VariableDeclaration","scope":1087,"src":"11585:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"11585:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1054,"nodeType":"ArrayTypeName","src":"11585:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"data","nameLocation":"11623:4:5","nodeType":"VariableDeclaration","scope":1087,"src":"11610:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1056,"name":"bytes","nodeType":"ElementaryTypeName","src":"11610:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11550:78:5"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[],"src":"11638:0:5"},"scope":1233,"src":"11531:282:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1136,"nodeType":"Block","src":"12172:264:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1097,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"12186:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12202:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12194:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:5","typeDescriptions":{}}},"id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12194:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12186:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1111,"nodeType":"IfStatement","src":"12182:88:5","trueBody":{"id":1110,"nodeType":"Block","src":"12206:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12256:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12248:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"12248:7:5","typeDescriptions":{}}},"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1103,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"12227:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1109,"nodeType":"RevertStatement","src":"12220:39:5"}]}},{"assignments":[1116,1119],"declarations":[{"constant":false,"id":1116,"mutability":"mutable","name":"ids","nameLocation":"12297:3:5","nodeType":"VariableDeclaration","scope":1136,"src":"12280:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1115,"nodeType":"ArrayTypeName","src":"12280:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"values","nameLocation":"12319:6:5","nodeType":"VariableDeclaration","scope":1136,"src":"12302:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"12302:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1118,"nodeType":"ArrayTypeName","src":"12302:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1124,"initialValue":{"arguments":[{"id":1121,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"12348:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"12352:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1120,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"12329:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12279:79:5"},{"expression":{"arguments":[{"id":1126,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"12395:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12409:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12401:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"12401:7:5","typeDescriptions":{}}},"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12401:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1131,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"12413:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1132,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"12418:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12426:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1125,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"12368:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1135,"nodeType":"ExpressionStatement","src":"12368:61:5"}]},"documentation":{"id":1088,"nodeType":"StructuredDocumentation","src":"11819:283:5","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1137,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12116:5:5","nodeType":"FunctionDefinition","parameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"from","nameLocation":"12130:4:5","nodeType":"VariableDeclaration","scope":1137,"src":"12122:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"12122:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"id","nameLocation":"12144:2:5","nodeType":"VariableDeclaration","scope":1137,"src":"12136:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"value","nameLocation":"12156:5:5","nodeType":"VariableDeclaration","scope":1137,"src":"12148:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"12148:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12121:41:5"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[],"src":"12172:0:5"},"scope":1233,"src":"12107:329:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1175,"nodeType":"Block","src":"12882:175:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1149,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"12896:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12912:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12904:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"12904:7:5","typeDescriptions":{}}},"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12896:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1163,"nodeType":"IfStatement","src":"12892:88:5","trueBody":{"id":1162,"nodeType":"Block","src":"12916:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12958:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"12958:7:5","typeDescriptions":{}}},"id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1155,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"12937:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1161,"nodeType":"RevertStatement","src":"12930:39:5"}]}},{"expression":{"arguments":[{"id":1165,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"13016:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13022:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"13022:7:5","typeDescriptions":{}}},"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1170,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"13034:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1171,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"13039:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13047:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1164,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"12989:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1174,"nodeType":"ExpressionStatement","src":"12989:61:5"}]},"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"12442:345:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1176,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12801:10:5","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"from","nameLocation":"12820:4:5","nodeType":"VariableDeclaration","scope":1176,"src":"12812:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"12812:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"ids","nameLocation":"12843:3:5","nodeType":"VariableDeclaration","scope":1176,"src":"12826:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1142,"nodeType":"ArrayTypeName","src":"12826:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"values","nameLocation":"12865:6:5","nodeType":"VariableDeclaration","scope":1176,"src":"12848:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"12848:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1145,"nodeType":"ArrayTypeName","src":"12848:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12811:61:5"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[],"src":"12882:0:5"},"scope":1233,"src":"12792:265:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1215,"nodeType":"Block","src":"13369:222:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1186,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"13383:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13403:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13395:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"13395:7:5","typeDescriptions":{}}},"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13395:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13383:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1200,"nodeType":"IfStatement","src":"13379:94:5","trueBody":{"id":1199,"nodeType":"Block","src":"13407:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13459:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13451:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"13451:7:5","typeDescriptions":{}}},"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1192,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"13428:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13428:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1198,"nodeType":"RevertStatement","src":"13421:41:5"}]}},{"expression":{"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1201,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"13482:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1204,"indexExpression":{"id":1202,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"13501:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13482:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1205,"indexExpression":{"id":1203,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"13508:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13482:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1206,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"13520:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13482:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1208,"nodeType":"ExpressionStatement","src":"13482:46:5"},{"eventCall":{"arguments":[{"id":1210,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"13558:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1211,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"13565:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"13575:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1209,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"13543:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13543:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1214,"nodeType":"EmitStatement","src":"13538:46:5"}]},"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"13063:208:5","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1216,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13285:18:5","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"owner","nameLocation":"13312:5:5","nodeType":"VariableDeclaration","scope":1216,"src":"13304:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"13304:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"operator","nameLocation":"13327:8:5","nodeType":"VariableDeclaration","scope":1216,"src":"13319:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"13319:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"approved","nameLocation":"13342:8:5","nodeType":"VariableDeclaration","scope":1216,"src":"13337:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1182,"name":"bool","nodeType":"ElementaryTypeName","src":"13337:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13303:48:5"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[],"src":"13369:0:5"},"scope":1233,"src":"13276:315:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1231,"nodeType":"Block","src":"13865:664:5","statements":[{"AST":{"nodeType":"YulBlock","src":"13900:623:5","statements":[{"nodeType":"YulAssignment","src":"13958:21:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13974:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13968:5:5"},"nodeType":"YulFunctionCall","src":"13968:11:5"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"13958:6:5"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14036:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14044:1:5","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14029:6:5"},"nodeType":"YulFunctionCall","src":"14029:17:5"},"nodeType":"YulExpressionStatement","src":"14029:17:5"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14167:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14175:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:5"},"nodeType":"YulFunctionCall","src":"14163:17:5"},{"name":"element1","nodeType":"YulIdentifier","src":"14182:8:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14156:6:5"},"nodeType":"YulFunctionCall","src":"14156:35:5"},"nodeType":"YulExpressionStatement","src":"14156:35:5"},{"nodeType":"YulAssignment","src":"14282:27:5","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14296:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14304:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:5"},"nodeType":"YulFunctionCall","src":"14292:17:5"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"14282:6:5"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14329:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14337:1:5","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14322:6:5"},"nodeType":"YulFunctionCall","src":"14322:17:5"},"nodeType":"YulExpressionStatement","src":"14322:17:5"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14363:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14371:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14359:3:5"},"nodeType":"YulFunctionCall","src":"14359:17:5"},{"name":"element2","nodeType":"YulIdentifier","src":"14378:8:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14352:6:5"},"nodeType":"YulFunctionCall","src":"14352:35:5"},"nodeType":"YulExpressionStatement","src":"14352:35:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14489:4:5","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14499:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14507:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14495:3:5"},"nodeType":"YulFunctionCall","src":"14495:17:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14482:6:5"},"nodeType":"YulFunctionCall","src":"14482:31:5"},"nodeType":"YulExpressionStatement","src":"14482:31:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1225,"isOffset":false,"isSlot":false,"src":"13958:6:5","valueSize":1},{"declaration":1225,"isOffset":false,"isSlot":false,"src":"14036:6:5","valueSize":1},{"declaration":1225,"isOffset":false,"isSlot":false,"src":"14167:6:5","valueSize":1},{"declaration":1225,"isOffset":false,"isSlot":false,"src":"14296:6:5","valueSize":1},{"declaration":1228,"isOffset":false,"isSlot":false,"src":"14282:6:5","valueSize":1},{"declaration":1228,"isOffset":false,"isSlot":false,"src":"14329:6:5","valueSize":1},{"declaration":1228,"isOffset":false,"isSlot":false,"src":"14363:6:5","valueSize":1},{"declaration":1228,"isOffset":false,"isSlot":false,"src":"14499:6:5","valueSize":1},{"declaration":1219,"isOffset":false,"isSlot":false,"src":"14182:8:5","valueSize":1},{"declaration":1221,"isOffset":false,"isSlot":false,"src":"14378:8:5","valueSize":1}],"flags":["memory-safe"],"id":1230,"nodeType":"InlineAssembly","src":"13875:648:5"}]},"documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"13597:105:5","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1232,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13716:18:5","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"element1","nameLocation":"13752:8:5","nodeType":"VariableDeclaration","scope":1232,"src":"13744:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"13744:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"element2","nameLocation":"13778:8:5","nodeType":"VariableDeclaration","scope":1232,"src":"13770:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"13770:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13734:58:5"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"array1","nameLocation":"13832:6:5","nodeType":"VariableDeclaration","scope":1232,"src":"13815:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1223,"name":"uint256","nodeType":"ElementaryTypeName","src":"13815:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1224,"nodeType":"ArrayTypeName","src":"13815:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1228,"mutability":"mutable","name":"array2","nameLocation":"13857:6:5","nodeType":"VariableDeclaration","scope":1232,"src":"13840:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"13840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1227,"nodeType":"ArrayTypeName","src":"13840:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13814:50:5"},"scope":1233,"src":"13707:822:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1234,"src":"725:13806:5","usedErrors":[281,286,291,298,303,308,315],"usedEvents":[1253,1268,1277,1284]}],"src":"109:14423:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1356],"IERC165":[5373]},"id":1357,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1235,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1357,"sourceUnit":5374,"src":"136:62:6","symbolAliases":[{"foreign":{"id":1236,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"144:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1239,"name":"IERC165","nameLocations":["359:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":5373,"src":"359:7:6"},"id":1240,"nodeType":"InheritanceSpecifier","src":"359:7:6"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"200:136:6","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1356,"linearizedBaseContracts":[1356,5373],"name":"IERC1155","nameLocation":"347:8:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"373:125:6","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1253,"name":"TransferSingle","nameLocation":"509:14:6","nodeType":"EventDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:6","nodeType":"VariableDeclaration","scope":1253,"src":"524:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:6","nodeType":"VariableDeclaration","scope":1253,"src":"550:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:6","nodeType":"VariableDeclaration","scope":1253,"src":"572:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:6","nodeType":"VariableDeclaration","scope":1253,"src":"592:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1251,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:6","nodeType":"VariableDeclaration","scope":1253,"src":"604:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:6"},"src":"503:116:6"},{"anonymous":false,"documentation":{"id":1254,"nodeType":"StructuredDocumentation","src":"625:144:6","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1268,"name":"TransferBatch","nameLocation":"780:13:6","nodeType":"EventDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:6","nodeType":"VariableDeclaration","scope":1268,"src":"803:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1258,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:6","nodeType":"VariableDeclaration","scope":1268,"src":"837:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1260,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:6","nodeType":"VariableDeclaration","scope":1268,"src":"867:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:6","nodeType":"VariableDeclaration","scope":1268,"src":"895:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1262,"nodeType":"ArrayTypeName","src":"895:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1266,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:6","nodeType":"VariableDeclaration","scope":1268,"src":"918:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1265,"nodeType":"ArrayTypeName","src":"918:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:6"},"src":"774:167:6"},{"anonymous":false,"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"947:147:6","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1277,"name":"ApprovalForAll","nameLocation":"1105:14:6","nodeType":"EventDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:6","nodeType":"VariableDeclaration","scope":1277,"src":"1120:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1273,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:6","nodeType":"VariableDeclaration","scope":1277,"src":"1145:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:6","nodeType":"VariableDeclaration","scope":1277,"src":"1171:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1274,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:6"},"src":"1099:87:6"},{"anonymous":false,"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"1192:343:6","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1284,"name":"URI","nameLocation":"1546:3:6","nodeType":"EventDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:6","nodeType":"VariableDeclaration","scope":1284,"src":"1550:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1279,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1282,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:6","nodeType":"VariableDeclaration","scope":1284,"src":"1564:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:6"},"src":"1540:44:6"},{"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"1590:90:6","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1294,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:6","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"account","nameLocation":"1712:7:6","nodeType":"VariableDeclaration","scope":1294,"src":"1704:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"id","nameLocation":"1729:2:6","nodeType":"VariableDeclaration","scope":1294,"src":"1721:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:6"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1294,"src":"1756:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:6"},"scope":1356,"src":"1685:80:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"1771:188:6","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1307,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:6","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:6","nodeType":"VariableDeclaration","scope":1307,"src":"1997:27:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1297,"nodeType":"ArrayTypeName","src":"1997:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"ids","nameLocation":"2053:3:6","nodeType":"VariableDeclaration","scope":1307,"src":"2034:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1300,"nodeType":"ArrayTypeName","src":"2034:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:6"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1307,"src":"2086:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1304,"nodeType":"ArrayTypeName","src":"2086:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:6"},"scope":1356,"src":"1964:140:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"2110:254:6","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1315,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:6","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"operator","nameLocation":"2404:8:6","nodeType":"VariableDeclaration","scope":1315,"src":"2396:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"approved","nameLocation":"2419:8:6","nodeType":"VariableDeclaration","scope":1315,"src":"2414:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1311,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:6"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[],"src":"2437:0:6"},"scope":1356,"src":"2369:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"2444:135:6","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1325,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:6","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"account","nameLocation":"2618:7:6","nodeType":"VariableDeclaration","scope":1325,"src":"2610:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"operator","nameLocation":"2635:8:6","nodeType":"VariableDeclaration","scope":1325,"src":"2627:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:6"},"returnParameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1325,"src":"2668:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1322,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:6"},"scope":1356,"src":"2584:90:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"2680:910:6","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1339,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3604:16:6","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"from","nameLocation":"3629:4:6","nodeType":"VariableDeclaration","scope":1339,"src":"3621:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"to","nameLocation":"3643:2:6","nodeType":"VariableDeclaration","scope":1339,"src":"3635:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"id","nameLocation":"3655:2:6","nodeType":"VariableDeclaration","scope":1339,"src":"3647:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"value","nameLocation":"3667:5:6","nodeType":"VariableDeclaration","scope":1339,"src":"3659:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"data","nameLocation":"3689:4:6","nodeType":"VariableDeclaration","scope":1339,"src":"3674:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1335,"name":"bytes","nodeType":"ElementaryTypeName","src":"3674:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3620:74:6"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[],"src":"3703:0:6"},"scope":1356,"src":"3595:109:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"3710:814:6","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1355,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4538:21:6","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"from","nameLocation":"4577:4:6","nodeType":"VariableDeclaration","scope":1355,"src":"4569:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"to","nameLocation":"4599:2:6","nodeType":"VariableDeclaration","scope":1355,"src":"4591:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"4591:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"ids","nameLocation":"4630:3:6","nodeType":"VariableDeclaration","scope":1355,"src":"4611:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1346,"nodeType":"ArrayTypeName","src":"4611:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"values","nameLocation":"4662:6:6","nodeType":"VariableDeclaration","scope":1355,"src":"4643:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1349,"nodeType":"ArrayTypeName","src":"4643:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"data","nameLocation":"4693:4:6","nodeType":"VariableDeclaration","scope":1355,"src":"4678:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1351,"name":"bytes","nodeType":"ElementaryTypeName","src":"4678:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4559:144:6"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"4712:0:6"},"scope":1356,"src":"4529:184:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1357,"src":"337:4378:6","usedErrors":[],"usedEvents":[1253,1268,1277,1284]}],"src":"110:4606:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1398],"IERC165":[5373]},"id":1399,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1358,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1360,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1399,"sourceUnit":5374,"src":"144:62:7","symbolAliases":[{"foreign":{"id":1359,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"152:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1362,"name":"IERC165","nameLocations":["357:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":5373,"src":"357:7:7"},"id":1363,"nodeType":"InheritanceSpecifier","src":"357:7:7"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"208:118:7","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1398,"linearizedBaseContracts":[1398,5373],"name":"IERC1155Receiver","nameLocation":"337:16:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"371:827:7","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1379,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:7","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"operator","nameLocation":"1247:8:7","nodeType":"VariableDeclaration","scope":1379,"src":"1239:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"from","nameLocation":"1273:4:7","nodeType":"VariableDeclaration","scope":1379,"src":"1265:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"id","nameLocation":"1295:2:7","nodeType":"VariableDeclaration","scope":1379,"src":"1287:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"value","nameLocation":"1315:5:7","nodeType":"VariableDeclaration","scope":1379,"src":"1307:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"data","nameLocation":"1345:4:7","nodeType":"VariableDeclaration","scope":1379,"src":"1330:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1373,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:7"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1379,"src":"1374:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1376,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:7"},"scope":1398,"src":"1203:179:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"1388:995:7","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1397,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:7","nodeType":"FunctionDefinition","parameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"operator","nameLocation":"2437:8:7","nodeType":"VariableDeclaration","scope":1397,"src":"2429:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"from","nameLocation":"2463:4:7","nodeType":"VariableDeclaration","scope":1397,"src":"2455:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"ids","nameLocation":"2496:3:7","nodeType":"VariableDeclaration","scope":1397,"src":"2477:22:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1386,"nodeType":"ArrayTypeName","src":"2477:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"values","nameLocation":"2528:6:7","nodeType":"VariableDeclaration","scope":1397,"src":"2509:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1388,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1389,"nodeType":"ArrayTypeName","src":"2509:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1392,"mutability":"mutable","name":"data","nameLocation":"2559:4:7","nodeType":"VariableDeclaration","scope":1397,"src":"2544:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1391,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:7"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1397,"src":"2588:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1394,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:7"},"scope":1398,"src":"2388:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1399,"src":"327:2271:7","usedErrors":[],"usedEvents":[]}],"src":"118:2481:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1356],"IERC1155MetadataURI":[1414]},"id":1415,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1400,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1402,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1415,"sourceUnit":1357,"src":"158:41:8","symbolAliases":[{"foreign":{"id":1401,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"166:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1404,"name":"IERC1155","nameLocations":["399:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1356,"src":"399:8:8"},"id":1405,"nodeType":"InheritanceSpecifier","src":"399:8:8"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"201:164:8","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1414,"linearizedBaseContracts":[1414,1356,5373],"name":"IERC1155MetadataURI","nameLocation":"376:19:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"414:192:8","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1413,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:8","nodeType":"FunctionDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"id","nameLocation":"632:2:8","nodeType":"VariableDeclaration","scope":1413,"src":"624:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:8"},"returnParameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1413,"src":"659:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1410,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:8"},"scope":1414,"src":"611:63:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1415,"src":"366:310:8","usedErrors":[],"usedEvents":[1253,1268,1277,1284]}],"src":"132:545:8"},"id":8},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1568],"IERC1155Errors":[316],"IERC1155Receiver":[1398]},"id":1569,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1416,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1569,"sourceUnit":1399,"src":"146:57:9","symbolAliases":[{"foreign":{"id":1417,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"154:16:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1569,"sourceUnit":317,"src":"204:70:9","symbolAliases":[{"foreign":{"id":1419,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"212:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1421,"nodeType":"StructuredDocumentation","src":"276:162:9","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1568,"linearizedBaseContracts":[1568],"name":"ERC1155Utils","nameLocation":"447:12:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1492,"nodeType":"Block","src":"1183:774:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1437,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"1197:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1200:4:9","memberName":"code","nodeType":"MemberAccess","src":"1197:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1205:6:9","memberName":"length","nodeType":"MemberAccess","src":"1197:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1197:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1491,"nodeType":"IfStatement","src":"1193:758:9","trueBody":{"id":1490,"nodeType":"Block","src":"1217:734:9","statements":[{"clauses":[{"block":{"id":1468,"nodeType":"Block","src":"1333:221:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1455,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"1355:8:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1456,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"1367:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1398_$","typeString":"type(contract IERC1155Receiver)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:17:9","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1379,"src":"1367:34:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1402:8:9","memberName":"selector","nodeType":"MemberAccess","src":"1367:43:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1355:55:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1467,"nodeType":"IfStatement","src":"1351:189:9","trueBody":{"id":1466,"nodeType":"Block","src":"1412:128:9","statements":[{"errorCall":{"arguments":[{"id":1463,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"1518:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1460,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"1480:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$316_$","typeString":"type(contract IERC1155Errors)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":291,"src":"1480:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1480:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1465,"nodeType":"RevertStatement","src":"1473:48:9"}]}}]},"errorName":"","id":1469,"nodeType":"TryCatchClause","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1453,"mutability":"mutable","name":"response","nameLocation":"1323:8:9","nodeType":"VariableDeclaration","scope":1469,"src":"1316:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1452,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1316:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1315:17:9"},"src":"1307:247:9"},{"block":{"id":1487,"nodeType":"Block","src":"1583:358:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1473,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"1605:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1612:6:9","memberName":"length","nodeType":"MemberAccess","src":"1605:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1622:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1605:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1485,"nodeType":"Block","src":"1776:151:9","statements":[{"AST":{"nodeType":"YulBlock","src":"1823:86:9","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1860:2:9","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1864:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1856:3:9"},"nodeType":"YulFunctionCall","src":"1856:15:9"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1879:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1873:5:9"},"nodeType":"YulFunctionCall","src":"1873:13:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1849:6:9"},"nodeType":"YulFunctionCall","src":"1849:38:9"},"nodeType":"YulExpressionStatement","src":"1849:38:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1471,"isOffset":false,"isSlot":false,"src":"1864:6:9","valueSize":1},{"declaration":1471,"isOffset":false,"isSlot":false,"src":"1879:6:9","valueSize":1}],"flags":["memory-safe"],"id":1484,"nodeType":"InlineAssembly","src":"1798:111:9"}]},"id":1486,"nodeType":"IfStatement","src":"1601:326:9","trueBody":{"id":1483,"nodeType":"Block","src":"1625:145:9","statements":[{"errorCall":{"arguments":[{"id":1480,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"1748:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1477,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"1710:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$316_$","typeString":"type(contract IERC1155Errors)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1725:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":291,"src":"1710:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1482,"nodeType":"RevertStatement","src":"1703:48:9"}]}}]},"errorName":"","id":1488,"nodeType":"TryCatchClause","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"reason","nameLocation":"1575:6:9","nodeType":"VariableDeclaration","scope":1488,"src":"1562:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1470,"name":"bytes","nodeType":"ElementaryTypeName","src":"1562:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1561:21:9"},"src":"1555:386:9"}],"externalCall":{"arguments":[{"id":1446,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"1274:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1447,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"1284:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1448,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"1290:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"1294:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1450,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"1301:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"1252:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1442,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"1235:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1398_$","typeString":"type(contract IERC1155Receiver)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1398","typeString":"contract IERC1155Receiver"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1256:17:9","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1379,"src":"1235:38:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:71:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1489,"nodeType":"TryStatement","src":"1231:710:9"}]}}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"466:527:9","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1007:22:9","nodeType":"FunctionDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"operator","nameLocation":"1047:8:9","nodeType":"VariableDeclaration","scope":1493,"src":"1039:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"from","nameLocation":"1073:4:9","nodeType":"VariableDeclaration","scope":1493,"src":"1065:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"to","nameLocation":"1095:2:9","nodeType":"VariableDeclaration","scope":1493,"src":"1087:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"id","nameLocation":"1115:2:9","nodeType":"VariableDeclaration","scope":1493,"src":"1107:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"value","nameLocation":"1135:5:9","nodeType":"VariableDeclaration","scope":1493,"src":"1127:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"data","nameLocation":"1163:4:9","nodeType":"VariableDeclaration","scope":1493,"src":"1150:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1433,"name":"bytes","nodeType":"ElementaryTypeName","src":"1150:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1029:144:9"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"1183:0:9"},"scope":1568,"src":"998:959:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1566,"nodeType":"Block","src":"2715:816:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1511,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"2729:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2732:4:9","memberName":"code","nodeType":"MemberAccess","src":"2729:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:9","memberName":"length","nodeType":"MemberAccess","src":"2729:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2746:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2729:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1565,"nodeType":"IfStatement","src":"2725:800:9","trueBody":{"id":1564,"nodeType":"Block","src":"2749:776:9","statements":[{"clauses":[{"block":{"id":1542,"nodeType":"Block","src":"2902:226:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1529,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"2924:8:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1530,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"2936:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1398_$","typeString":"type(contract IERC1155Receiver)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2953:22:9","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1397,"src":"2936:39:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2976:8:9","memberName":"selector","nodeType":"MemberAccess","src":"2936:48:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2924:60:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1541,"nodeType":"IfStatement","src":"2920:194:9","trueBody":{"id":1540,"nodeType":"Block","src":"2986:128:9","statements":[{"errorCall":{"arguments":[{"id":1537,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"3092:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1534,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"3054:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$316_$","typeString":"type(contract IERC1155Errors)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3069:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":291,"src":"3054:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"RevertStatement","src":"3047:48:9"}]}}]},"errorName":"","id":1543,"nodeType":"TryCatchClause","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"response","nameLocation":"2879:8:9","nodeType":"VariableDeclaration","scope":1543,"src":"2872:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1526,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2872:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2854:47:9"},"src":"2846:282:9"},{"block":{"id":1561,"nodeType":"Block","src":"3157:358:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1547,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"3179:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3186:6:9","memberName":"length","nodeType":"MemberAccess","src":"3179:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3196:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3179:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1559,"nodeType":"Block","src":"3350:151:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3397:86:9","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3434:2:9","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"3438:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3430:3:9"},"nodeType":"YulFunctionCall","src":"3430:15:9"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3453:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3447:5:9"},"nodeType":"YulFunctionCall","src":"3447:13:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3423:6:9"},"nodeType":"YulFunctionCall","src":"3423:38:9"},"nodeType":"YulExpressionStatement","src":"3423:38:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1545,"isOffset":false,"isSlot":false,"src":"3438:6:9","valueSize":1},{"declaration":1545,"isOffset":false,"isSlot":false,"src":"3453:6:9","valueSize":1}],"flags":["memory-safe"],"id":1558,"nodeType":"InlineAssembly","src":"3372:111:9"}]},"id":1560,"nodeType":"IfStatement","src":"3175:326:9","trueBody":{"id":1557,"nodeType":"Block","src":"3199:145:9","statements":[{"errorCall":{"arguments":[{"id":1554,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"3322:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1551,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"3284:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$316_$","typeString":"type(contract IERC1155Errors)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3299:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":291,"src":"3284:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1556,"nodeType":"RevertStatement","src":"3277:48:9"}]}}]},"errorName":"","id":1562,"nodeType":"TryCatchClause","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"reason","nameLocation":"3149:6:9","nodeType":"VariableDeclaration","scope":1562,"src":"3136:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1544,"name":"bytes","nodeType":"ElementaryTypeName","src":"3136:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3135:21:9"},"src":"3129:386:9"}],"externalCall":{"arguments":[{"id":1520,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"2811:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1521,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"2821:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1522,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"2827:3:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1523,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"2832:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1524,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"2840:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"2784:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1516,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"2767:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1398_$","typeString":"type(contract IERC1155Receiver)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1398","typeString":"contract IERC1155Receiver"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2788:22:9","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1397,"src":"2767:43:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:78:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1563,"nodeType":"TryStatement","src":"2763:752:9"}]}}]},"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"1963:537:9","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1567,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2514:27:9","nodeType":"FunctionDefinition","parameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"operator","nameLocation":"2559:8:9","nodeType":"VariableDeclaration","scope":1567,"src":"2551:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1495,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1498,"mutability":"mutable","name":"from","nameLocation":"2585:4:9","nodeType":"VariableDeclaration","scope":1567,"src":"2577:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"to","nameLocation":"2607:2:9","nodeType":"VariableDeclaration","scope":1567,"src":"2599:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1499,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"ids","nameLocation":"2636:3:9","nodeType":"VariableDeclaration","scope":1567,"src":"2619:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1502,"nodeType":"ArrayTypeName","src":"2619:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"values","nameLocation":"2666:6:9","nodeType":"VariableDeclaration","scope":1567,"src":"2649:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"2649:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1505,"nodeType":"ArrayTypeName","src":"2649:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1508,"mutability":"mutable","name":"data","nameLocation":"2695:4:9","nodeType":"VariableDeclaration","scope":1567,"src":"2682:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1507,"name":"bytes","nodeType":"ElementaryTypeName","src":"2682:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2541:164:9"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[],"src":"2715:0:9"},"scope":1568,"src":"2505:1026:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1569,"src":"439:3094:9","usedErrors":[],"usedEvents":[]}],"src":"120:3414:9"},"id":9},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[3831],"ERC165":[5361],"ERC721":[2525],"ERC721Utils":[2891],"IERC165":[5373],"IERC721":[2642],"IERC721Errors":[269],"IERC721Metadata":[2814],"Strings":[5337]},"id":2526,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1570,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1572,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2526,"sourceUnit":2643,"src":"133:38:10","symbolAliases":[{"foreign":{"id":1571,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"141:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1574,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2526,"sourceUnit":2815,"src":"172:65:10","symbolAliases":[{"foreign":{"id":1573,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"180:15:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":1576,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2526,"sourceUnit":2892,"src":"238:52:10","symbolAliases":[{"foreign":{"id":1575,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"246:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1578,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2526,"sourceUnit":3832,"src":"291:48:10","symbolAliases":[{"foreign":{"id":1577,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"299:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1580,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2526,"sourceUnit":5338,"src":"340:48:10","symbolAliases":[{"foreign":{"id":1579,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"348:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1583,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2526,"sourceUnit":5362,"src":"389:69:10","symbolAliases":[{"foreign":{"id":1581,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"397:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1582,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"406:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1585,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2526,"sourceUnit":317,"src":"459:66:10","symbolAliases":[{"foreign":{"id":1584,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"467:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1587,"name":"Context","nameLocations":["803:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3831,"src":"803:7:10"},"id":1588,"nodeType":"InheritanceSpecifier","src":"803:7:10"},{"baseName":{"id":1589,"name":"ERC165","nameLocations":["812:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"812:6:10"},"id":1590,"nodeType":"InheritanceSpecifier","src":"812:6:10"},{"baseName":{"id":1591,"name":"IERC721","nameLocations":["820:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2642,"src":"820:7:10"},"id":1592,"nodeType":"InheritanceSpecifier","src":"820:7:10"},{"baseName":{"id":1593,"name":"IERC721Metadata","nameLocations":["829:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":2814,"src":"829:15:10"},"id":1594,"nodeType":"InheritanceSpecifier","src":"829:15:10"},{"baseName":{"id":1595,"name":"IERC721Errors","nameLocations":["846:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"846:13:10"},"id":1596,"nodeType":"InheritanceSpecifier","src":"846:13:10"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1586,"nodeType":"StructuredDocumentation","src":"527:247:10","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2525,"linearizedBaseContracts":[2525,269,2814,2642,5361,5373,3831],"name":"ERC721","nameLocation":"793:6:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1599,"libraryName":{"id":1597,"name":"Strings","nameLocations":["872:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":5337,"src":"872:7:10"},"nodeType":"UsingForDirective","src":"866:26:10","typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1601,"mutability":"mutable","name":"_name","nameLocation":"931:5:10","nodeType":"VariableDeclaration","scope":2525,"src":"916:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1600,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1603,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:10","nodeType":"VariableDeclaration","scope":2525,"src":"963:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1602,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1607,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:10","nodeType":"VariableDeclaration","scope":2525,"src":"992:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1606,"keyName":"tokenId","keyNameLocation":"1008:7:10","keyType":{"id":1604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1611,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:10","nodeType":"VariableDeclaration","scope":2525,"src":"1050:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1610,"keyName":"owner","keyNameLocation":"1066:5:10","keyType":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1615,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:10","nodeType":"VariableDeclaration","scope":2525,"src":"1108:59:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1614,"keyName":"tokenId","keyNameLocation":"1124:7:10","keyType":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1613,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1621,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:10","nodeType":"VariableDeclaration","scope":2525,"src":"1174:86:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1620,"keyName":"owner","keyNameLocation":"1190:5:10","keyType":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1619,"keyName":"operator","keyNameLocation":"1215:8:10","keyType":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1618,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1637,"nodeType":"Block","src":"1436:57:10","statements":[{"expression":{"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1629,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1446:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1630,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"1454:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1632,"nodeType":"ExpressionStatement","src":"1446:13:10"},{"expression":{"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1633,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"1469:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1634,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"1479:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1636,"nodeType":"ExpressionStatement","src":"1469:17:10"}]},"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"1267:108:10","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1638,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"name_","nameLocation":"1406:5:10","nodeType":"VariableDeclaration","scope":1638,"src":"1392:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1623,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:10","nodeType":"VariableDeclaration","scope":1638,"src":"1413:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1625,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:10"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[],"src":"1436:0:10"},"scope":2525,"src":"1380:113:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5360,5372],"body":{"id":1668,"nodeType":"Block","src":"1668:192:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1649,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"1697:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1651,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"1717:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2642_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2642_$","typeString":"type(contract IERC721)"}],"id":1650,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2642","typeString":"type(contract IERC721)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1655,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"1753:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1657,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"1773:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2814_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2814_$","typeString":"type(contract IERC721Metadata)"}],"id":1656,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2814","typeString":"type(contract IERC721Metadata)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1664,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"1841:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1662,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2525_$","typeString":"type(contract super ERC721)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5360,"src":"1817:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1648,"id":1667,"nodeType":"Return","src":"1678:175:10"}]},"documentation":{"id":1639,"nodeType":"StructuredDocumentation","src":"1499:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:10","nodeType":"FunctionDefinition","overrides":{"id":1645,"nodeType":"OverrideSpecifier","overrides":[{"id":1643,"name":"ERC165","nameLocations":["1636:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"1636:6:10"},{"id":1644,"name":"IERC165","nameLocations":["1644:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":5373,"src":"1644:7:10"}],"src":"1627:25:10"},"parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:10","nodeType":"VariableDeclaration","scope":1669,"src":"1587:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1640,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:10"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"1662:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1646,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:10"},"scope":2525,"src":"1560:300:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2567],"body":{"id":1696,"nodeType":"Block","src":"1991:136:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1677,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2005:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:10","typeDescriptions":{}}},"id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1691,"nodeType":"IfStatement","src":"2001:87:10","trueBody":{"id":1690,"nodeType":"Block","src":"2026:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:10","typeDescriptions":{}}},"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1683,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"2047:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1689,"nodeType":"RevertStatement","src":"2040:37:10"}]}},{"expression":{"baseExpression":{"id":1692,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"2104:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1694,"indexExpression":{"id":1693,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2114:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1676,"id":1695,"nodeType":"Return","src":"2097:23:10"}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"1866:48:10","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:10","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"owner","nameLocation":"1946:5:10","nodeType":"VariableDeclaration","scope":1697,"src":"1938:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:10"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1697,"src":"1982:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:10"},"scope":2525,"src":"1919:208:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2575],"body":{"id":1709,"nodeType":"Block","src":"2256:46:10","statements":[{"expression":{"arguments":[{"id":1706,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"2287:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1705,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"2273:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1704,"id":1708,"nodeType":"Return","src":"2266:29:10"}]},"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"2133:46:10","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1710,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:10","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:10","nodeType":"VariableDeclaration","scope":1710,"src":"2201:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:10"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1710,"src":"2247:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:10"},"scope":2525,"src":"2184:118:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2799],"body":{"id":1718,"nodeType":"Block","src":"2424:29:10","statements":[{"expression":{"id":1716,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"2441:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1715,"id":1717,"nodeType":"Return","src":"2434:12:10"}]},"documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"2308:51:10","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1719,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:10","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[],"src":"2377:2:10"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1719,"src":"2409:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1713,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:10"},"scope":2525,"src":"2364:89:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2805],"body":{"id":1727,"nodeType":"Block","src":"2579:31:10","statements":[{"expression":{"id":1725,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"2596:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1724,"id":1726,"nodeType":"Return","src":"2589:14:10"}]},"documentation":{"id":1720,"nodeType":"StructuredDocumentation","src":"2459:53:10","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:10","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[],"src":"2532:2:10"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1728,"src":"2564:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1722,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:10"},"scope":2525,"src":"2517:93:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2813],"body":{"id":1763,"nodeType":"Block","src":"2755:176:10","statements":[{"expression":{"arguments":[{"id":1737,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"2779:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1736,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"2765:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1739,"nodeType":"ExpressionStatement","src":"2765:22:10"},{"assignments":[1741],"declarations":[{"constant":false,"id":1741,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:10","nodeType":"VariableDeclaration","scope":1763,"src":"2798:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1740,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1744,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1742,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"2822:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1747,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"2855:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1745,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:10","typeDescriptions":{}}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:10","memberName":"length","nodeType":"MemberAccess","src":"2849:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:10","trueExpression":{"arguments":[{"id":1755,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"2891:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1756,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"2900:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:10","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4215,"src":"2900:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1752,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:10","typeDescriptions":{}}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:10","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1735,"id":1762,"nodeType":"Return","src":"2842:82:10"}]},"documentation":{"id":1729,"nodeType":"StructuredDocumentation","src":"2616:55:10","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1764,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:10","nodeType":"FunctionDefinition","parameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:10","nodeType":"VariableDeclaration","scope":1764,"src":"2694:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1730,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:10"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1764,"src":"2740:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1733,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:10"},"scope":2525,"src":"2676:255:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1772,"nodeType":"Block","src":"3239:26:10","statements":[{"expression":{"hexValue":"","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1769,"id":1771,"nodeType":"Return","src":"3249:9:10"}]},"documentation":{"id":1765,"nodeType":"StructuredDocumentation","src":"2937:231:10","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:10","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[],"src":"3190:2:10"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1773,"src":"3224:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1767,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:10"},"scope":2525,"src":"3173:92:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2615],"body":{"id":1788,"nodeType":"Block","src":"3383:52:10","statements":[{"expression":{"arguments":[{"id":1782,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"3402:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1783,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"3406:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1784,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"3415:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1781,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2392,2458],"referencedDeclaration":2392,"src":"3393:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1787,"nodeType":"ExpressionStatement","src":"3393:35:10"}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"3271:46:10","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1789,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:10","nodeType":"FunctionDefinition","parameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"to","nameLocation":"3347:2:10","nodeType":"VariableDeclaration","scope":1789,"src":"3339:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:10","nodeType":"VariableDeclaration","scope":1789,"src":"3351:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:10"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[],"src":"3383:0:10"},"scope":2525,"src":"3322:113:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2631],"body":{"id":1805,"nodeType":"Block","src":"3572:78:10","statements":[{"expression":{"arguments":[{"id":1798,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"3596:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1797,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"3582:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1800,"nodeType":"ExpressionStatement","src":"3582:22:10"},{"expression":{"arguments":[{"id":1802,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"3635:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1801,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"3622:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1796,"id":1804,"nodeType":"Return","src":"3615:28:10"}]},"documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"3441:50:10","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:10","nodeType":"FunctionDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:10","nodeType":"VariableDeclaration","scope":1806,"src":"3517:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:10"},"returnParameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"3563:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:10"},"scope":2525,"src":"3496:154:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2623],"body":{"id":1821,"nodeType":"Block","src":"3792:69:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1815,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"3821:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1817,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3835:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1818,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"3845:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1814,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"3802:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1820,"nodeType":"ExpressionStatement","src":"3802:52:10"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"3656:56:10","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1822,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:10","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"operator","nameLocation":"3752:8:10","nodeType":"VariableDeclaration","scope":1822,"src":"3744:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"approved","nameLocation":"3767:8:10","nodeType":"VariableDeclaration","scope":1822,"src":"3762:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1810,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:10"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[],"src":"3792:0:10"},"scope":2525,"src":"3717:144:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2641],"body":{"id":1838,"nodeType":"Block","src":"4021:59:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1832,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"4038:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1834,"indexExpression":{"id":1833,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"4057:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1836,"indexExpression":{"id":1835,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"4064:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1831,"id":1837,"nodeType":"Return","src":"4031:42:10"}]},"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"3867:55:10","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:10","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"owner","nameLocation":"3961:5:10","nodeType":"VariableDeclaration","scope":1839,"src":"3953:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1824,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"operator","nameLocation":"3976:8:10","nodeType":"VariableDeclaration","scope":1839,"src":"3968:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1826,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:10"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"4015:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1829,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:10"},"scope":2525,"src":"3927:153:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2607],"body":{"id":1884,"nodeType":"Block","src":"4222:498:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1849,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"4236:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:10","typeDescriptions":{}}},"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1863,"nodeType":"IfStatement","src":"4232:87:10","trueBody":{"id":1862,"nodeType":"Block","src":"4254:65:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:10","typeDescriptions":{}}},"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1855,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"4275:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1861,"nodeType":"RevertStatement","src":"4268:40:10"}]}},{"assignments":[1865],"declarations":[{"constant":false,"id":1865,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:10","nodeType":"VariableDeclaration","scope":1884,"src":"4537:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1872,"initialValue":{"arguments":[{"id":1867,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"4569:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1868,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"4573:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1869,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"4582:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1866,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"4561:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1873,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"4609:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1874,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"4626:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1883,"nodeType":"IfStatement","src":"4605:109:10","trueBody":{"id":1882,"nodeType":"Block","src":"4632:82:10","statements":[{"errorCall":{"arguments":[{"id":1877,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"4674:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1878,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"4680:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1879,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"4689:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1876,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"4653:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1881,"nodeType":"RevertStatement","src":"4646:57:10"}]}}]},"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"4086:51:10","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:10","nodeType":"FunctionDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"from","nameLocation":"4172:4:10","nodeType":"VariableDeclaration","scope":1885,"src":"4164:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1844,"mutability":"mutable","name":"to","nameLocation":"4186:2:10","nodeType":"VariableDeclaration","scope":1885,"src":"4178:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1843,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:10","nodeType":"VariableDeclaration","scope":1885,"src":"4190:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:10"},"returnParameters":{"id":1848,"nodeType":"ParameterList","parameters":[],"src":"4222:0:10"},"scope":2525,"src":"4142:578:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2597],"body":{"id":1902,"nodeType":"Block","src":"4862:56:10","statements":[{"expression":{"arguments":[{"id":1896,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"4889:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1897,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"4895:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1898,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"4899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1895,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1903,1933],"referencedDeclaration":1933,"src":"4872:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1901,"nodeType":"ExpressionStatement","src":"4872:39:10"}]},"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"4726:55:10","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1903,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:10","nodeType":"FunctionDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"from","nameLocation":"4820:4:10","nodeType":"VariableDeclaration","scope":1903,"src":"4812:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"to","nameLocation":"4834:2:10","nodeType":"VariableDeclaration","scope":1903,"src":"4826:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:10","nodeType":"VariableDeclaration","scope":1903,"src":"4838:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:10"},"returnParameters":{"id":1894,"nodeType":"ParameterList","parameters":[],"src":"4862:0:10"},"scope":2525,"src":"4786:132:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2587],"body":{"id":1932,"nodeType":"Block","src":"5087:130:10","statements":[{"expression":{"arguments":[{"id":1916,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"5110:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1917,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"5116:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1918,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"5120:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1915,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"5097:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1920,"nodeType":"ExpressionStatement","src":"5097:31:10"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1924,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"5172:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1926,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"5186:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1927,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"5192:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1928,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"5196:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1929,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"5205:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1921,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"5138:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2891_$","typeString":"type(library ERC721Utils)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:10","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2890,"src":"5138:33:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1931,"nodeType":"ExpressionStatement","src":"5138:72:10"}]},"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"4924:55:10","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1933,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:10","nodeType":"FunctionDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"from","nameLocation":"5018:4:10","nodeType":"VariableDeclaration","scope":1933,"src":"5010:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1905,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1908,"mutability":"mutable","name":"to","nameLocation":"5032:2:10","nodeType":"VariableDeclaration","scope":1933,"src":"5024:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1910,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:10","nodeType":"VariableDeclaration","scope":1933,"src":"5036:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1912,"mutability":"mutable","name":"data","nameLocation":"5066:4:10","nodeType":"VariableDeclaration","scope":1933,"src":"5053:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1911,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:10"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[],"src":"5087:0:10"},"scope":2525,"src":"4984:233:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1945,"nodeType":"Block","src":"5807:40:10","statements":[{"expression":{"baseExpression":{"id":1941,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"5824:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1943,"indexExpression":{"id":1942,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"5832:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1940,"id":1944,"nodeType":"Return","src":"5817:23:10"}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"5223:504:10","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1946,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:10","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:10","nodeType":"VariableDeclaration","scope":1946,"src":"5750:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:10"},"returnParameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1946,"src":"5798:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1938,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:10"},"scope":2525,"src":"5732:115:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1958,"nodeType":"Block","src":"6042:48:10","statements":[{"expression":{"baseExpression":{"id":1954,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"6059:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1956,"indexExpression":{"id":1955,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"6075:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1953,"id":1957,"nodeType":"Return","src":"6052:31:10"}]},"documentation":{"id":1947,"nodeType":"StructuredDocumentation","src":"5853:105:10","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1959,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:10","nodeType":"FunctionDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:10","nodeType":"VariableDeclaration","scope":1959,"src":"5985:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:10"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1959,"src":"6033:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1951,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:10"},"scope":2525,"src":"5963:127:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1994,"nodeType":"Block","src":"6510:163:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1971,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"6539:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1972,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:10","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"6577:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1978,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"6586:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1981,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"6614:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1982,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"6621:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1980,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"6597:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1986,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"6646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1985,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"6633:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1988,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"6658:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1970,"id":1993,"nodeType":"Return","src":"6520:146:10"}]},"documentation":{"id":1960,"nodeType":"StructuredDocumentation","src":"6096:300:10","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1995,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:10","nodeType":"FunctionDefinition","parameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"owner","nameLocation":"6432:5:10","nodeType":"VariableDeclaration","scope":1995,"src":"6424:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"spender","nameLocation":"6447:7:10","nodeType":"VariableDeclaration","scope":1995,"src":"6439:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1963,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1966,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:10","nodeType":"VariableDeclaration","scope":1995,"src":"6456:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:10"},"returnParameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1995,"src":"6504:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1968,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:10"},"scope":2525,"src":"6401:272:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2031,"nodeType":"Block","src":"7202:271:10","statements":[{"condition":{"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:10","subExpression":{"arguments":[{"id":2006,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"7231:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2007,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"7238:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2008,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"7247:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2005,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"7217:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2030,"nodeType":"IfStatement","src":"7212:255:10","trueBody":{"id":2029,"nodeType":"Block","src":"7257:210:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2011,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"7275:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:10","typeDescriptions":{}}},"id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2027,"nodeType":"Block","src":"7373:84:10","statements":[{"errorCall":{"arguments":[{"id":2023,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"7425:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2024,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"7434:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2022,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7398:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2026,"nodeType":"RevertStatement","src":"7391:51:10"}]},"id":2028,"nodeType":"IfStatement","src":"7271:186:10","trueBody":{"id":2021,"nodeType":"Block","src":"7296:71:10","statements":[{"errorCall":{"arguments":[{"id":2018,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"7344:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2017,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7321:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2020,"nodeType":"RevertStatement","src":"7314:38:10"}]}}]}}]},"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"6679:421:10","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2032,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:10","nodeType":"FunctionDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"owner","nameLocation":"7139:5:10","nodeType":"VariableDeclaration","scope":2032,"src":"7131:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1997,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2000,"mutability":"mutable","name":"spender","nameLocation":"7154:7:10","nodeType":"VariableDeclaration","scope":2032,"src":"7146:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1999,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:10","nodeType":"VariableDeclaration","scope":2032,"src":"7163:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:10"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[],"src":"7202:0:10"},"scope":2525,"src":"7105:368:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2047,"nodeType":"Block","src":"8190:78:10","statements":[{"id":2046,"nodeType":"UncheckedBlock","src":"8200:62:10","statements":[{"expression":{"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2040,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"8224:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2042,"indexExpression":{"id":2041,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"8234:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"8246:5:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2045,"nodeType":"ExpressionStatement","src":"8224:27:10"}]}]},"documentation":{"id":2033,"nodeType":"StructuredDocumentation","src":"7479:631:10","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":2048,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:10","nodeType":"FunctionDefinition","parameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"account","nameLocation":"8149:7:10","nodeType":"VariableDeclaration","scope":2048,"src":"8141:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2034,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"value","nameLocation":"8166:5:10","nodeType":"VariableDeclaration","scope":2048,"src":"8158:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2036,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:10"},"returnParameters":{"id":2039,"nodeType":"ParameterList","parameters":[],"src":"8190:0:10"},"scope":2525,"src":"8115:153:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2137,"nodeType":"Block","src":"8956:700:10","statements":[{"assignments":[2061],"declarations":[{"constant":false,"id":2061,"mutability":"mutable","name":"from","nameLocation":"8974:4:10","nodeType":"VariableDeclaration","scope":2137,"src":"8966:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2060,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2065,"initialValue":{"arguments":[{"id":2063,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"8990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2062,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"8981:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"9058:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:10","typeDescriptions":{}}},"id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2079,"nodeType":"IfStatement","src":"9054:86:10","trueBody":{"id":2078,"nodeType":"Block","src":"9078:62:10","statements":[{"expression":{"arguments":[{"id":2073,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"9109:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2074,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"9115:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"9121:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2072,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"9092:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2077,"nodeType":"ExpressionStatement","src":"9092:37:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2080,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"9184:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2081,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:10","typeDescriptions":{}}},"id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2107,"nodeType":"IfStatement","src":"9180:256:10","trueBody":{"id":2106,"nodeType":"Block","src":"9204:232:10","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2087,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:10","typeDescriptions":{}}},"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2091,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"9321:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2092,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:10","typeDescriptions":{}}},"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2086,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2392,2458],"referencedDeclaration":2458,"src":"9300:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2098,"nodeType":"ExpressionStatement","src":"9300:48:10"},{"id":2105,"nodeType":"UncheckedBlock","src":"9363:63:10","statements":[{"expression":{"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2099,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"9391:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2101,"indexExpression":{"id":2100,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"9401:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2104,"nodeType":"ExpressionStatement","src":"9391:20:10"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2108,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9450:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2109,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:10","typeDescriptions":{}}},"id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2122,"nodeType":"IfStatement","src":"9446:107:10","trueBody":{"id":2121,"nodeType":"Block","src":"9468:85:10","statements":[{"id":2120,"nodeType":"UncheckedBlock","src":"9482:61:10","statements":[{"expression":{"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2114,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"9510:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2116,"indexExpression":{"id":2115,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9520:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2119,"nodeType":"ExpressionStatement","src":"9510:18:10"}]}]}},{"expression":{"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2123,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"9563:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2125,"indexExpression":{"id":2124,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"9571:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2126,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9582:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2128,"nodeType":"ExpressionStatement","src":"9563:21:10"},{"eventCall":{"arguments":[{"id":2130,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"9609:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9615:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2132,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"9619:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2129,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"9600:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"EmitStatement","src":"9595:32:10"},{"expression":{"id":2135,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"9645:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2059,"id":2136,"nodeType":"Return","src":"9638:11:10"}]},"documentation":{"id":2049,"nodeType":"StructuredDocumentation","src":"8274:582:10","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":2138,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:10","nodeType":"FunctionDefinition","parameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"to","nameLocation":"8886:2:10","nodeType":"VariableDeclaration","scope":2138,"src":"8878:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2050,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:10","nodeType":"VariableDeclaration","scope":2138,"src":"8890:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2055,"mutability":"mutable","name":"auth","nameLocation":"8915:4:10","nodeType":"VariableDeclaration","scope":2138,"src":"8907:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2054,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:10"},"returnParameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2138,"src":"8947:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:10"},"scope":2525,"src":"8861:795:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2187,"nodeType":"Block","src":"10031:274:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2146,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"10045:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2147,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:10","typeDescriptions":{}}},"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2160,"nodeType":"IfStatement","src":"10041:87:10","trueBody":{"id":2159,"nodeType":"Block","src":"10063:65:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2153,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:10","typeDescriptions":{}}},"id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2152,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"10084:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2158,"nodeType":"RevertStatement","src":"10077:40:10"}]}},{"assignments":[2162],"declarations":[{"constant":false,"id":2162,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:10","nodeType":"VariableDeclaration","scope":2187,"src":"10137:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2171,"initialValue":{"arguments":[{"id":2164,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"10169:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2165,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"10173:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2166,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:10","typeDescriptions":{}}},"id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2163,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"10161:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2172,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"10207:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:10","typeDescriptions":{}}},"id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2186,"nodeType":"IfStatement","src":"10203:96:10","trueBody":{"id":2185,"nodeType":"Block","src":"10236:63:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:10","typeDescriptions":{}}},"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2178,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"10257:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2184,"nodeType":"RevertStatement","src":"10250:38:10"}]}}]},"documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"9662:311:10","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2188,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:10","nodeType":"FunctionDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"to","nameLocation":"10001:2:10","nodeType":"VariableDeclaration","scope":2188,"src":"9993:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2143,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:10","nodeType":"VariableDeclaration","scope":2188,"src":"10005:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:10"},"returnParameters":{"id":2145,"nodeType":"ParameterList","parameters":[],"src":"10031:0:10"},"scope":2525,"src":"9978:327:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2202,"nodeType":"Block","src":"10713:43:10","statements":[{"expression":{"arguments":[{"id":2197,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"10733:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2198,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"10737:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2196,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2203,2233],"referencedDeclaration":2233,"src":"10723:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2201,"nodeType":"ExpressionStatement","src":"10723:26:10"}]},"documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"10311:340:10","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2203,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:10","nodeType":"FunctionDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"to","nameLocation":"10683:2:10","nodeType":"VariableDeclaration","scope":2203,"src":"10675:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2190,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2193,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:10","nodeType":"VariableDeclaration","scope":2203,"src":"10687:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:10"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[],"src":"10713:0:10"},"scope":2525,"src":"10656:100:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2232,"nodeType":"Block","src":"11061:123:10","statements":[{"expression":{"arguments":[{"id":2214,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"11077:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2215,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"11081:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2213,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"11071:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2217,"nodeType":"ExpressionStatement","src":"11071:18:10"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2221,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"11133:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2223,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:10","typeDescriptions":{}}},"id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2227,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"11159:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2228,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"11163:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2229,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"11172:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2218,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"11099:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2891_$","typeString":"type(library ERC721Utils)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:10","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2890,"src":"11099:33:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2231,"nodeType":"ExpressionStatement","src":"11099:78:10"}]},"documentation":{"id":2204,"nodeType":"StructuredDocumentation","src":"10762:210:10","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2233,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:10","nodeType":"FunctionDefinition","parameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"to","nameLocation":"11004:2:10","nodeType":"VariableDeclaration","scope":2233,"src":"10996:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2205,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2208,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:10","nodeType":"VariableDeclaration","scope":2233,"src":"11008:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2210,"mutability":"mutable","name":"data","nameLocation":"11038:4:10","nodeType":"VariableDeclaration","scope":2233,"src":"11025:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2209,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:10"},"returnParameters":{"id":2212,"nodeType":"ParameterList","parameters":[],"src":"11061:0:10"},"scope":2525,"src":"10977:207:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2265,"nodeType":"Block","src":"11551:186:10","statements":[{"assignments":[2240],"declarations":[{"constant":false,"id":2240,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:10","nodeType":"VariableDeclaration","scope":2265,"src":"11561:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2239,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2252,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2242,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:10","typeDescriptions":{}}},"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2246,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"11605:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2247,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:10","typeDescriptions":{}}},"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2241,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"11585:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2253,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"11639:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2254,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:10","typeDescriptions":{}}},"id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2264,"nodeType":"IfStatement","src":"11635:96:10","trueBody":{"id":2263,"nodeType":"Block","src":"11668:63:10","statements":[{"errorCall":{"arguments":[{"id":2260,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"11712:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2259,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"11689:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2262,"nodeType":"RevertStatement","src":"11682:38:10"}]}}]},"documentation":{"id":2234,"nodeType":"StructuredDocumentation","src":"11190:315:10","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2266,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:10","nodeType":"FunctionDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:10","nodeType":"VariableDeclaration","scope":2266,"src":"11525:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:10"},"returnParameters":{"id":2238,"nodeType":"ParameterList","parameters":[],"src":"11551:0:10"},"scope":2525,"src":"11510:227:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2325,"nodeType":"Block","src":"12132:389:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2276,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"12146:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:10","typeDescriptions":{}}},"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2290,"nodeType":"IfStatement","src":"12142:87:10","trueBody":{"id":2289,"nodeType":"Block","src":"12164:65:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:10","typeDescriptions":{}}},"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2282,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"12185:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2288,"nodeType":"RevertStatement","src":"12178:40:10"}]}},{"assignments":[2292],"declarations":[{"constant":false,"id":2292,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:10","nodeType":"VariableDeclaration","scope":2325,"src":"12238:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2301,"initialValue":{"arguments":[{"id":2294,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"12270:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2295,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"12274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:10","typeDescriptions":{}}},"id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2293,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"12262:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2302,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"12308:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2303,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:10","typeDescriptions":{}}},"id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2313,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"12410:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2314,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"12427:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2323,"nodeType":"IfStatement","src":"12406:109:10","trueBody":{"id":2322,"nodeType":"Block","src":"12433:82:10","statements":[{"errorCall":{"arguments":[{"id":2317,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"12475:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2318,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"12481:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2319,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"12490:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2316,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"12454:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2321,"nodeType":"RevertStatement","src":"12447:57:10"}]}},"id":2324,"nodeType":"IfStatement","src":"12304:211:10","trueBody":{"id":2312,"nodeType":"Block","src":"12337:63:10","statements":[{"errorCall":{"arguments":[{"id":2309,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"12381:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2308,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"12358:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2311,"nodeType":"RevertStatement","src":"12351:38:10"}]}}]},"documentation":{"id":2267,"nodeType":"StructuredDocumentation","src":"11743:313:10","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2326,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:10","nodeType":"FunctionDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"from","nameLocation":"12088:4:10","nodeType":"VariableDeclaration","scope":2326,"src":"12080:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2268,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"to","nameLocation":"12102:2:10","nodeType":"VariableDeclaration","scope":2326,"src":"12094:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2270,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2273,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:10","nodeType":"VariableDeclaration","scope":2326,"src":"12106:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:10"},"returnParameters":{"id":2275,"nodeType":"ParameterList","parameters":[],"src":"12132:0:10"},"scope":2525,"src":"12061:460:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2343,"nodeType":"Block","src":"13530:53:10","statements":[{"expression":{"arguments":[{"id":2337,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"13554:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2338,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"13560:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2339,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"13564:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2336,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[2344,2374],"referencedDeclaration":2374,"src":"13540:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2342,"nodeType":"ExpressionStatement","src":"13540:36:10"}]},"documentation":{"id":2327,"nodeType":"StructuredDocumentation","src":"12527:923:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2344,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:10","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"from","nameLocation":"13486:4:10","nodeType":"VariableDeclaration","scope":2344,"src":"13478:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2328,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2331,"mutability":"mutable","name":"to","nameLocation":"13500:2:10","nodeType":"VariableDeclaration","scope":2344,"src":"13492:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2330,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:10","nodeType":"VariableDeclaration","scope":2344,"src":"13504:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:10"},"returnParameters":{"id":2335,"nodeType":"ParameterList","parameters":[],"src":"13530:0:10"},"scope":2525,"src":"13455:128:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2373,"nodeType":"Block","src":"13922:127:10","statements":[{"expression":{"arguments":[{"id":2357,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"13942:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2358,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"13948:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2359,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"13952:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2356,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"13932:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2361,"nodeType":"ExpressionStatement","src":"13932:28:10"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2365,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"14004:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2367,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"14018:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2368,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"14024:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2369,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"14028:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2370,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"14037:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2362,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"13970:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2891_$","typeString":"type(library ERC721Utils)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:10","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2890,"src":"13970:33:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2372,"nodeType":"ExpressionStatement","src":"13970:72:10"}]},"documentation":{"id":2345,"nodeType":"StructuredDocumentation","src":"13589:226:10","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2374,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:10","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"from","nameLocation":"13851:4:10","nodeType":"VariableDeclaration","scope":2374,"src":"13843:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2346,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"to","nameLocation":"13865:2:10","nodeType":"VariableDeclaration","scope":2374,"src":"13857:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:10","nodeType":"VariableDeclaration","scope":2374,"src":"13869:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"data","nameLocation":"13899:4:10","nodeType":"VariableDeclaration","scope":2374,"src":"13886:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2352,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:10"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[],"src":"13922:0:10"},"scope":2525,"src":"13820:229:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2391,"nodeType":"Block","src":"14562:50:10","statements":[{"expression":{"arguments":[{"id":2385,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"14581:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2386,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"14585:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2387,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"14594:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2384,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2392,2458],"referencedDeclaration":2458,"src":"14572:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2390,"nodeType":"ExpressionStatement","src":"14572:33:10"}]},"documentation":{"id":2375,"nodeType":"StructuredDocumentation","src":"14055:432:10","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2392,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:10","nodeType":"FunctionDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"to","nameLocation":"14518:2:10","nodeType":"VariableDeclaration","scope":2392,"src":"14510:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2376,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:10","nodeType":"VariableDeclaration","scope":2392,"src":"14522:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2381,"mutability":"mutable","name":"auth","nameLocation":"14547:4:10","nodeType":"VariableDeclaration","scope":2392,"src":"14539:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2380,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:10"},"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[],"src":"14562:0:10"},"scope":2525,"src":"14492:120:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2457,"nodeType":"Block","src":"14888:568:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2404,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"14954:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"14967:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2406,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:10","typeDescriptions":{}}},"id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2450,"nodeType":"IfStatement","src":"14950:460:10","trueBody":{"id":2449,"nodeType":"Block","src":"14987:423:10","statements":[{"assignments":[2413],"declarations":[{"constant":false,"id":2413,"mutability":"mutable","name":"owner","nameLocation":"15009:5:10","nodeType":"VariableDeclaration","scope":2449,"src":"15001:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2412,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2417,"initialValue":{"arguments":[{"id":2415,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"15031:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2414,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"15017:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2418,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"15167:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2419,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:10","typeDescriptions":{}}},"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2424,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"15189:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2425,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"15198:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:10","subExpression":{"arguments":[{"id":2429,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"15224:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2430,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"15231:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2428,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"15207:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2439,"nodeType":"IfStatement","src":"15163:142:10","trueBody":{"id":2438,"nodeType":"Block","src":"15238:67:10","statements":[{"errorCall":{"arguments":[{"id":2435,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"15285:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2434,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"15263:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2437,"nodeType":"RevertStatement","src":"15256:34:10"}]}},{"condition":{"id":2440,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"15323:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2448,"nodeType":"IfStatement","src":"15319:81:10","trueBody":{"id":2447,"nodeType":"Block","src":"15334:66:10","statements":[{"eventCall":{"arguments":[{"id":2442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"15366:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"15373:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2444,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"15377:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2441,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"15357:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2446,"nodeType":"EmitStatement","src":"15352:33:10"}]}}]}},{"expression":{"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2451,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"15420:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2453,"indexExpression":{"id":2452,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"15436:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"15447:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2456,"nodeType":"ExpressionStatement","src":"15420:29:10"}]},"documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"14618:171:10","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:10","nodeType":"FunctionDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"to","nameLocation":"14820:2:10","nodeType":"VariableDeclaration","scope":2458,"src":"14812:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2394,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:10","nodeType":"VariableDeclaration","scope":2458,"src":"14824:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"auth","nameLocation":"14849:4:10","nodeType":"VariableDeclaration","scope":2458,"src":"14841:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2398,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:10","nodeType":"VariableDeclaration","scope":2458,"src":"14855:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2400,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:10"},"returnParameters":{"id":2403,"nodeType":"ParameterList","parameters":[],"src":"14888:0:10"},"scope":2525,"src":"14794:662:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2494,"nodeType":"Block","src":"15758:219:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2468,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"15772:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2469,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:10","typeDescriptions":{}}},"id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2479,"nodeType":"IfStatement","src":"15768:91:10","trueBody":{"id":2478,"nodeType":"Block","src":"15796:63:10","statements":[{"errorCall":{"arguments":[{"id":2475,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"15839:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2474,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"15817:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2477,"nodeType":"RevertStatement","src":"15810:38:10"}]}},{"expression":{"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2480,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"15868:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2483,"indexExpression":{"id":2481,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"15887:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2484,"indexExpression":{"id":2482,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"15894:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2485,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"15906:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2487,"nodeType":"ExpressionStatement","src":"15868:46:10"},{"eventCall":{"arguments":[{"id":2489,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"15944:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2490,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"15951:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2491,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"15961:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2488,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"15929:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2493,"nodeType":"EmitStatement","src":"15924:46:10"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"15462:198:10","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":2495,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:10","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"owner","nameLocation":"15701:5:10","nodeType":"VariableDeclaration","scope":2495,"src":"15693:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"operator","nameLocation":"15716:8:10","nodeType":"VariableDeclaration","scope":2495,"src":"15708:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2462,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"approved","nameLocation":"15731:8:10","nodeType":"VariableDeclaration","scope":2495,"src":"15726:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2464,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:10"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[],"src":"15758:0:10"},"scope":2525,"src":"15665:312:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2523,"nodeType":"Block","src":"16284:169:10","statements":[{"assignments":[2504],"declarations":[{"constant":false,"id":2504,"mutability":"mutable","name":"owner","nameLocation":"16302:5:10","nodeType":"VariableDeclaration","scope":2523,"src":"16294:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2503,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2508,"initialValue":{"arguments":[{"id":2506,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"16319:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2505,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"16310:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"16341:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2510,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:10","typeDescriptions":{}}},"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2520,"nodeType":"IfStatement","src":"16337:88:10","trueBody":{"id":2519,"nodeType":"Block","src":"16362:63:10","statements":[{"errorCall":{"arguments":[{"id":2516,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"16406:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2515,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"16383:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2518,"nodeType":"RevertStatement","src":"16376:38:10"}]}},{"expression":{"id":2521,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"16441:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2502,"id":2522,"nodeType":"Return","src":"16434:12:10"}]},"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"15983:224:10","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":2524,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:10","nodeType":"FunctionDefinition","parameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:10","nodeType":"VariableDeclaration","scope":2524,"src":"16235:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:10"},"returnParameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2524,"src":"16275:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2500,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:10"},"scope":2525,"src":"16212:241:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2526,"src":"775:15680:10","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[2541,2550,2559]}],"src":"107:16349:10"},"id":10},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[5373],"IERC721":[2642]},"id":2643,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2527,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2529,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2643,"sourceUnit":5374,"src":"134:62:11","symbolAliases":[{"foreign":{"id":2528,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"142:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2531,"name":"IERC165","nameLocations":["288:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":5373,"src":"288:7:11"},"id":2532,"nodeType":"InheritanceSpecifier","src":"288:7:11"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2530,"nodeType":"StructuredDocumentation","src":"198:68:11","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":2642,"linearizedBaseContracts":[2642,5373],"name":"IERC721","nameLocation":"277:7:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2533,"nodeType":"StructuredDocumentation","src":"302:88:11","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2541,"name":"Transfer","nameLocation":"401:8:11","nodeType":"EventDefinition","parameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:11","nodeType":"VariableDeclaration","scope":2541,"src":"410:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2534,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2537,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:11","nodeType":"VariableDeclaration","scope":2541,"src":"432:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2539,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:11","nodeType":"VariableDeclaration","scope":2541,"src":"452:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2538,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:11"},"src":"395:82:11"},{"anonymous":false,"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"483:94:11","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2550,"name":"Approval","nameLocation":"588:8:11","nodeType":"EventDefinition","parameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:11","nodeType":"VariableDeclaration","scope":2550,"src":"597:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2543,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2546,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:11","nodeType":"VariableDeclaration","scope":2550,"src":"620:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2545,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2548,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:11","nodeType":"VariableDeclaration","scope":2550,"src":"646:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:11"},"src":"582:89:11"},{"anonymous":false,"documentation":{"id":2551,"nodeType":"StructuredDocumentation","src":"677:117:11","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2559,"name":"ApprovalForAll","nameLocation":"805:14:11","nodeType":"EventDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:11","nodeType":"VariableDeclaration","scope":2559,"src":"820:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2552,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2555,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:11","nodeType":"VariableDeclaration","scope":2559,"src":"843:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2557,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:11","nodeType":"VariableDeclaration","scope":2559,"src":"869:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2556,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:11"},"src":"799:85:11"},{"documentation":{"id":2560,"nodeType":"StructuredDocumentation","src":"890:76:11","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2567,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:11","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"owner","nameLocation":"998:5:11","nodeType":"VariableDeclaration","scope":2567,"src":"990:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2561,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:11"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"balance","nameLocation":"1036:7:11","nodeType":"VariableDeclaration","scope":2567,"src":"1028:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:11"},"scope":2642,"src":"971:74:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2568,"nodeType":"StructuredDocumentation","src":"1051:131:11","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2575,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:11","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:11","nodeType":"VariableDeclaration","scope":2575,"src":"1204:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:11"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"owner","nameLocation":"1252:5:11","nodeType":"VariableDeclaration","scope":2575,"src":"1244:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2572,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:11"},"scope":2642,"src":"1187:72:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2576,"nodeType":"StructuredDocumentation","src":"1265:565:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2587,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:11","nodeType":"FunctionDefinition","parameters":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"from","nameLocation":"1869:4:11","nodeType":"VariableDeclaration","scope":2587,"src":"1861:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2577,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"to","nameLocation":"1883:2:11","nodeType":"VariableDeclaration","scope":2587,"src":"1875:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2582,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:11","nodeType":"VariableDeclaration","scope":2587,"src":"1887:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2584,"mutability":"mutable","name":"data","nameLocation":"1919:4:11","nodeType":"VariableDeclaration","scope":2587,"src":"1904:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2583,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:11"},"returnParameters":{"id":2586,"nodeType":"ParameterList","parameters":[],"src":"1933:0:11"},"scope":2642,"src":"1835:99:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2588,"nodeType":"StructuredDocumentation","src":"1940:706:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2597,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:11","nodeType":"FunctionDefinition","parameters":{"id":2595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"from","nameLocation":"2685:4:11","nodeType":"VariableDeclaration","scope":2597,"src":"2677:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2592,"mutability":"mutable","name":"to","nameLocation":"2699:2:11","nodeType":"VariableDeclaration","scope":2597,"src":"2691:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2591,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2594,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:11","nodeType":"VariableDeclaration","scope":2597,"src":"2703:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2593,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:11"},"returnParameters":{"id":2596,"nodeType":"ParameterList","parameters":[],"src":"2728:0:11"},"scope":2642,"src":"2651:78:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"2735:733:11","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2607,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:11","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"from","nameLocation":"3503:4:11","nodeType":"VariableDeclaration","scope":2607,"src":"3495:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2599,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"to","nameLocation":"3517:2:11","nodeType":"VariableDeclaration","scope":2607,"src":"3509:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2601,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2604,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:11","nodeType":"VariableDeclaration","scope":2607,"src":"3521:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:11"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[],"src":"3546:0:11"},"scope":2642,"src":"3473:74:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2608,"nodeType":"StructuredDocumentation","src":"3553:452:11","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2615,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:11","nodeType":"FunctionDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"to","nameLocation":"4035:2:11","nodeType":"VariableDeclaration","scope":2615,"src":"4027:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2612,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:11","nodeType":"VariableDeclaration","scope":2615,"src":"4039:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:11"},"returnParameters":{"id":2614,"nodeType":"ParameterList","parameters":[],"src":"4064:0:11"},"scope":2642,"src":"4010:55:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2616,"nodeType":"StructuredDocumentation","src":"4071:315:11","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2623,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:11","nodeType":"FunctionDefinition","parameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"operator","nameLocation":"4426:8:11","nodeType":"VariableDeclaration","scope":2623,"src":"4418:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2617,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"approved","nameLocation":"4441:8:11","nodeType":"VariableDeclaration","scope":2623,"src":"4436:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2619,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:11"},"returnParameters":{"id":2622,"nodeType":"ParameterList","parameters":[],"src":"4459:0:11"},"scope":2642,"src":"4391:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2624,"nodeType":"StructuredDocumentation","src":"4466:139:11","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2631,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:11","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:11","nodeType":"VariableDeclaration","scope":2631,"src":"4631:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2625,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:11"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"operator","nameLocation":"4679:8:11","nodeType":"VariableDeclaration","scope":2631,"src":"4671:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2628,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:11"},"scope":2642,"src":"4610:79:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2632,"nodeType":"StructuredDocumentation","src":"4695:138:11","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2641,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:11","nodeType":"FunctionDefinition","parameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"mutability":"mutable","name":"owner","nameLocation":"4872:5:11","nodeType":"VariableDeclaration","scope":2641,"src":"4864:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2633,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2636,"mutability":"mutable","name":"operator","nameLocation":"4887:8:11","nodeType":"VariableDeclaration","scope":2641,"src":"4879:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2635,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:11"},"returnParameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2641,"src":"4920:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2638,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:11"},"scope":2642,"src":"4838:88:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2643,"src":"267:4661:11","usedErrors":[],"usedEvents":[2541,2550,2559]}],"src":"108:4821:11"},"id":11},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2660]},"id":2661,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2644,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2645,"nodeType":"StructuredDocumentation","src":"142:154:12","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":2660,"linearizedBaseContracts":[2660],"name":"IERC721Receiver","nameLocation":"307:15:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"329:500:12","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2659,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:12","nodeType":"FunctionDefinition","parameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"operator","nameLocation":"877:8:12","nodeType":"VariableDeclaration","scope":2659,"src":"869:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"from","nameLocation":"903:4:12","nodeType":"VariableDeclaration","scope":2659,"src":"895:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:12","nodeType":"VariableDeclaration","scope":2659,"src":"917:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"data","nameLocation":"957:4:12","nodeType":"VariableDeclaration","scope":2659,"src":"942:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2653,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:12"},"returnParameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2659,"src":"986:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2656,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:12"},"scope":2660,"src":"834:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2661,"src":"297:699:12","usedErrors":[],"usedEvents":[]}],"src":"116:881:12"},"id":12},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[2525],"ERC721URIStorage":[2786],"IERC165":[5373],"IERC4906":[175],"Strings":[5337]},"id":2787,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2662,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2664,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2787,"sourceUnit":2526,"src":"154:37:13","symbolAliases":[{"foreign":{"id":2663,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"162:6:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":2666,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2787,"sourceUnit":5338,"src":"192:51:13","symbolAliases":[{"foreign":{"id":2665,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"200:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":2668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2787,"sourceUnit":176,"src":"244:58:13","symbolAliases":[{"foreign":{"id":2667,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"252:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":2670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2787,"sourceUnit":152,"src":"303:56:13","symbolAliases":[{"foreign":{"id":2669,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"311:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2672,"name":"IERC4906","nameLocations":["470:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":175,"src":"470:8:13"},"id":2673,"nodeType":"InheritanceSpecifier","src":"470:8:13"},{"baseName":{"id":2674,"name":"ERC721","nameLocations":["480:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2525,"src":"480:6:13"},"id":2675,"nodeType":"InheritanceSpecifier","src":"480:6:13"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":2671,"nodeType":"StructuredDocumentation","src":"361:70:13","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":2786,"linearizedBaseContracts":[2786,2525,269,2814,175,2642,5361,5373,3831],"name":"ERC721URIStorage","nameLocation":"450:16:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2678,"libraryName":{"id":2676,"name":"Strings","nameLocations":["499:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":5337,"src":"499:7:13"},"nodeType":"UsingForDirective","src":"493:26:13","typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":2684,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"731:20:13","nodeType":"VariableDeclaration","scope":2786,"src":"707:65:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2679,"name":"bytes4","nodeType":"ElementaryTypeName","src":"707:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"761:10:13","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"754:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2680,"name":"bytes4","nodeType":"ElementaryTypeName","src":"754:6:13","typeDescriptions":{}}},"id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"754:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":2688,"mutability":"mutable","name":"_tokenURIs","nameLocation":"861:10:13","nodeType":"VariableDeclaration","scope":2786,"src":"818:53:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2687,"keyName":"tokenId","keyNameLocation":"834:7:13","keyType":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"818:34:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2686,"name":"string","nodeType":"ElementaryTypeName","src":"845:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[1669,5372],"body":{"id":2708,"nodeType":"Block","src":"1046:99:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2699,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"1063:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2700,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"1078:20:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1063:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2704,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"1126:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2702,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1102:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2786_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1108:17:13","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1669,"src":"1102:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1063:75:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2698,"id":2707,"nodeType":"Return","src":"1056:82:13"}]},"documentation":{"id":2689,"nodeType":"StructuredDocumentation","src":"878:55:13","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":2709,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"947:17:13","nodeType":"FunctionDefinition","overrides":{"id":2695,"nodeType":"OverrideSpecifier","overrides":[{"id":2693,"name":"ERC721","nameLocations":["1014:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2525,"src":"1014:6:13"},{"id":2694,"name":"IERC165","nameLocations":["1022:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":5373,"src":"1022:7:13"}],"src":"1005:25:13"},"parameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2691,"mutability":"mutable","name":"interfaceId","nameLocation":"972:11:13","nodeType":"VariableDeclaration","scope":2709,"src":"965:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2690,"name":"bytes4","nodeType":"ElementaryTypeName","src":"965:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"964:20:13"},"returnParameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2709,"src":"1040:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2696,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:6:13"},"scope":2786,"src":"938:207:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1764],"body":{"id":2765,"nodeType":"Block","src":"1299:505:13","statements":[{"expression":{"arguments":[{"id":2719,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"1323:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2718,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"1309:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1309:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2721,"nodeType":"ExpressionStatement","src":"1309:22:13"},{"assignments":[2723],"declarations":[{"constant":false,"id":2723,"mutability":"mutable","name":"_tokenURI","nameLocation":"1356:9:13","nodeType":"VariableDeclaration","scope":2765,"src":"1342:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2722,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2727,"initialValue":{"baseExpression":{"id":2724,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"1368:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2726,"indexExpression":{"id":2725,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"1379:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1368:19:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1342:45:13"},{"assignments":[2729],"declarations":[{"constant":false,"id":2729,"mutability":"mutable","name":"base","nameLocation":"1411:4:13","nodeType":"VariableDeclaration","scope":2765,"src":"1397:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2728,"name":"string","nodeType":"ElementaryTypeName","src":"1397:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2732,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2730,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"1418:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1418:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1397:31:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2735,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"1507:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1501:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2733,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:13","typeDescriptions":{}}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1501:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1513:6:13","memberName":"length","nodeType":"MemberAccess","src":"1501:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1523:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1501:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2743,"nodeType":"IfStatement","src":"1497:70:13","trueBody":{"id":2742,"nodeType":"Block","src":"1526:41:13","statements":[{"expression":{"id":2740,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"1547:9:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2717,"id":2741,"nodeType":"Return","src":"1540:16:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2746,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"1672:9:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1666:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2744,"name":"bytes","nodeType":"ElementaryTypeName","src":"1666:5:13","typeDescriptions":{}}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1683:6:13","memberName":"length","nodeType":"MemberAccess","src":"1666:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1666:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2759,"nodeType":"IfStatement","src":"1662:95:13","trueBody":{"id":2758,"nodeType":"Block","src":"1695:62:13","statements":[{"expression":{"arguments":[{"id":2754,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"1730:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2755,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"1736:9:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1716:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2751,"name":"string","nodeType":"ElementaryTypeName","src":"1716:6:13","typeDescriptions":{}}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1723:6:13","memberName":"concat","nodeType":"MemberAccess","src":"1716:13:13","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2717,"id":2757,"nodeType":"Return","src":"1709:37:13"}]}},{"expression":{"arguments":[{"id":2762,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"1789:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2760,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1774:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2786_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1780:8:13","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1764,"src":"1774:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2717,"id":2764,"nodeType":"Return","src":"1767:30:13"}]},"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"1151:55:13","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2766,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1220:8:13","nodeType":"FunctionDefinition","overrides":{"id":2714,"nodeType":"OverrideSpecifier","overrides":[],"src":"1266:8:13"},"parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"tokenId","nameLocation":"1237:7:13","nodeType":"VariableDeclaration","scope":2766,"src":"1229:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:17:13"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2766,"src":"1284:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2715,"name":"string","nodeType":"ElementaryTypeName","src":"1284:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1283:15:13"},"scope":2786,"src":"1211:593:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2784,"nodeType":"Block","src":"2004:86:13","statements":[{"expression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2774,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"2014:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2776,"indexExpression":{"id":2775,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"2025:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2014:19:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2777,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"2036:9:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2014:31:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2779,"nodeType":"ExpressionStatement","src":"2014:31:13"},{"eventCall":{"arguments":[{"id":2781,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"2075:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2780,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2060:14:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2783,"nodeType":"EmitStatement","src":"2055:28:13"}]},"documentation":{"id":2767,"nodeType":"StructuredDocumentation","src":"1810:108:13","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."},"id":2785,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1932:12:13","nodeType":"FunctionDefinition","parameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"tokenId","nameLocation":"1953:7:13","nodeType":"VariableDeclaration","scope":2785,"src":"1945:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"_tokenURI","nameLocation":"1976:9:13","nodeType":"VariableDeclaration","scope":2785,"src":"1962:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2770,"name":"string","nodeType":"ElementaryTypeName","src":"1962:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1944:42:13"},"returnParameters":{"id":2773,"nodeType":"ParameterList","parameters":[],"src":"2004:0:13"},"scope":2786,"src":"1923:167:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2787,"src":"432:1660:13","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[167,174,2541,2550,2559]}],"src":"128:1965:13"},"id":13},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2642],"IERC721Metadata":[2814]},"id":2815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2788,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2790,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2815,"sourceUnit":2643,"src":"153:39:14","symbolAliases":[{"foreign":{"id":2789,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"161:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2792,"name":"IERC721","nameLocations":["357:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2642,"src":"357:7:14"},"id":2793,"nodeType":"InheritanceSpecifier","src":"357:7:14"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2791,"nodeType":"StructuredDocumentation","src":"194:133:14","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2814,"linearizedBaseContracts":[2814,2642,5373],"name":"IERC721Metadata","nameLocation":"338:15:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"371:58:14","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2799,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:14","nodeType":"FunctionDefinition","parameters":{"id":2795,"nodeType":"ParameterList","parameters":[],"src":"447:2:14"},"returnParameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2799,"src":"473:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2796,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:14"},"scope":2814,"src":"434:54:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2800,"nodeType":"StructuredDocumentation","src":"494:60:14","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2805,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:14","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[],"src":"574:2:14"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2805,"src":"600:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2802,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:14"},"scope":2814,"src":"559:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2806,"nodeType":"StructuredDocumentation","src":"621:90:14","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2813,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:14","nodeType":"FunctionDefinition","parameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:14","nodeType":"VariableDeclaration","scope":2813,"src":"734:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:14"},"returnParameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2813,"src":"774:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2810,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:14"},"scope":2814,"src":"716:73:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2815,"src":"328:463:14","usedErrors":[],"usedEvents":[2541,2550,2559]}],"src":"127:665:14"},"id":14},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2891],"IERC721Errors":[269],"IERC721Receiver":[2660]},"id":2892,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2816,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2892,"sourceUnit":2661,"src":"144:55:15","symbolAliases":[{"foreign":{"id":2817,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"152:15:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2820,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2892,"sourceUnit":317,"src":"200:69:15","symbolAliases":[{"foreign":{"id":2819,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"208:13:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"271:159:15","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2891,"linearizedBaseContracts":[2891],"name":"ERC721Utils","nameLocation":"439:11:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2889,"nodeType":"Block","src":"1151:758:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2835,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"1165:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:15","memberName":"code","nodeType":"MemberAccess","src":"1165:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:15","memberName":"length","nodeType":"MemberAccess","src":"1165:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2888,"nodeType":"IfStatement","src":"1161:742:15","trueBody":{"id":2887,"nodeType":"Block","src":"1185:718:15","statements":[{"clauses":[{"block":{"id":2865,"nodeType":"Block","src":"1295:214:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2852,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"1317:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2853,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"1327:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2660_$","typeString":"type(contract IERC721Receiver)"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:15","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2659,"src":"1327:32:15","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:15","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2864,"nodeType":"IfStatement","src":"1313:182:15","trueBody":{"id":2863,"nodeType":"Block","src":"1370:125:15","statements":[{"errorCall":{"arguments":[{"id":2860,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"1473:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2857,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1437:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$269_$","typeString":"type(contract IERC721Errors)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:15","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":251,"src":"1437:35:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2862,"nodeType":"RevertStatement","src":"1430:46:15"}]}}]},"errorName":"","id":2866,"nodeType":"TryCatchClause","parameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"retval","nameLocation":"1287:6:15","nodeType":"VariableDeclaration","scope":2866,"src":"1280:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2849,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:15"},"src":"1271:238:15"},{"block":{"id":2884,"nodeType":"Block","src":"1538:355:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2870,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"1560:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:15","memberName":"length","nodeType":"MemberAccess","src":"1560:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2882,"nodeType":"Block","src":"1728:151:15","statements":[{"AST":{"nodeType":"YulBlock","src":"1775:86:15","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1812:2:15","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1816:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1808:3:15"},"nodeType":"YulFunctionCall","src":"1808:15:15"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1831:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1825:5:15"},"nodeType":"YulFunctionCall","src":"1825:13:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1801:6:15"},"nodeType":"YulFunctionCall","src":"1801:38:15"},"nodeType":"YulExpressionStatement","src":"1801:38:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":2868,"isOffset":false,"isSlot":false,"src":"1816:6:15","valueSize":1},{"declaration":2868,"isOffset":false,"isSlot":false,"src":"1831:6:15","valueSize":1}],"flags":["memory-safe"],"id":2881,"nodeType":"InlineAssembly","src":"1750:111:15"}]},"id":2883,"nodeType":"IfStatement","src":"1556:323:15","trueBody":{"id":2880,"nodeType":"Block","src":"1580:142:15","statements":[{"errorCall":{"arguments":[{"id":2877,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"1700:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2874,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1664:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$269_$","typeString":"type(contract IERC721Errors)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:15","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":251,"src":"1664:35:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2879,"nodeType":"RevertStatement","src":"1657:46:15"}]}}]},"errorName":"","id":2885,"nodeType":"TryCatchClause","parameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"reason","nameLocation":"1530:6:15","nodeType":"VariableDeclaration","scope":2885,"src":"1517:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2867,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:15"},"src":"1510:383:15"}],"externalCall":{"arguments":[{"id":2844,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"1240:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2845,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"1250:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2846,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"1256:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2847,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"1265:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2841,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"1219:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2840,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"1203:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2660_$","typeString":"type(contract IERC721Receiver)"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2660","typeString":"contract IERC721Receiver"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:15","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2659,"src":"1203:36:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:15","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2886,"nodeType":"TryStatement","src":"1199:694:15"}]}}]},"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"457:523:15","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2890,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:15","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"operator","nameLocation":"1033:8:15","nodeType":"VariableDeclaration","scope":2890,"src":"1025:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2823,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"from","nameLocation":"1059:4:15","nodeType":"VariableDeclaration","scope":2890,"src":"1051:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2825,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"to","nameLocation":"1081:2:15","nodeType":"VariableDeclaration","scope":2890,"src":"1073:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2827,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2830,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:15","nodeType":"VariableDeclaration","scope":2890,"src":"1093:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2832,"mutability":"mutable","name":"data","nameLocation":"1131:4:15","nodeType":"VariableDeclaration","scope":2890,"src":"1118:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2831,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:15"},"returnParameters":{"id":2834,"nodeType":"ParameterList","parameters":[],"src":"1151:0:15"},"scope":2891,"src":"985:924:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2892,"src":"431:1480:15","usedErrors":[],"usedEvents":[]}],"src":"118:1794:15"},"id":15},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[3769],"Comparators":[3801],"Math":[6979],"SlotDerivation":[4013],"StorageSlot":[4137]},"id":3770,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2893,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":2895,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3770,"sourceUnit":3802,"src":"209:46:16","symbolAliases":[{"foreign":{"id":2894,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"217:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":2897,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3770,"sourceUnit":4014,"src":"256:52:16","symbolAliases":[{"foreign":{"id":2896,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"264:14:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2899,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3770,"sourceUnit":4138,"src":"309:46:16","symbolAliases":[{"foreign":{"id":2898,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"317:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3770,"sourceUnit":6980,"src":"356:37:16","symbolAliases":[{"foreign":{"id":2900,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"364:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":2902,"nodeType":"StructuredDocumentation","src":"395:63:16","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":3769,"linearizedBaseContracts":[3769],"name":"Arrays","nameLocation":"467:6:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2905,"libraryName":{"id":2903,"name":"SlotDerivation","nameLocations":["486:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":4013,"src":"486:14:16"},"nodeType":"UsingForDirective","src":"480:33:16","typeName":{"id":2904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":2908,"libraryName":{"id":2906,"name":"StorageSlot","nameLocations":["524:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":4137,"src":"524:11:16"},"nodeType":"UsingForDirective","src":"518:30:16","typeName":{"id":2907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":2940,"nodeType":"Block","src":"1628:83:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2930,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"1656:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2929,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"1649:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2933,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"1669:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2932,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"1664:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2935,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"1677:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2928,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"1638:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2937,"nodeType":"ExpressionStatement","src":"1638:44:16"},{"expression":{"id":2938,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"1699:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2927,"id":2939,"nodeType":"Return","src":"1692:12:16"}]},"documentation":{"id":2909,"nodeType":"StructuredDocumentation","src":"554:915:16","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2941,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:16","nodeType":"FunctionDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"array","nameLocation":"1514:5:16","nodeType":"VariableDeclaration","scope":2941,"src":"1497:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2911,"nodeType":"ArrayTypeName","src":"1497:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2922,"mutability":"mutable","name":"comp","nameLocation":"1576:4:16","nodeType":"VariableDeclaration","scope":2941,"src":"1529:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2921,"nodeType":"FunctionTypeName","parameterTypes":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2921,"src":"1538:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2921,"src":"1547:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:16"},"returnParameterTypes":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2921,"src":"1570:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2918,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:16"},"src":"1529:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:16"},"returnParameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2941,"src":"1610:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2925,"nodeType":"ArrayTypeName","src":"1610:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:16"},"scope":3769,"src":"1474:237:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2959,"nodeType":"Block","src":"1894:66:16","statements":[{"expression":{"arguments":[{"id":2952,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"1909:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2953,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"1916:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3801_$","typeString":"type(library Comparators)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3786,"src":"1916:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2951,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2941,2960,2992,3013,3045,3066],"referencedDeclaration":2941,"src":"1904:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2956,"nodeType":"ExpressionStatement","src":"1904:27:16"},{"expression":{"id":2957,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"1948:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2950,"id":2958,"nodeType":"Return","src":"1941:12:16"}]},"documentation":{"id":2942,"nodeType":"StructuredDocumentation","src":"1717:93:16","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":2960,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:16","nodeType":"FunctionDefinition","parameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"array","nameLocation":"1846:5:16","nodeType":"VariableDeclaration","scope":2960,"src":"1829:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2944,"nodeType":"ArrayTypeName","src":"1829:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:16"},"returnParameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2960,"src":"1876:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2948,"nodeType":"ArrayTypeName","src":"1876:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:16"},"scope":3769,"src":"1815:145:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2991,"nodeType":"Block","src":"3040:97:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2982,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"3075:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2981,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3217,3229],"referencedDeclaration":3217,"src":"3055:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2985,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"3102:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":2984,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3255,3281],"referencedDeclaration":3255,"src":"3083:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2980,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2941,2960,2992,3013,3045,3066],"referencedDeclaration":2941,"src":"3050:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2988,"nodeType":"ExpressionStatement","src":"3050:58:16"},{"expression":{"id":2989,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"3125:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2979,"id":2990,"nodeType":"Return","src":"3118:12:16"}]},"documentation":{"id":2961,"nodeType":"StructuredDocumentation","src":"1966:915:16","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2992,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:16","nodeType":"FunctionDefinition","parameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"array","nameLocation":"2926:5:16","nodeType":"VariableDeclaration","scope":2992,"src":"2909:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2962,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2963,"nodeType":"ArrayTypeName","src":"2909:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"comp","nameLocation":"2988:4:16","nodeType":"VariableDeclaration","scope":2992,"src":"2941:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2973,"nodeType":"FunctionTypeName","parameterTypes":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2973,"src":"2950:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2973,"src":"2959:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2967,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:16"},"returnParameterTypes":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2973,"src":"2982:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2970,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:16"},"src":"2941:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:16"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2992,"src":"3022:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2976,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2977,"nodeType":"ArrayTypeName","src":"3022:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:16"},"scope":3769,"src":"2886:251:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3012,"nodeType":"Block","src":"3320:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3004,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"3355:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3003,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3217,3229],"referencedDeclaration":3217,"src":"3335:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3006,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"3363:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3801_$","typeString":"type(library Comparators)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3786,"src":"3363:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3002,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2941,2960,2992,3013,3045,3066],"referencedDeclaration":2941,"src":"3330:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3009,"nodeType":"ExpressionStatement","src":"3330:48:16"},{"expression":{"id":3010,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"3395:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3001,"id":3011,"nodeType":"Return","src":"3388:12:16"}]},"documentation":{"id":2993,"nodeType":"StructuredDocumentation","src":"3143:93:16","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":3013,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:16","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"array","nameLocation":"3272:5:16","nodeType":"VariableDeclaration","scope":3013,"src":"3255:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2994,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2995,"nodeType":"ArrayTypeName","src":"3255:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:16"},"returnParameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3013,"src":"3302:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2998,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2999,"nodeType":"ArrayTypeName","src":"3302:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:16"},"scope":3769,"src":"3241:166:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3044,"nodeType":"Block","src":"4487:97:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3035,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"4522:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3034,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3217,3229],"referencedDeclaration":3229,"src":"4502:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3038,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"4549:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":3037,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3255,3281],"referencedDeclaration":3281,"src":"4530:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3033,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2941,2960,2992,3013,3045,3066],"referencedDeclaration":2941,"src":"4497:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3041,"nodeType":"ExpressionStatement","src":"4497:58:16"},{"expression":{"id":3042,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"4572:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3032,"id":3043,"nodeType":"Return","src":"4565:12:16"}]},"documentation":{"id":3014,"nodeType":"StructuredDocumentation","src":"3413:915:16","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3045,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:16","nodeType":"FunctionDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"array","nameLocation":"4373:5:16","nodeType":"VariableDeclaration","scope":3045,"src":"4356:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3016,"nodeType":"ArrayTypeName","src":"4356:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3027,"mutability":"mutable","name":"comp","nameLocation":"4435:4:16","nodeType":"VariableDeclaration","scope":3045,"src":"4388:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3026,"nodeType":"FunctionTypeName","parameterTypes":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3026,"src":"4397:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3026,"src":"4406:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:16"},"returnParameterTypes":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3026,"src":"4429:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3023,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:16"},"src":"4388:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:16"},"returnParameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3045,"src":"4469:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3030,"nodeType":"ArrayTypeName","src":"4469:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:16"},"scope":3769,"src":"4333:251:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3065,"nodeType":"Block","src":"4767:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3057,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4802:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3056,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3217,3229],"referencedDeclaration":3229,"src":"4782:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3059,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"4810:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3801_$","typeString":"type(library Comparators)"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3786,"src":"4810:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3055,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2941,2960,2992,3013,3045,3066],"referencedDeclaration":2941,"src":"4777:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3062,"nodeType":"ExpressionStatement","src":"4777:48:16"},{"expression":{"id":3063,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"4842:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3054,"id":3064,"nodeType":"Return","src":"4835:12:16"}]},"documentation":{"id":3046,"nodeType":"StructuredDocumentation","src":"4590:93:16","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":3066,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:16","nodeType":"FunctionDefinition","parameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"array","nameLocation":"4719:5:16","nodeType":"VariableDeclaration","scope":3066,"src":"4702:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3048,"nodeType":"ArrayTypeName","src":"4702:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:16"},"returnParameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3066,"src":"4749:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3052,"nodeType":"ArrayTypeName","src":"4749:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:16"},"scope":3769,"src":"4688:166:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3153,"nodeType":"Block","src":"5470:889:16","statements":[{"id":3152,"nodeType":"UncheckedBlock","src":"5480:873:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"5508:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3085,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"5514:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":3087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3090,"nodeType":"IfStatement","src":"5504:31:16","trueBody":{"functionReturnParameters":3083,"id":3089,"nodeType":"Return","src":"5528:7:16"}},{"assignments":[3092],"declarations":[{"constant":false,"id":3092,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:16","nodeType":"VariableDeclaration","scope":3152,"src":"5591:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3091,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3096,"initialValue":{"arguments":[{"id":3094,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"5614:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3093,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"5607:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:16"},{"assignments":[3098],"declarations":[{"constant":false,"id":3098,"mutability":"mutable","name":"pos","nameLocation":"5715:3:16","nodeType":"VariableDeclaration","scope":3152,"src":"5707:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3100,"initialValue":{"id":3099,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"5721:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:16"},{"body":{"id":3131,"nodeType":"Block","src":"5795:331:16","statements":[{"condition":{"arguments":[{"arguments":[{"id":3116,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"5829:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3115,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"5822:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3118,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"5834:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3114,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"5817:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3130,"nodeType":"IfStatement","src":"5813:299:16","trueBody":{"id":3129,"nodeType":"Block","src":"5842:270:16","statements":[{"expression":{"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3120,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"6046:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3123,"nodeType":"ExpressionStatement","src":"6046:11:16"},{"expression":{"arguments":[{"id":3125,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"6085:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3126,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"6090:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3124,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"6079:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3128,"nodeType":"ExpressionStatement","src":"6079:14:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3107,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"5773:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3108,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"5778:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3132,"initializationExpression":{"assignments":[3102],"declarations":[{"constant":false,"id":3102,"mutability":"mutable","name":"it","nameLocation":"5754:2:16","nodeType":"VariableDeclaration","scope":3132,"src":"5746:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3106,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3103,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"5759:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:16"},"loopExpression":{"expression":{"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3110,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"5783:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3113,"nodeType":"ExpressionStatement","src":"5783:10:16"},"nodeType":"ForStatement","src":"5741:385:16"},{"expression":{"arguments":[{"id":3134,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"6146:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3135,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"6153:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3133,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"6140:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3137,"nodeType":"ExpressionStatement","src":"6140:17:16"},{"expression":{"arguments":[{"id":3139,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"6207:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3140,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"6214:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3141,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"6219:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3138,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"6196:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3143,"nodeType":"ExpressionStatement","src":"6196:28:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3145,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"6284:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3148,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"6296:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3149,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"6301:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3144,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"6273:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3151,"nodeType":"ExpressionStatement","src":"6273:33:16"}]}]},"documentation":{"id":3067,"nodeType":"StructuredDocumentation","src":"4860:491:16","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":3154,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:16","nodeType":"FunctionDefinition","parameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"begin","nameLocation":"5384:5:16","nodeType":"VariableDeclaration","scope":3154,"src":"5376:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3071,"mutability":"mutable","name":"end","nameLocation":"5399:3:16","nodeType":"VariableDeclaration","scope":3154,"src":"5391:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3070,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"comp","nameLocation":"5451:4:16","nodeType":"VariableDeclaration","scope":3154,"src":"5404:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3080,"nodeType":"FunctionTypeName","parameterTypes":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3080,"src":"5413:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3080,"src":"5422:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:16"},"returnParameterTypes":{"id":3079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3080,"src":"5445:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3077,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:16"},"src":"5404:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:16"},"returnParameters":{"id":3083,"nodeType":"ParameterList","parameters":[],"src":"5470:0:16"},"scope":3769,"src":"5356:1003:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3164,"nodeType":"Block","src":"6532:88:16","statements":[{"AST":{"nodeType":"YulBlock","src":"6567:47:16","statements":[{"nodeType":"YulAssignment","src":"6581:23:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6592:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6599:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:16"},"nodeType":"YulFunctionCall","src":"6588:16:16"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6581:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3158,"isOffset":false,"isSlot":false,"src":"6592:5:16","valueSize":1},{"declaration":3161,"isOffset":false,"isSlot":false,"src":"6581:3:16","valueSize":1}],"flags":["memory-safe"],"id":3163,"nodeType":"InlineAssembly","src":"6542:72:16"}]},"documentation":{"id":3155,"nodeType":"StructuredDocumentation","src":"6365:87:16","text":" @dev Pointer to the memory location of the first element of `array`."},"id":3165,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:16","nodeType":"FunctionDefinition","parameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"array","nameLocation":"6490:5:16","nodeType":"VariableDeclaration","scope":3165,"src":"6473:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3157,"nodeType":"ArrayTypeName","src":"6473:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:16"},"returnParameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:16","nodeType":"VariableDeclaration","scope":3165,"src":"6519:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:16"},"scope":3769,"src":"6457:163:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3184,"nodeType":"Block","src":"6892:93:16","statements":[{"id":3183,"nodeType":"UncheckedBlock","src":"6902:77:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3175,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"6940:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3174,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"6933:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3177,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"6949:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:16","memberName":"length","nodeType":"MemberAccess","src":"6949:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3173,"id":3182,"nodeType":"Return","src":"6926:42:16"}]}]},"documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"6626:188:16","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":3185,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:16","nodeType":"FunctionDefinition","parameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"array","nameLocation":"6850:5:16","nodeType":"VariableDeclaration","scope":3185,"src":"6833:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3168,"nodeType":"ArrayTypeName","src":"6833:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:16"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3172,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:16","nodeType":"VariableDeclaration","scope":3185,"src":"6879:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:16"},"scope":3769,"src":"6819:166:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3194,"nodeType":"Block","src":"7136:68:16","statements":[{"AST":{"nodeType":"YulBlock","src":"7155:43:16","statements":[{"nodeType":"YulAssignment","src":"7169:19:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7184:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7178:5:16"},"nodeType":"YulFunctionCall","src":"7178:10:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7169:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3188,"isOffset":false,"isSlot":false,"src":"7184:3:16","valueSize":1},{"declaration":3191,"isOffset":false,"isSlot":false,"src":"7169:5:16","valueSize":1}],"id":3193,"nodeType":"InlineAssembly","src":"7146:52:16"}]},"documentation":{"id":3186,"nodeType":"StructuredDocumentation","src":"6991:74:16","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":3195,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:16","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:16","nodeType":"VariableDeclaration","scope":3195,"src":"7086:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:16"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"value","nameLocation":"7129:5:16","nodeType":"VariableDeclaration","scope":3195,"src":"7121:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:16"},"scope":3769,"src":"7070:134:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3204,"nodeType":"Block","src":"7348:178:16","statements":[{"AST":{"nodeType":"YulBlock","src":"7367:153:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:25:16","value":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7401:4:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7395:5:16"},"nodeType":"YulFunctionCall","src":"7395:11:16"},"variables":[{"name":"value1","nodeType":"YulTypedName","src":"7385:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7419:25:16","value":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7439:4:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7433:5:16"},"nodeType":"YulFunctionCall","src":"7433:11:16"},"variables":[{"name":"value2","nodeType":"YulTypedName","src":"7423:6:16","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7464:4:16"},{"name":"value2","nodeType":"YulIdentifier","src":"7470:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:16"},"nodeType":"YulFunctionCall","src":"7457:20:16"},"nodeType":"YulExpressionStatement","src":"7457:20:16"},{"expression":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7497:4:16"},{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:16"},"nodeType":"YulFunctionCall","src":"7490:20:16"},"nodeType":"YulExpressionStatement","src":"7490:20:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3198,"isOffset":false,"isSlot":false,"src":"7401:4:16","valueSize":1},{"declaration":3198,"isOffset":false,"isSlot":false,"src":"7464:4:16","valueSize":1},{"declaration":3200,"isOffset":false,"isSlot":false,"src":"7439:4:16","valueSize":1},{"declaration":3200,"isOffset":false,"isSlot":false,"src":"7497:4:16","valueSize":1}],"id":3203,"nodeType":"InlineAssembly","src":"7358:162:16"}]},"documentation":{"id":3196,"nodeType":"StructuredDocumentation","src":"7210:77:16","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":3205,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:16","nodeType":"FunctionDefinition","parameters":{"id":3201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:16","nodeType":"VariableDeclaration","scope":3205,"src":"7307:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:16","nodeType":"VariableDeclaration","scope":3205,"src":"7321:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:16"},"returnParameters":{"id":3202,"nodeType":"ParameterList","parameters":[],"src":"7348:0:16"},"scope":3769,"src":"7292:234:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3216,"nodeType":"Block","src":"7713:64:16","statements":[{"AST":{"nodeType":"YulBlock","src":"7732:39:16","statements":[{"nodeType":"YulAssignment","src":"7746:15:16","value":{"name":"input","nodeType":"YulIdentifier","src":"7756:5:16"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7746:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3209,"isOffset":false,"isSlot":false,"src":"7756:5:16","valueSize":1},{"declaration":3213,"isOffset":false,"isSlot":false,"src":"7746:6:16","valueSize":1}],"id":3215,"nodeType":"InlineAssembly","src":"7723:48:16"}]},"documentation":{"id":3206,"nodeType":"StructuredDocumentation","src":"7532:76:16","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":3217,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:16","nodeType":"FunctionDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"input","nameLocation":"7659:5:16","nodeType":"VariableDeclaration","scope":3217,"src":"7642:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3208,"nodeType":"ArrayTypeName","src":"7642:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:16"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"output","nameLocation":"7705:6:16","nodeType":"VariableDeclaration","scope":3217,"src":"7688:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3212,"nodeType":"ArrayTypeName","src":"7688:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:16"},"scope":3769,"src":"7613:164:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3228,"nodeType":"Block","src":"7964:64:16","statements":[{"AST":{"nodeType":"YulBlock","src":"7983:39:16","statements":[{"nodeType":"YulAssignment","src":"7997:15:16","value":{"name":"input","nodeType":"YulIdentifier","src":"8007:5:16"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7997:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3221,"isOffset":false,"isSlot":false,"src":"8007:5:16","valueSize":1},{"declaration":3225,"isOffset":false,"isSlot":false,"src":"7997:6:16","valueSize":1}],"id":3227,"nodeType":"InlineAssembly","src":"7974:48:16"}]},"documentation":{"id":3218,"nodeType":"StructuredDocumentation","src":"7783:76:16","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":3229,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:16","nodeType":"FunctionDefinition","parameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"input","nameLocation":"7910:5:16","nodeType":"VariableDeclaration","scope":3229,"src":"7893:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3220,"nodeType":"ArrayTypeName","src":"7893:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:16"},"returnParameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"output","nameLocation":"7956:6:16","nodeType":"VariableDeclaration","scope":3229,"src":"7939:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3224,"nodeType":"ArrayTypeName","src":"7939:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:16"},"scope":3769,"src":"7864:164:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3254,"nodeType":"Block","src":"8290:64:16","statements":[{"AST":{"nodeType":"YulBlock","src":"8309:39:16","statements":[{"nodeType":"YulAssignment","src":"8323:15:16","value":{"name":"input","nodeType":"YulIdentifier","src":"8333:5:16"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8323:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3240,"isOffset":false,"isSlot":false,"src":"8333:5:16","valueSize":1},{"declaration":3251,"isOffset":false,"isSlot":false,"src":"8323:6:16","valueSize":1}],"id":3253,"nodeType":"InlineAssembly","src":"8300:48:16"}]},"documentation":{"id":3230,"nodeType":"StructuredDocumentation","src":"8034:78:16","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":3255,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:16","nodeType":"FunctionDefinition","parameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"input","nameLocation":"8201:5:16","nodeType":"VariableDeclaration","scope":3255,"src":"8154:52:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3239,"nodeType":"FunctionTypeName","parameterTypes":{"id":3235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3239,"src":"8163:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3231,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3239,"src":"8172:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3233,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:16"},"returnParameterTypes":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3239,"src":"8195:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3236,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:16"},"src":"8154:52:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:16"},"returnParameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"output","nameLocation":"8282:6:16","nodeType":"VariableDeclaration","scope":3255,"src":"8235:53:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3250,"nodeType":"FunctionTypeName","parameterTypes":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3250,"src":"8244:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3242,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3250,"src":"8253:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3244,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:16"},"returnParameterTypes":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3250,"src":"8276:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3247,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:16"},"src":"8235:53:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:16"},"scope":3769,"src":"8117:237:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3280,"nodeType":"Block","src":"8616:64:16","statements":[{"AST":{"nodeType":"YulBlock","src":"8635:39:16","statements":[{"nodeType":"YulAssignment","src":"8649:15:16","value":{"name":"input","nodeType":"YulIdentifier","src":"8659:5:16"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8649:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3266,"isOffset":false,"isSlot":false,"src":"8659:5:16","valueSize":1},{"declaration":3277,"isOffset":false,"isSlot":false,"src":"8649:6:16","valueSize":1}],"id":3279,"nodeType":"InlineAssembly","src":"8626:48:16"}]},"documentation":{"id":3256,"nodeType":"StructuredDocumentation","src":"8360:78:16","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":3281,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:16","nodeType":"FunctionDefinition","parameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"input","nameLocation":"8527:5:16","nodeType":"VariableDeclaration","scope":3281,"src":"8480:52:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3265,"nodeType":"FunctionTypeName","parameterTypes":{"id":3261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"8489:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"8498:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:16"},"returnParameterTypes":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"8521:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3262,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:16"},"src":"8480:52:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:16"},"returnParameters":{"id":3278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"output","nameLocation":"8608:6:16","nodeType":"VariableDeclaration","scope":3281,"src":"8561:53:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3276,"nodeType":"FunctionTypeName","parameterTypes":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3276,"src":"8570:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3276,"src":"8579:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:16"},"returnParameterTypes":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3276,"src":"8602:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3273,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:16"},"src":"8561:53:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:16"},"scope":3769,"src":"8443:237:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3363,"nodeType":"Block","src":"9405:834:16","statements":[{"assignments":[3293],"declarations":[{"constant":false,"id":3293,"mutability":"mutable","name":"low","nameLocation":"9423:3:16","nodeType":"VariableDeclaration","scope":3363,"src":"9415:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3295,"initialValue":{"hexValue":"30","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:16"},{"assignments":[3297],"declarations":[{"constant":false,"id":3297,"mutability":"mutable","name":"high","nameLocation":"9448:4:16","nodeType":"VariableDeclaration","scope":3363,"src":"9440:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3300,"initialValue":{"expression":{"id":3298,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"9455:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:16","memberName":"length","nodeType":"MemberAccess","src":"9455:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3301,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"9482:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3307,"nodeType":"IfStatement","src":"9478:48:16","trueBody":{"id":3306,"nodeType":"Block","src":"9493:33:16","statements":[{"expression":{"hexValue":"30","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3291,"id":3305,"nodeType":"Return","src":"9507:8:16"}]}},{"body":{"id":3339,"nodeType":"Block","src":"9555:423:16","statements":[{"assignments":[3312],"declarations":[{"constant":false,"id":3312,"mutability":"mutable","name":"mid","nameLocation":"9577:3:16","nodeType":"VariableDeclaration","scope":3339,"src":"9569:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3318,"initialValue":{"arguments":[{"id":3315,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"9596:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3316,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"9601:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3313,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"9583:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6979_$","typeString":"type(library Math)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5631,"src":"9583:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3320,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"9844:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3321,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"9851:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3319,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3644,3670,3696],"referencedDeclaration":3696,"src":"9831:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4028_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4028_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4027,"src":"9831:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3324,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"9864:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3337,"nodeType":"Block","src":"9922:46:16","statements":[{"expression":{"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3331,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"9940:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"9946:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3336,"nodeType":"ExpressionStatement","src":"9940:13:16"}]},"id":3338,"nodeType":"IfStatement","src":"9827:141:16","trueBody":{"id":3330,"nodeType":"Block","src":"9873:43:16","statements":[{"expression":{"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3326,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"9891:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3327,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"9898:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3329,"nodeType":"ExpressionStatement","src":"9891:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3308,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"9543:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3309,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"9549:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3340,"nodeType":"WhileStatement","src":"9536:442:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3341,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"10095:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3345,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"10119:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3346,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"10126:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3344,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3644,3670,3696],"referencedDeclaration":3696,"src":"10106:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4028_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4028_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4027,"src":"10106:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3351,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"10144:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3361,"nodeType":"Block","src":"10198:35:16","statements":[{"expression":{"id":3359,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"10219:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3291,"id":3360,"nodeType":"Return","src":"10212:10:16"}]},"id":3362,"nodeType":"IfStatement","src":"10091:142:16","trueBody":{"id":3358,"nodeType":"Block","src":"10153:39:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"10174:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3291,"id":3357,"nodeType":"Return","src":"10167:14:16"}]}}]},"documentation":{"id":3282,"nodeType":"StructuredDocumentation","src":"8686:616:16","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":3364,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:16","nodeType":"FunctionDefinition","parameters":{"id":3288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"array","nameLocation":"9349:5:16","nodeType":"VariableDeclaration","scope":3364,"src":"9331:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3284,"nodeType":"ArrayTypeName","src":"9331:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"element","nameLocation":"9364:7:16","nodeType":"VariableDeclaration","scope":3364,"src":"9356:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3286,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:16"},"returnParameters":{"id":3291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3364,"src":"9396:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:16"},"scope":3769,"src":"9307:932:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3427,"nodeType":"Block","src":"10756:709:16","statements":[{"assignments":[3376],"declarations":[{"constant":false,"id":3376,"mutability":"mutable","name":"low","nameLocation":"10774:3:16","nodeType":"VariableDeclaration","scope":3427,"src":"10766:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3378,"initialValue":{"hexValue":"30","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:16"},{"assignments":[3380],"declarations":[{"constant":false,"id":3380,"mutability":"mutable","name":"high","nameLocation":"10799:4:16","nodeType":"VariableDeclaration","scope":3427,"src":"10791:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3383,"initialValue":{"expression":{"id":3381,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"10806:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:16","memberName":"length","nodeType":"MemberAccess","src":"10806:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"10833:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3390,"nodeType":"IfStatement","src":"10829:48:16","trueBody":{"id":3389,"nodeType":"Block","src":"10844:33:16","statements":[{"expression":{"hexValue":"30","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3374,"id":3388,"nodeType":"Return","src":"10858:8:16"}]}},{"body":{"id":3423,"nodeType":"Block","src":"10906:532:16","statements":[{"assignments":[3395],"declarations":[{"constant":false,"id":3395,"mutability":"mutable","name":"mid","nameLocation":"10928:3:16","nodeType":"VariableDeclaration","scope":3423,"src":"10920:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3401,"initialValue":{"arguments":[{"id":3398,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"10947:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3399,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"10952:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3396,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"10934:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6979_$","typeString":"type(library Math)"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5631,"src":"10934:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3403,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"11195:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3404,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"11202:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3402,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3644,3670,3696],"referencedDeclaration":3696,"src":"11182:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4028_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4028_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4027,"src":"11182:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3407,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"11215:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3421,"nodeType":"Block","src":"11385:43:16","statements":[{"expression":{"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3417,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"11403:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3418,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"11410:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3420,"nodeType":"ExpressionStatement","src":"11403:10:16"}]},"id":3422,"nodeType":"IfStatement","src":"11178:250:16","trueBody":{"id":3416,"nodeType":"Block","src":"11224:155:16","statements":[{"id":3415,"nodeType":"UncheckedBlock","src":"11301:64:16","statements":[{"expression":{"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3409,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"11333:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3410,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"11339:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3414,"nodeType":"ExpressionStatement","src":"11333:13:16"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3391,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"10894:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3392,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"10900:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3424,"nodeType":"WhileStatement","src":"10887:551:16"},{"expression":{"id":3425,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"11455:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3374,"id":3426,"nodeType":"Return","src":"11448:10:16"}]},"documentation":{"id":3365,"nodeType":"StructuredDocumentation","src":"10245:412:16","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":3428,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:16","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"array","nameLocation":"10700:5:16","nodeType":"VariableDeclaration","scope":3428,"src":"10682:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3366,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3367,"nodeType":"ArrayTypeName","src":"10682:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"element","nameLocation":"10715:7:16","nodeType":"VariableDeclaration","scope":3428,"src":"10707:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:16"},"returnParameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3428,"src":"10747:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:16"},"scope":3769,"src":"10662:803:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3491,"nodeType":"Block","src":"11982:709:16","statements":[{"assignments":[3440],"declarations":[{"constant":false,"id":3440,"mutability":"mutable","name":"low","nameLocation":"12000:3:16","nodeType":"VariableDeclaration","scope":3491,"src":"11992:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3439,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3442,"initialValue":{"hexValue":"30","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:16"},{"assignments":[3444],"declarations":[{"constant":false,"id":3444,"mutability":"mutable","name":"high","nameLocation":"12025:4:16","nodeType":"VariableDeclaration","scope":3491,"src":"12017:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3443,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3447,"initialValue":{"expression":{"id":3445,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"12032:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:16","memberName":"length","nodeType":"MemberAccess","src":"12032:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3448,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"12059:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3454,"nodeType":"IfStatement","src":"12055:48:16","trueBody":{"id":3453,"nodeType":"Block","src":"12070:33:16","statements":[{"expression":{"hexValue":"30","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3438,"id":3452,"nodeType":"Return","src":"12084:8:16"}]}},{"body":{"id":3487,"nodeType":"Block","src":"12132:532:16","statements":[{"assignments":[3459],"declarations":[{"constant":false,"id":3459,"mutability":"mutable","name":"mid","nameLocation":"12154:3:16","nodeType":"VariableDeclaration","scope":3487,"src":"12146:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3465,"initialValue":{"arguments":[{"id":3462,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"12173:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3463,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"12178:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3460,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"12160:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6979_$","typeString":"type(library Math)"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5631,"src":"12160:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3467,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"12421:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3468,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"12428:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3466,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3644,3670,3696],"referencedDeclaration":3696,"src":"12408:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4028_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4028_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4027,"src":"12408:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3471,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"12441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3485,"nodeType":"Block","src":"12499:155:16","statements":[{"id":3484,"nodeType":"UncheckedBlock","src":"12576:64:16","statements":[{"expression":{"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3478,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"12608:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3479,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"12614:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3483,"nodeType":"ExpressionStatement","src":"12608:13:16"}]}]},"id":3486,"nodeType":"IfStatement","src":"12404:250:16","trueBody":{"id":3477,"nodeType":"Block","src":"12450:43:16","statements":[{"expression":{"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3473,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"12468:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3474,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"12475:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3476,"nodeType":"ExpressionStatement","src":"12468:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"12120:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3456,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"12126:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3488,"nodeType":"WhileStatement","src":"12113:551:16"},{"expression":{"id":3489,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"12681:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3438,"id":3490,"nodeType":"Return","src":"12674:10:16"}]},"documentation":{"id":3429,"nodeType":"StructuredDocumentation","src":"11471:412:16","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":3492,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:16","nodeType":"FunctionDefinition","parameters":{"id":3435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"array","nameLocation":"11926:5:16","nodeType":"VariableDeclaration","scope":3492,"src":"11908:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3431,"nodeType":"ArrayTypeName","src":"11908:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3434,"mutability":"mutable","name":"element","nameLocation":"11941:7:16","nodeType":"VariableDeclaration","scope":3492,"src":"11933:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3433,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:16"},"returnParameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3492,"src":"11973:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3436,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:16"},"scope":3769,"src":"11888:803:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3554,"nodeType":"Block","src":"12875:709:16","statements":[{"assignments":[3504],"declarations":[{"constant":false,"id":3504,"mutability":"mutable","name":"low","nameLocation":"12893:3:16","nodeType":"VariableDeclaration","scope":3554,"src":"12885:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3506,"initialValue":{"hexValue":"30","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:16"},{"assignments":[3508],"declarations":[{"constant":false,"id":3508,"mutability":"mutable","name":"high","nameLocation":"12918:4:16","nodeType":"VariableDeclaration","scope":3554,"src":"12910:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3507,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3511,"initialValue":{"expression":{"id":3509,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"12925:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:16","memberName":"length","nodeType":"MemberAccess","src":"12925:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3512,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"12952:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3518,"nodeType":"IfStatement","src":"12948:48:16","trueBody":{"id":3517,"nodeType":"Block","src":"12963:33:16","statements":[{"expression":{"hexValue":"30","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3502,"id":3516,"nodeType":"Return","src":"12977:8:16"}]}},{"body":{"id":3550,"nodeType":"Block","src":"13025:532:16","statements":[{"assignments":[3523],"declarations":[{"constant":false,"id":3523,"mutability":"mutable","name":"mid","nameLocation":"13047:3:16","nodeType":"VariableDeclaration","scope":3550,"src":"13039:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3529,"initialValue":{"arguments":[{"id":3526,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"13066:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3527,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"13071:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3524,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"13053:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6979_$","typeString":"type(library Math)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5631,"src":"13053:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3531,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"13320:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3532,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"13327:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3530,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3709,3722,3735],"referencedDeclaration":3735,"src":"13301:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3534,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"13334:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3548,"nodeType":"Block","src":"13504:43:16","statements":[{"expression":{"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3544,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"13522:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3545,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"13529:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3547,"nodeType":"ExpressionStatement","src":"13522:10:16"}]},"id":3549,"nodeType":"IfStatement","src":"13297:250:16","trueBody":{"id":3543,"nodeType":"Block","src":"13343:155:16","statements":[{"id":3542,"nodeType":"UncheckedBlock","src":"13420:64:16","statements":[{"expression":{"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3536,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"13452:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3537,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"13458:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3541,"nodeType":"ExpressionStatement","src":"13452:13:16"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3519,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"13013:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3520,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"13019:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3551,"nodeType":"WhileStatement","src":"13006:551:16"},{"expression":{"id":3552,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"13574:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3502,"id":3553,"nodeType":"Return","src":"13567:10:16"}]},"documentation":{"id":3493,"nodeType":"StructuredDocumentation","src":"12697:74:16","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":3555,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:16","nodeType":"FunctionDefinition","parameters":{"id":3499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"array","nameLocation":"12819:5:16","nodeType":"VariableDeclaration","scope":3555,"src":"12802:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3495,"nodeType":"ArrayTypeName","src":"12802:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3498,"mutability":"mutable","name":"element","nameLocation":"12834:7:16","nodeType":"VariableDeclaration","scope":3555,"src":"12826:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:16"},"returnParameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3555,"src":"12866:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:16"},"scope":3769,"src":"12776:808:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3617,"nodeType":"Block","src":"13768:709:16","statements":[{"assignments":[3567],"declarations":[{"constant":false,"id":3567,"mutability":"mutable","name":"low","nameLocation":"13786:3:16","nodeType":"VariableDeclaration","scope":3617,"src":"13778:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3566,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3569,"initialValue":{"hexValue":"30","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:16"},{"assignments":[3571],"declarations":[{"constant":false,"id":3571,"mutability":"mutable","name":"high","nameLocation":"13811:4:16","nodeType":"VariableDeclaration","scope":3617,"src":"13803:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3574,"initialValue":{"expression":{"id":3572,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"13818:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:16","memberName":"length","nodeType":"MemberAccess","src":"13818:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3575,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"13845:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3581,"nodeType":"IfStatement","src":"13841:48:16","trueBody":{"id":3580,"nodeType":"Block","src":"13856:33:16","statements":[{"expression":{"hexValue":"30","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3565,"id":3579,"nodeType":"Return","src":"13870:8:16"}]}},{"body":{"id":3613,"nodeType":"Block","src":"13918:532:16","statements":[{"assignments":[3586],"declarations":[{"constant":false,"id":3586,"mutability":"mutable","name":"mid","nameLocation":"13940:3:16","nodeType":"VariableDeclaration","scope":3613,"src":"13932:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3592,"initialValue":{"arguments":[{"id":3589,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"13959:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3590,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"13964:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3587,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"13946:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6979_$","typeString":"type(library Math)"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5631,"src":"13946:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3594,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"14213:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3595,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"14220:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3593,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3709,3722,3735],"referencedDeclaration":3735,"src":"14194:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3597,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"14227:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3611,"nodeType":"Block","src":"14285:155:16","statements":[{"id":3610,"nodeType":"UncheckedBlock","src":"14362:64:16","statements":[{"expression":{"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3604,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"14394:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3605,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"14400:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3609,"nodeType":"ExpressionStatement","src":"14394:13:16"}]}]},"id":3612,"nodeType":"IfStatement","src":"14190:250:16","trueBody":{"id":3603,"nodeType":"Block","src":"14236:43:16","statements":[{"expression":{"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3599,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"14254:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3600,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"14261:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3602,"nodeType":"ExpressionStatement","src":"14254:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3582,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"13906:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3583,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"13912:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3614,"nodeType":"WhileStatement","src":"13899:551:16"},{"expression":{"id":3615,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"14467:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3565,"id":3616,"nodeType":"Return","src":"14460:10:16"}]},"documentation":{"id":3556,"nodeType":"StructuredDocumentation","src":"13590:74:16","text":" @dev Same as {upperBound}, but with an array in memory."},"id":3618,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:16","nodeType":"FunctionDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"mutability":"mutable","name":"array","nameLocation":"13712:5:16","nodeType":"VariableDeclaration","scope":3618,"src":"13695:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3558,"nodeType":"ArrayTypeName","src":"13695:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3561,"mutability":"mutable","name":"element","nameLocation":"13727:7:16","nodeType":"VariableDeclaration","scope":3618,"src":"13719:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:16"},"returnParameters":{"id":3565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3618,"src":"13759:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:16"},"scope":3769,"src":"13669:808:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3643,"nodeType":"Block","src":"14793:167:16","statements":[{"assignments":[3631],"declarations":[{"constant":false,"id":3631,"mutability":"mutable","name":"slot","nameLocation":"14811:4:16","nodeType":"VariableDeclaration","scope":3643,"src":"14803:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3632,"nodeType":"VariableDeclarationStatement","src":"14803:12:16"},{"AST":{"nodeType":"YulBlock","src":"14850:40:16","statements":[{"nodeType":"YulAssignment","src":"14864:16:16","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"14872:8:16"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"14864:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3622,"isOffset":false,"isSlot":true,"src":"14872:8:16","suffix":"slot","valueSize":1},{"declaration":3631,"isOffset":false,"isSlot":false,"src":"14864:4:16","valueSize":1}],"flags":["memory-safe"],"id":3633,"nodeType":"InlineAssembly","src":"14825:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3638,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"14932:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3634,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"14906:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"14906:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"14906:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:16","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4048,"src":"14906:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4019_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4019_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":3629,"id":3642,"nodeType":"Return","src":"14899:54:16"}]},"documentation":{"id":3619,"nodeType":"StructuredDocumentation","src":"14483:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3644,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:16","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"arr","nameLocation":"14719:3:16","nodeType":"VariableDeclaration","scope":3644,"src":"14701:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3620,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3621,"nodeType":"ArrayTypeName","src":"14701:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3624,"mutability":"mutable","name":"pos","nameLocation":"14732:3:16","nodeType":"VariableDeclaration","scope":3644,"src":"14724:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:16"},"returnParameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3644,"src":"14760:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4019_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3627,"nodeType":"UserDefinedTypeName","pathNode":{"id":3626,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:16","14772:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":4019,"src":"14760:23:16"},"referencedDeclaration":4019,"src":"14760:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4019_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:16"},"scope":3769,"src":"14679:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3669,"nodeType":"Block","src":"15276:167:16","statements":[{"assignments":[3657],"declarations":[{"constant":false,"id":3657,"mutability":"mutable","name":"slot","nameLocation":"15294:4:16","nodeType":"VariableDeclaration","scope":3669,"src":"15286:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3658,"nodeType":"VariableDeclarationStatement","src":"15286:12:16"},{"AST":{"nodeType":"YulBlock","src":"15333:40:16","statements":[{"nodeType":"YulAssignment","src":"15347:16:16","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15355:8:16"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15347:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3648,"isOffset":false,"isSlot":true,"src":"15355:8:16","suffix":"slot","valueSize":1},{"declaration":3657,"isOffset":false,"isSlot":false,"src":"15347:4:16","valueSize":1}],"flags":["memory-safe"],"id":3659,"nodeType":"InlineAssembly","src":"15308:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3664,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"15415:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3660,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"15389:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"15389:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"15389:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:16","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":4070,"src":"15389:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$4025_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4025_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":3655,"id":3668,"nodeType":"Return","src":"15382:54:16"}]},"documentation":{"id":3645,"nodeType":"StructuredDocumentation","src":"14966:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3670,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:16","nodeType":"FunctionDefinition","parameters":{"id":3651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"mutability":"mutable","name":"arr","nameLocation":"15202:3:16","nodeType":"VariableDeclaration","scope":3670,"src":"15184:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3647,"nodeType":"ArrayTypeName","src":"15184:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3650,"mutability":"mutable","name":"pos","nameLocation":"15215:3:16","nodeType":"VariableDeclaration","scope":3670,"src":"15207:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3649,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:16"},"returnParameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3670,"src":"15243:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4025_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3653,"nodeType":"UserDefinedTypeName","pathNode":{"id":3652,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:16","15255:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":4025,"src":"15243:23:16"},"referencedDeclaration":4025,"src":"15243:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4025_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:16"},"scope":3769,"src":"15162:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3695,"nodeType":"Block","src":"15759:167:16","statements":[{"assignments":[3683],"declarations":[{"constant":false,"id":3683,"mutability":"mutable","name":"slot","nameLocation":"15777:4:16","nodeType":"VariableDeclaration","scope":3695,"src":"15769:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3684,"nodeType":"VariableDeclarationStatement","src":"15769:12:16"},{"AST":{"nodeType":"YulBlock","src":"15816:40:16","statements":[{"nodeType":"YulAssignment","src":"15830:16:16","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15838:8:16"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15830:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3674,"isOffset":false,"isSlot":true,"src":"15838:8:16","suffix":"slot","valueSize":1},{"declaration":3683,"isOffset":false,"isSlot":false,"src":"15830:4:16","valueSize":1}],"flags":["memory-safe"],"id":3685,"nodeType":"InlineAssembly","src":"15791:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3690,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"15898:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3686,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"15872:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3928,"src":"15872:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"15872:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:16","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":4081,"src":"15872:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$4028_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4028_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":3681,"id":3694,"nodeType":"Return","src":"15865:54:16"}]},"documentation":{"id":3671,"nodeType":"StructuredDocumentation","src":"15449:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3696,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:16","nodeType":"FunctionDefinition","parameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"arr","nameLocation":"15685:3:16","nodeType":"VariableDeclaration","scope":3696,"src":"15667:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3673,"nodeType":"ArrayTypeName","src":"15667:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3676,"mutability":"mutable","name":"pos","nameLocation":"15698:3:16","nodeType":"VariableDeclaration","scope":3696,"src":"15690:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:16"},"returnParameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3696,"src":"15726:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4028_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3679,"nodeType":"UserDefinedTypeName","pathNode":{"id":3678,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:16","15738:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"15726:23:16"},"referencedDeclaration":4028,"src":"15726:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4028_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:16"},"scope":3769,"src":"15645:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3708,"nodeType":"Block","src":"16227:98:16","statements":[{"AST":{"nodeType":"YulBlock","src":"16246:73:16","statements":[{"nodeType":"YulAssignment","src":"16260:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16281:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16286:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16277:3:16"},"nodeType":"YulFunctionCall","src":"16277:14:16"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16297:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16302:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16293:3:16"},"nodeType":"YulFunctionCall","src":"16293:14:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16273:3:16"},"nodeType":"YulFunctionCall","src":"16273:35:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16267:5:16"},"nodeType":"YulFunctionCall","src":"16267:42:16"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16260:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3700,"isOffset":false,"isSlot":false,"src":"16281:3:16","valueSize":1},{"declaration":3702,"isOffset":false,"isSlot":false,"src":"16297:3:16","valueSize":1},{"declaration":3705,"isOffset":false,"isSlot":false,"src":"16260:3:16","valueSize":1}],"id":3707,"nodeType":"InlineAssembly","src":"16237:82:16"}]},"documentation":{"id":3697,"nodeType":"StructuredDocumentation","src":"15932:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3709,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:16","nodeType":"FunctionDefinition","parameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"arr","nameLocation":"16173:3:16","nodeType":"VariableDeclaration","scope":3709,"src":"16156:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3698,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3699,"nodeType":"ArrayTypeName","src":"16156:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"pos","nameLocation":"16186:3:16","nodeType":"VariableDeclaration","scope":3709,"src":"16178:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:16"},"returnParameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"res","nameLocation":"16222:3:16","nodeType":"VariableDeclaration","scope":3709,"src":"16214:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3704,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:16"},"scope":3769,"src":"16128:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3721,"nodeType":"Block","src":"16626:98:16","statements":[{"AST":{"nodeType":"YulBlock","src":"16645:73:16","statements":[{"nodeType":"YulAssignment","src":"16659:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16680:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16685:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16676:3:16"},"nodeType":"YulFunctionCall","src":"16676:14:16"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16696:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16701:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16692:3:16"},"nodeType":"YulFunctionCall","src":"16692:14:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16672:3:16"},"nodeType":"YulFunctionCall","src":"16672:35:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16666:5:16"},"nodeType":"YulFunctionCall","src":"16666:42:16"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16659:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3713,"isOffset":false,"isSlot":false,"src":"16680:3:16","valueSize":1},{"declaration":3715,"isOffset":false,"isSlot":false,"src":"16696:3:16","valueSize":1},{"declaration":3718,"isOffset":false,"isSlot":false,"src":"16659:3:16","valueSize":1}],"id":3720,"nodeType":"InlineAssembly","src":"16636:82:16"}]},"documentation":{"id":3710,"nodeType":"StructuredDocumentation","src":"16331:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3722,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:16","nodeType":"FunctionDefinition","parameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"arr","nameLocation":"16572:3:16","nodeType":"VariableDeclaration","scope":3722,"src":"16555:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3712,"nodeType":"ArrayTypeName","src":"16555:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3715,"mutability":"mutable","name":"pos","nameLocation":"16585:3:16","nodeType":"VariableDeclaration","scope":3722,"src":"16577:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:16"},"returnParameters":{"id":3719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3718,"mutability":"mutable","name":"res","nameLocation":"16621:3:16","nodeType":"VariableDeclaration","scope":3722,"src":"16613:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:16"},"scope":3769,"src":"16527:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3734,"nodeType":"Block","src":"17025:98:16","statements":[{"AST":{"nodeType":"YulBlock","src":"17044:73:16","statements":[{"nodeType":"YulAssignment","src":"17058:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17079:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17084:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17075:3:16"},"nodeType":"YulFunctionCall","src":"17075:14:16"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17095:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17100:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17091:3:16"},"nodeType":"YulFunctionCall","src":"17091:14:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17071:3:16"},"nodeType":"YulFunctionCall","src":"17071:35:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17065:5:16"},"nodeType":"YulFunctionCall","src":"17065:42:16"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17058:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3726,"isOffset":false,"isSlot":false,"src":"17079:3:16","valueSize":1},{"declaration":3728,"isOffset":false,"isSlot":false,"src":"17095:3:16","valueSize":1},{"declaration":3731,"isOffset":false,"isSlot":false,"src":"17058:3:16","valueSize":1}],"id":3733,"nodeType":"InlineAssembly","src":"17035:82:16"}]},"documentation":{"id":3723,"nodeType":"StructuredDocumentation","src":"16730:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3735,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:16","nodeType":"FunctionDefinition","parameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"arr","nameLocation":"16971:3:16","nodeType":"VariableDeclaration","scope":3735,"src":"16954:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ArrayTypeName","src":"16954:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"pos","nameLocation":"16984:3:16","nodeType":"VariableDeclaration","scope":3735,"src":"16976:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:16"},"returnParameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3731,"mutability":"mutable","name":"res","nameLocation":"17020:3:16","nodeType":"VariableDeclaration","scope":3735,"src":"17012:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:16"},"scope":3769,"src":"16926:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3745,"nodeType":"Block","src":"17440:88:16","statements":[{"AST":{"nodeType":"YulBlock","src":"17475:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17496:10:16"},{"name":"len","nodeType":"YulIdentifier","src":"17508:3:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17489:6:16"},"nodeType":"YulFunctionCall","src":"17489:23:16"},"nodeType":"YulExpressionStatement","src":"17489:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3739,"isOffset":false,"isSlot":true,"src":"17496:10:16","suffix":"slot","valueSize":1},{"declaration":3741,"isOffset":false,"isSlot":false,"src":"17508:3:16","valueSize":1}],"flags":["memory-safe"],"id":3744,"nodeType":"InlineAssembly","src":"17450:72:16"}]},"documentation":{"id":3736,"nodeType":"StructuredDocumentation","src":"17129:234:16","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3746,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17377:15:16","nodeType":"FunctionDefinition","parameters":{"id":3742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"array","nameLocation":"17411:5:16","nodeType":"VariableDeclaration","scope":3746,"src":"17393:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3737,"name":"address","nodeType":"ElementaryTypeName","src":"17393:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3738,"nodeType":"ArrayTypeName","src":"17393:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3741,"mutability":"mutable","name":"len","nameLocation":"17426:3:16","nodeType":"VariableDeclaration","scope":3746,"src":"17418:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3740,"name":"uint256","nodeType":"ElementaryTypeName","src":"17418:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17392:38:16"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[],"src":"17440:0:16"},"scope":3769,"src":"17368:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3756,"nodeType":"Block","src":"17845:88:16","statements":[{"AST":{"nodeType":"YulBlock","src":"17880:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17901:10:16"},{"name":"len","nodeType":"YulIdentifier","src":"17913:3:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17894:6:16"},"nodeType":"YulFunctionCall","src":"17894:23:16"},"nodeType":"YulExpressionStatement","src":"17894:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3750,"isOffset":false,"isSlot":true,"src":"17901:10:16","suffix":"slot","valueSize":1},{"declaration":3752,"isOffset":false,"isSlot":false,"src":"17913:3:16","valueSize":1}],"flags":["memory-safe"],"id":3755,"nodeType":"InlineAssembly","src":"17855:72:16"}]},"documentation":{"id":3747,"nodeType":"StructuredDocumentation","src":"17534:234:16","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3757,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17782:15:16","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"array","nameLocation":"17816:5:16","nodeType":"VariableDeclaration","scope":3757,"src":"17798:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17798:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3749,"nodeType":"ArrayTypeName","src":"17798:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3752,"mutability":"mutable","name":"len","nameLocation":"17831:3:16","nodeType":"VariableDeclaration","scope":3757,"src":"17823:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3751,"name":"uint256","nodeType":"ElementaryTypeName","src":"17823:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17797:38:16"},"returnParameters":{"id":3754,"nodeType":"ParameterList","parameters":[],"src":"17845:0:16"},"scope":3769,"src":"17773:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3767,"nodeType":"Block","src":"18250:88:16","statements":[{"AST":{"nodeType":"YulBlock","src":"18285:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"18306:10:16"},{"name":"len","nodeType":"YulIdentifier","src":"18318:3:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18299:6:16"},"nodeType":"YulFunctionCall","src":"18299:23:16"},"nodeType":"YulExpressionStatement","src":"18299:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3761,"isOffset":false,"isSlot":true,"src":"18306:10:16","suffix":"slot","valueSize":1},{"declaration":3763,"isOffset":false,"isSlot":false,"src":"18318:3:16","valueSize":1}],"flags":["memory-safe"],"id":3766,"nodeType":"InlineAssembly","src":"18260:72:16"}]},"documentation":{"id":3758,"nodeType":"StructuredDocumentation","src":"17939:234:16","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3768,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18187:15:16","nodeType":"FunctionDefinition","parameters":{"id":3764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3761,"mutability":"mutable","name":"array","nameLocation":"18221:5:16","nodeType":"VariableDeclaration","scope":3768,"src":"18203:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"18203:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3760,"nodeType":"ArrayTypeName","src":"18203:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3763,"mutability":"mutable","name":"len","nameLocation":"18236:3:16","nodeType":"VariableDeclaration","scope":3768,"src":"18228:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3762,"name":"uint256","nodeType":"ElementaryTypeName","src":"18228:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18202:38:16"},"returnParameters":{"id":3765,"nodeType":"ParameterList","parameters":[],"src":"18250:0:16"},"scope":3769,"src":"18178:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3770,"src":"459:17881:16","usedErrors":[],"usedEvents":[]}],"src":"183:18158:16"},"id":16},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[3801]},"id":3802,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3771,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":3772,"nodeType":"StructuredDocumentation","src":"131:92:17","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":3801,"linearizedBaseContracts":[3801],"name":"Comparators","nameLocation":"232:11:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3785,"nodeType":"Block","src":"313:29:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"330:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3782,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"334:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3780,"id":3784,"nodeType":"Return","src":"323:12:17"}]},"id":3786,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:17","nodeType":"FunctionDefinition","parameters":{"id":3777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"a","nameLocation":"270:1:17","nodeType":"VariableDeclaration","scope":3786,"src":"262:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"b","nameLocation":"281:1:17","nodeType":"VariableDeclaration","scope":3786,"src":"273:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:17"},"returnParameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3786,"src":"307:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3778,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:17"},"scope":3801,"src":"250:92:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3799,"nodeType":"Block","src":"411:29:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"428:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3796,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"432:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3794,"id":3798,"nodeType":"Return","src":"421:12:17"}]},"id":3800,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:17","nodeType":"FunctionDefinition","parameters":{"id":3791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3788,"mutability":"mutable","name":"a","nameLocation":"368:1:17","nodeType":"VariableDeclaration","scope":3800,"src":"360:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3787,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"b","nameLocation":"379:1:17","nodeType":"VariableDeclaration","scope":3800,"src":"371:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3789,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:17"},"returnParameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3800,"src":"405:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3792,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:17"},"scope":3801,"src":"348:92:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3802,"src":"224:218:17","usedErrors":[],"usedEvents":[]}],"src":"105:338:17"},"id":17},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3831]},"id":3832,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3803,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3804,"nodeType":"StructuredDocumentation","src":"127:496:18","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3831,"linearizedBaseContracts":[3831],"name":"Context","nameLocation":"642:7:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3812,"nodeType":"Block","src":"718:34:18","statements":[{"expression":{"expression":{"id":3809,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:18","memberName":"sender","nodeType":"MemberAccess","src":"735:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3808,"id":3811,"nodeType":"Return","src":"728:17:18"}]},"id":3813,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:18","nodeType":"FunctionDefinition","parameters":{"id":3805,"nodeType":"ParameterList","parameters":[],"src":"675:2:18"},"returnParameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3813,"src":"709:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3806,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:18"},"scope":3831,"src":"656:96:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3821,"nodeType":"Block","src":"825:32:18","statements":[{"expression":{"expression":{"id":3818,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:18","memberName":"data","nodeType":"MemberAccess","src":"842:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3817,"id":3820,"nodeType":"Return","src":"835:15:18"}]},"id":3822,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:18","nodeType":"FunctionDefinition","parameters":{"id":3814,"nodeType":"ParameterList","parameters":[],"src":"775:2:18"},"returnParameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3822,"src":"809:14:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3815,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:18"},"scope":3831,"src":"758:99:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3829,"nodeType":"Block","src":"935:25:18","statements":[{"expression":{"hexValue":"30","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3826,"id":3828,"nodeType":"Return","src":"945:8:18"}]},"id":3830,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:18","nodeType":"FunctionDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[],"src":"892:2:18"},"returnParameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3830,"src":"926:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:18"},"scope":3831,"src":"863:97:18","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3832,"src":"624:338:18","usedErrors":[],"usedEvents":[]}],"src":"101:862:18"},"id":18},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3883]},"id":3884,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3833,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3834,"nodeType":"StructuredDocumentation","src":"125:489:19","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3883,"linearizedBaseContracts":[3883],"name":"Panic","nameLocation":"665:5:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3835,"nodeType":"StructuredDocumentation","src":"677:36:19","text":"@dev generic / unspecified error"},"id":3838,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:19","nodeType":"VariableDeclaration","scope":3883,"src":"718:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3839,"nodeType":"StructuredDocumentation","src":"764:37:19","text":"@dev used by the assert() builtin"},"id":3842,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:19","nodeType":"VariableDeclaration","scope":3883,"src":"806:39:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"851:41:19","text":"@dev arithmetic underflow or overflow"},"id":3846,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:19","nodeType":"VariableDeclaration","scope":3883,"src":"897:47:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:19","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3847,"nodeType":"StructuredDocumentation","src":"950:35:19","text":"@dev division or modulo by zero"},"id":3850,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:19","nodeType":"VariableDeclaration","scope":3883,"src":"990:49:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3848,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:19","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3851,"nodeType":"StructuredDocumentation","src":"1045:30:19","text":"@dev enum conversion error"},"id":3854,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:19","nodeType":"VariableDeclaration","scope":3883,"src":"1080:54:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:19","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3855,"nodeType":"StructuredDocumentation","src":"1140:36:19","text":"@dev invalid encoding in storage"},"id":3858,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:19","nodeType":"VariableDeclaration","scope":3883,"src":"1181:55:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:19","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3859,"nodeType":"StructuredDocumentation","src":"1242:24:19","text":"@dev empty array pop"},"id":3862,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:19","nodeType":"VariableDeclaration","scope":3883,"src":"1271:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3860,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:19","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3863,"nodeType":"StructuredDocumentation","src":"1325:35:19","text":"@dev array out of bounds access"},"id":3866,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:19","nodeType":"VariableDeclaration","scope":3883,"src":"1365:52:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:19","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3867,"nodeType":"StructuredDocumentation","src":"1423:65:19","text":"@dev resource error (too large allocation or too large array)"},"id":3870,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:19","nodeType":"VariableDeclaration","scope":3883,"src":"1493:47:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3871,"nodeType":"StructuredDocumentation","src":"1546:42:19","text":"@dev calling invalid internal function"},"id":3874,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:19","nodeType":"VariableDeclaration","scope":3883,"src":"1593:58:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:19","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3881,"nodeType":"Block","src":"1819:151:19","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:19","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:19"},"nodeType":"YulFunctionCall","src":"1868:24:19"},"nodeType":"YulExpressionStatement","src":"1868:24:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:19","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:19"},"nodeType":"YulFunctionCall","src":"1905:18:19"},"nodeType":"YulExpressionStatement","src":"1905:18:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:19","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:19"},"nodeType":"YulFunctionCall","src":"1936:18:19"},"nodeType":"YulExpressionStatement","src":"1936:18:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":3877,"isOffset":false,"isSlot":false,"src":"1918:4:19","valueSize":1}],"flags":["memory-safe"],"id":3880,"nodeType":"InlineAssembly","src":"1829:135:19"}]},"documentation":{"id":3875,"nodeType":"StructuredDocumentation","src":"1658:113:19","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3882,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:19","nodeType":"FunctionDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"code","nameLocation":"1799:4:19","nodeType":"VariableDeclaration","scope":3882,"src":"1791:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:19"},"returnParameters":{"id":3879,"nodeType":"ParameterList","parameters":[],"src":"1819:0:19"},"scope":3883,"src":"1776:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3884,"src":"657:1315:19","usedErrors":[],"usedEvents":[]}],"src":"99:1874:19"},"id":19},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[4013]},"id":4014,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3885,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"225:1372:20","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":4013,"linearizedBaseContracts":[4013],"name":"SlotDerivation","nameLocation":"1606:14:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3895,"nodeType":"Block","src":"1789:194:20","statements":[{"AST":{"nodeType":"YulBlock","src":"1824:153:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1845:4:20","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1869:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1880:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1865:3:20"},"nodeType":"YulFunctionCall","src":"1865:20:20"},{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1893:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1887:5:20"},"nodeType":"YulFunctionCall","src":"1887:16:20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1855:9:20"},"nodeType":"YulFunctionCall","src":"1855:49:20"},{"kind":"number","nodeType":"YulLiteral","src":"1906:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1851:3:20"},"nodeType":"YulFunctionCall","src":"1851:57:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1838:6:20"},"nodeType":"YulFunctionCall","src":"1838:71:20"},"nodeType":"YulExpressionStatement","src":"1838:71:20"},{"nodeType":"YulAssignment","src":"1922:45:20","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1944:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1950:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1934:9:20"},"nodeType":"YulFunctionCall","src":"1934:21:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1961:4:20","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1957:3:20"},"nodeType":"YulFunctionCall","src":"1957:9:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1930:3:20"},"nodeType":"YulFunctionCall","src":"1930:37:20"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"1922:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3889,"isOffset":false,"isSlot":false,"src":"1869:9:20","valueSize":1},{"declaration":3889,"isOffset":false,"isSlot":false,"src":"1893:9:20","valueSize":1},{"declaration":3892,"isOffset":false,"isSlot":false,"src":"1922:4:20","valueSize":1}],"flags":["memory-safe"],"id":3894,"nodeType":"InlineAssembly","src":"1799:178:20"}]},"documentation":{"id":3887,"nodeType":"StructuredDocumentation","src":"1627:74:20","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":3896,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1715:11:20","nodeType":"FunctionDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"namespace","nameLocation":"1741:9:20","nodeType":"VariableDeclaration","scope":3896,"src":"1727:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3888,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:25:20"},"returnParameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"mutability":"mutable","name":"slot","nameLocation":"1783:4:20","nodeType":"VariableDeclaration","scope":3896,"src":"1775:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1775:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1774:14:20"},"scope":4013,"src":"1706:277:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3917,"nodeType":"Block","src":"2175:86:20","statements":[{"id":3916,"nodeType":"UncheckedBlock","src":"2185:70:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3910,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"2232:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2224:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:20","typeDescriptions":{}}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2224:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3912,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"2240:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2224:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2216:7:20","typeDescriptions":{}}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3905,"id":3915,"nodeType":"Return","src":"2209:35:20"}]}]},"documentation":{"id":3897,"nodeType":"StructuredDocumentation","src":"1989:99:20","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":3918,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2102:6:20","nodeType":"FunctionDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3899,"mutability":"mutable","name":"slot","nameLocation":"2117:4:20","nodeType":"VariableDeclaration","scope":3918,"src":"2109:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2109:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"pos","nameLocation":"2131:3:20","nodeType":"VariableDeclaration","scope":3918,"src":"2123:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"2123:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2108:27:20"},"returnParameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"result","nameLocation":"2167:6:20","nodeType":"VariableDeclaration","scope":3918,"src":"2159:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2159:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2158:16:20"},"scope":4013,"src":"2093:168:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3927,"nodeType":"Block","src":"2464:127:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2499:86:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2520:4:20","type":"","value":"0x00"},{"name":"slot","nodeType":"YulIdentifier","src":"2526:4:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2513:6:20"},"nodeType":"YulFunctionCall","src":"2513:18:20"},"nodeType":"YulExpressionStatement","src":"2513:18:20"},{"nodeType":"YulAssignment","src":"2544:31:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2564:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2570:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2554:9:20"},"nodeType":"YulFunctionCall","src":"2554:21:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2544:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3924,"isOffset":false,"isSlot":false,"src":"2544:6:20","valueSize":1},{"declaration":3921,"isOffset":false,"isSlot":false,"src":"2526:4:20","valueSize":1}],"flags":["memory-safe"],"id":3926,"nodeType":"InlineAssembly","src":"2474:111:20"}]},"documentation":{"id":3919,"nodeType":"StructuredDocumentation","src":"2267:118:20","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":3928,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2399:11:20","nodeType":"FunctionDefinition","parameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"slot","nameLocation":"2419:4:20","nodeType":"VariableDeclaration","scope":3928,"src":"2411:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2410:14:20"},"returnParameters":{"id":3925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"result","nameLocation":"2456:6:20","nodeType":"VariableDeclaration","scope":3928,"src":"2448:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2448:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2447:16:20"},"scope":4013,"src":"2390:201:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3939,"nodeType":"Block","src":"2769:179:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2804:138:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2825:4:20","type":"","value":"0x00"},{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"2835:3:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2844:2:20","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2852:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2848:3:20"},"nodeType":"YulFunctionCall","src":"2848:6:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2840:3:20"},"nodeType":"YulFunctionCall","src":"2840:15:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2831:3:20"},"nodeType":"YulFunctionCall","src":"2831:25:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2818:6:20"},"nodeType":"YulFunctionCall","src":"2818:39:20"},"nodeType":"YulExpressionStatement","src":"2818:39:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2877:4:20","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"2883:4:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2870:6:20"},"nodeType":"YulFunctionCall","src":"2870:18:20"},"nodeType":"YulExpressionStatement","src":"2870:18:20"},{"nodeType":"YulAssignment","src":"2901:31:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2921:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2927:4:20","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2911:9:20"},"nodeType":"YulFunctionCall","src":"2911:21:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2901:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3933,"isOffset":false,"isSlot":false,"src":"2835:3:20","valueSize":1},{"declaration":3936,"isOffset":false,"isSlot":false,"src":"2901:6:20","valueSize":1},{"declaration":3931,"isOffset":false,"isSlot":false,"src":"2883:4:20","valueSize":1}],"flags":["memory-safe"],"id":3938,"nodeType":"InlineAssembly","src":"2779:163:20"}]},"documentation":{"id":3929,"nodeType":"StructuredDocumentation","src":"2597:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":3940,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2689:13:20","nodeType":"FunctionDefinition","parameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3931,"mutability":"mutable","name":"slot","nameLocation":"2711:4:20","nodeType":"VariableDeclaration","scope":3940,"src":"2703:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3933,"mutability":"mutable","name":"key","nameLocation":"2725:3:20","nodeType":"VariableDeclaration","scope":3940,"src":"2717:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3932,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2702:27:20"},"returnParameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"result","nameLocation":"2761:6:20","nodeType":"VariableDeclaration","scope":3940,"src":"2753:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2753:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2752:16:20"},"scope":4013,"src":"2680:268:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3951,"nodeType":"Block","src":"3123:173:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3158:132:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3179:4:20","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"3199:3:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3192:6:20"},"nodeType":"YulFunctionCall","src":"3192:11:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3185:6:20"},"nodeType":"YulFunctionCall","src":"3185:19:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3172:6:20"},"nodeType":"YulFunctionCall","src":"3172:33:20"},"nodeType":"YulExpressionStatement","src":"3172:33:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3225:4:20","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3231:4:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3218:6:20"},"nodeType":"YulFunctionCall","src":"3218:18:20"},"nodeType":"YulExpressionStatement","src":"3218:18:20"},{"nodeType":"YulAssignment","src":"3249:31:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3269:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3275:4:20","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3259:9:20"},"nodeType":"YulFunctionCall","src":"3259:21:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3249:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3945,"isOffset":false,"isSlot":false,"src":"3199:3:20","valueSize":1},{"declaration":3948,"isOffset":false,"isSlot":false,"src":"3249:6:20","valueSize":1},{"declaration":3943,"isOffset":false,"isSlot":false,"src":"3231:4:20","valueSize":1}],"flags":["memory-safe"],"id":3950,"nodeType":"InlineAssembly","src":"3133:157:20"}]},"documentation":{"id":3941,"nodeType":"StructuredDocumentation","src":"2954:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":3952,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3046:13:20","nodeType":"FunctionDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"slot","nameLocation":"3068:4:20","nodeType":"VariableDeclaration","scope":3952,"src":"3060:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3060:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3945,"mutability":"mutable","name":"key","nameLocation":"3079:3:20","nodeType":"VariableDeclaration","scope":3952,"src":"3074:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3944,"name":"bool","nodeType":"ElementaryTypeName","src":"3074:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3059:24:20"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"result","nameLocation":"3115:6:20","nodeType":"VariableDeclaration","scope":3952,"src":"3107:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3107:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3106:16:20"},"scope":4013,"src":"3037:259:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3963,"nodeType":"Block","src":"3474:157:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3509:116:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3530:4:20","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3536:3:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3523:6:20"},"nodeType":"YulFunctionCall","src":"3523:17:20"},"nodeType":"YulExpressionStatement","src":"3523:17:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3560:4:20","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3566:4:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3553:6:20"},"nodeType":"YulFunctionCall","src":"3553:18:20"},"nodeType":"YulExpressionStatement","src":"3553:18:20"},{"nodeType":"YulAssignment","src":"3584:31:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3604:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3610:4:20","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3594:9:20"},"nodeType":"YulFunctionCall","src":"3594:21:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3584:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3957,"isOffset":false,"isSlot":false,"src":"3536:3:20","valueSize":1},{"declaration":3960,"isOffset":false,"isSlot":false,"src":"3584:6:20","valueSize":1},{"declaration":3955,"isOffset":false,"isSlot":false,"src":"3566:4:20","valueSize":1}],"flags":["memory-safe"],"id":3962,"nodeType":"InlineAssembly","src":"3484:141:20"}]},"documentation":{"id":3953,"nodeType":"StructuredDocumentation","src":"3302:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":3964,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3394:13:20","nodeType":"FunctionDefinition","parameters":{"id":3958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3955,"mutability":"mutable","name":"slot","nameLocation":"3416:4:20","nodeType":"VariableDeclaration","scope":3964,"src":"3408:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3408:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3957,"mutability":"mutable","name":"key","nameLocation":"3430:3:20","nodeType":"VariableDeclaration","scope":3964,"src":"3422:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3422:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3407:27:20"},"returnParameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"result","nameLocation":"3466:6:20","nodeType":"VariableDeclaration","scope":3964,"src":"3458:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3458:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3457:16:20"},"scope":4013,"src":"3385:246:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3975,"nodeType":"Block","src":"3809:157:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3844:116:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3865:4:20","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3871:3:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3858:6:20"},"nodeType":"YulFunctionCall","src":"3858:17:20"},"nodeType":"YulExpressionStatement","src":"3858:17:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3895:4:20","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3901:4:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3888:6:20"},"nodeType":"YulFunctionCall","src":"3888:18:20"},"nodeType":"YulExpressionStatement","src":"3888:18:20"},{"nodeType":"YulAssignment","src":"3919:31:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3939:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3945:4:20","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:20"},"nodeType":"YulFunctionCall","src":"3929:21:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3919:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3969,"isOffset":false,"isSlot":false,"src":"3871:3:20","valueSize":1},{"declaration":3972,"isOffset":false,"isSlot":false,"src":"3919:6:20","valueSize":1},{"declaration":3967,"isOffset":false,"isSlot":false,"src":"3901:4:20","valueSize":1}],"flags":["memory-safe"],"id":3974,"nodeType":"InlineAssembly","src":"3819:141:20"}]},"documentation":{"id":3965,"nodeType":"StructuredDocumentation","src":"3637:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":3976,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3729:13:20","nodeType":"FunctionDefinition","parameters":{"id":3970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"slot","nameLocation":"3751:4:20","nodeType":"VariableDeclaration","scope":3976,"src":"3743:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3743:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3969,"mutability":"mutable","name":"key","nameLocation":"3765:3:20","nodeType":"VariableDeclaration","scope":3976,"src":"3757:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3742:27:20"},"returnParameters":{"id":3973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3972,"mutability":"mutable","name":"result","nameLocation":"3801:6:20","nodeType":"VariableDeclaration","scope":3976,"src":"3793:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:16:20"},"scope":4013,"src":"3720:246:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3987,"nodeType":"Block","src":"4143:157:20","statements":[{"AST":{"nodeType":"YulBlock","src":"4178:116:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4199:4:20","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"4205:3:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4192:6:20"},"nodeType":"YulFunctionCall","src":"4192:17:20"},"nodeType":"YulExpressionStatement","src":"4192:17:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4229:4:20","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"4235:4:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4222:6:20"},"nodeType":"YulFunctionCall","src":"4222:18:20"},"nodeType":"YulExpressionStatement","src":"4222:18:20"},{"nodeType":"YulAssignment","src":"4253:31:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4273:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4279:4:20","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4263:9:20"},"nodeType":"YulFunctionCall","src":"4263:21:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4253:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3981,"isOffset":false,"isSlot":false,"src":"4205:3:20","valueSize":1},{"declaration":3984,"isOffset":false,"isSlot":false,"src":"4253:6:20","valueSize":1},{"declaration":3979,"isOffset":false,"isSlot":false,"src":"4235:4:20","valueSize":1}],"flags":["memory-safe"],"id":3986,"nodeType":"InlineAssembly","src":"4153:141:20"}]},"documentation":{"id":3977,"nodeType":"StructuredDocumentation","src":"3972:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":3988,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4064:13:20","nodeType":"FunctionDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"slot","nameLocation":"4086:4:20","nodeType":"VariableDeclaration","scope":3988,"src":"4078:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4078:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3981,"mutability":"mutable","name":"key","nameLocation":"4099:3:20","nodeType":"VariableDeclaration","scope":3988,"src":"4092:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3980,"name":"int256","nodeType":"ElementaryTypeName","src":"4092:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4077:26:20"},"returnParameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3984,"mutability":"mutable","name":"result","nameLocation":"4135:6:20","nodeType":"VariableDeclaration","scope":3988,"src":"4127:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4127:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4126:16:20"},"scope":4013,"src":"4055:245:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3999,"nodeType":"Block","src":"4484:326:20","statements":[{"AST":{"nodeType":"YulBlock","src":"4519:285:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4533:24:20","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4553:3:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4547:5:20"},"nodeType":"YulFunctionCall","src":"4547:10:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4537:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4570:27:20","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4587:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"4592:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4583:3:20"},"nodeType":"YulFunctionCall","src":"4583:14:20"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"4574:5:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4610:29:20","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4625:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"4632:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4621:3:20"},"nodeType":"YulFunctionCall","src":"4621:18:20"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4614:3:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4652:23:20","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4671:3:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4665:5:20"},"nodeType":"YulFunctionCall","src":"4665:10:20"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"4656:5:20","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4695:3:20"},{"name":"slot","nodeType":"YulIdentifier","src":"4700:4:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4688:6:20"},"nodeType":"YulFunctionCall","src":"4688:17:20"},"nodeType":"YulExpressionStatement","src":"4688:17:20"},{"nodeType":"YulAssignment","src":"4718:45:20","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4738:5:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4749:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4757:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:20"},"nodeType":"YulFunctionCall","src":"4745:17:20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4728:9:20"},"nodeType":"YulFunctionCall","src":"4728:35:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4718:6:20"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4783:3:20"},{"name":"cache","nodeType":"YulIdentifier","src":"4788:5:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4776:6:20"},"nodeType":"YulFunctionCall","src":"4776:18:20"},"nodeType":"YulExpressionStatement","src":"4776:18:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":3993,"isOffset":false,"isSlot":false,"src":"4553:3:20","valueSize":1},{"declaration":3993,"isOffset":false,"isSlot":false,"src":"4587:3:20","valueSize":1},{"declaration":3996,"isOffset":false,"isSlot":false,"src":"4718:6:20","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"4700:4:20","valueSize":1}],"flags":["memory-safe"],"id":3998,"nodeType":"InlineAssembly","src":"4494:310:20"}]},"documentation":{"id":3989,"nodeType":"StructuredDocumentation","src":"4306:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":4000,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4398:13:20","nodeType":"FunctionDefinition","parameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3991,"mutability":"mutable","name":"slot","nameLocation":"4420:4:20","nodeType":"VariableDeclaration","scope":4000,"src":"4412:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4412:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3993,"mutability":"mutable","name":"key","nameLocation":"4440:3:20","nodeType":"VariableDeclaration","scope":4000,"src":"4426:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3992,"name":"string","nodeType":"ElementaryTypeName","src":"4426:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4411:33:20"},"returnParameters":{"id":3997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"mutability":"mutable","name":"result","nameLocation":"4476:6:20","nodeType":"VariableDeclaration","scope":4000,"src":"4468:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4467:16:20"},"scope":4013,"src":"4389:421:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4011,"nodeType":"Block","src":"4993:326:20","statements":[{"AST":{"nodeType":"YulBlock","src":"5028:285:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5042:24:20","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5062:3:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5056:5:20"},"nodeType":"YulFunctionCall","src":"5056:10:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5046:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5079:27:20","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5096:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"5101:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:20"},"nodeType":"YulFunctionCall","src":"5092:14:20"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"5083:5:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5119:29:20","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5134:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"5141:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5130:3:20"},"nodeType":"YulFunctionCall","src":"5130:18:20"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"5123:3:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5161:23:20","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5180:3:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5174:5:20"},"nodeType":"YulFunctionCall","src":"5174:10:20"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"5165:5:20","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5204:3:20"},{"name":"slot","nodeType":"YulIdentifier","src":"5209:4:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5197:6:20"},"nodeType":"YulFunctionCall","src":"5197:17:20"},"nodeType":"YulExpressionStatement","src":"5197:17:20"},{"nodeType":"YulAssignment","src":"5227:45:20","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5247:5:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5258:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5266:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5254:3:20"},"nodeType":"YulFunctionCall","src":"5254:17:20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5237:9:20"},"nodeType":"YulFunctionCall","src":"5237:35:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5227:6:20"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5292:3:20"},{"name":"cache","nodeType":"YulIdentifier","src":"5297:5:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5285:6:20"},"nodeType":"YulFunctionCall","src":"5285:18:20"},"nodeType":"YulExpressionStatement","src":"5285:18:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":4005,"isOffset":false,"isSlot":false,"src":"5062:3:20","valueSize":1},{"declaration":4005,"isOffset":false,"isSlot":false,"src":"5096:3:20","valueSize":1},{"declaration":4008,"isOffset":false,"isSlot":false,"src":"5227:6:20","valueSize":1},{"declaration":4003,"isOffset":false,"isSlot":false,"src":"5209:4:20","valueSize":1}],"flags":["memory-safe"],"id":4010,"nodeType":"InlineAssembly","src":"5003:310:20"}]},"documentation":{"id":4001,"nodeType":"StructuredDocumentation","src":"4816:78:20","text":" @dev Derive the location of a mapping element from the key."},"id":4012,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4908:13:20","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"slot","nameLocation":"4930:4:20","nodeType":"VariableDeclaration","scope":4012,"src":"4922:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4922:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4005,"mutability":"mutable","name":"key","nameLocation":"4949:3:20","nodeType":"VariableDeclaration","scope":4012,"src":"4936:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4004,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4921:32:20"},"returnParameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"result","nameLocation":"4985:6:20","nodeType":"VariableDeclaration","scope":4012,"src":"4977:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4977:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4976:16:20"},"scope":4013,"src":"4899:420:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4014,"src":"1598:3723:20","usedErrors":[],"usedEvents":[]}],"src":"199:5123:20"},"id":20},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[4137]},"id":4138,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4015,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":4016,"nodeType":"StructuredDocumentation","src":"219:1187:21","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":4137,"linearizedBaseContracts":[4137],"name":"StorageSlot","nameLocation":"1415:11:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":4019,"members":[{"constant":false,"id":4018,"mutability":"mutable","name":"value","nameLocation":"1470:5:21","nodeType":"VariableDeclaration","scope":4019,"src":"1462:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4017,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:21","nodeType":"StructDefinition","scope":4137,"src":"1433:49:21","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":4022,"members":[{"constant":false,"id":4021,"mutability":"mutable","name":"value","nameLocation":"1522:5:21","nodeType":"VariableDeclaration","scope":4022,"src":"1517:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4020,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:21","nodeType":"StructDefinition","scope":4137,"src":"1488:46:21","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":4025,"members":[{"constant":false,"id":4024,"mutability":"mutable","name":"value","nameLocation":"1577:5:21","nodeType":"VariableDeclaration","scope":4025,"src":"1569:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:21","nodeType":"StructDefinition","scope":4137,"src":"1540:49:21","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":4028,"members":[{"constant":false,"id":4027,"mutability":"mutable","name":"value","nameLocation":"1632:5:21","nodeType":"VariableDeclaration","scope":4028,"src":"1624:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4026,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:21","nodeType":"StructDefinition","scope":4137,"src":"1595:49:21","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":4031,"members":[{"constant":false,"id":4030,"mutability":"mutable","name":"value","nameLocation":"1685:5:21","nodeType":"VariableDeclaration","scope":4031,"src":"1678:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4029,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:21","nodeType":"StructDefinition","scope":4137,"src":"1650:47:21","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":4034,"members":[{"constant":false,"id":4033,"mutability":"mutable","name":"value","nameLocation":"1738:5:21","nodeType":"VariableDeclaration","scope":4034,"src":"1731:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4032,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:21","nodeType":"StructDefinition","scope":4137,"src":"1703:47:21","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":4037,"members":[{"constant":false,"id":4036,"mutability":"mutable","name":"value","nameLocation":"1789:5:21","nodeType":"VariableDeclaration","scope":4037,"src":"1783:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4035,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:21","nodeType":"StructDefinition","scope":4137,"src":"1756:45:21","visibility":"public"},{"body":{"id":4047,"nodeType":"Block","src":"1983:79:21","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:21","statements":[{"nodeType":"YulAssignment","src":"2032:14:21","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:21"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4044,"isOffset":false,"isSlot":true,"src":"2032:6:21","suffix":"slot","valueSize":1},{"declaration":4040,"isOffset":false,"isSlot":false,"src":"2042:4:21","valueSize":1}],"flags":["memory-safe"],"id":4046,"nodeType":"InlineAssembly","src":"1993:63:21"}]},"documentation":{"id":4038,"nodeType":"StructuredDocumentation","src":"1807:87:21","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":4048,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:21","nodeType":"FunctionDefinition","parameters":{"id":4041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4040,"mutability":"mutable","name":"slot","nameLocation":"1931:4:21","nodeType":"VariableDeclaration","scope":4048,"src":"1923:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:21"},"returnParameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"r","nameLocation":"1980:1:21","nodeType":"VariableDeclaration","scope":4048,"src":"1960:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4019_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4043,"nodeType":"UserDefinedTypeName","pathNode":{"id":4042,"name":"AddressSlot","nameLocations":["1960:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":4019,"src":"1960:11:21"},"referencedDeclaration":4019,"src":"1960:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4019_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:21"},"scope":4137,"src":"1899:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4058,"nodeType":"Block","src":"2243:79:21","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:21","statements":[{"nodeType":"YulAssignment","src":"2292:14:21","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:21"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4055,"isOffset":false,"isSlot":true,"src":"2292:6:21","suffix":"slot","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"2302:4:21","valueSize":1}],"flags":["memory-safe"],"id":4057,"nodeType":"InlineAssembly","src":"2253:63:21"}]},"documentation":{"id":4049,"nodeType":"StructuredDocumentation","src":"2068:86:21","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":4059,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:21","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"slot","nameLocation":"2191:4:21","nodeType":"VariableDeclaration","scope":4059,"src":"2183:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:21"},"returnParameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"r","nameLocation":"2240:1:21","nodeType":"VariableDeclaration","scope":4059,"src":"2220:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4022_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":4054,"nodeType":"UserDefinedTypeName","pathNode":{"id":4053,"name":"BooleanSlot","nameLocations":["2220:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":4022,"src":"2220:11:21"},"referencedDeclaration":4022,"src":"2220:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4022_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:21"},"scope":4137,"src":"2159:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4069,"nodeType":"Block","src":"2503:79:21","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:21","statements":[{"nodeType":"YulAssignment","src":"2552:14:21","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:21"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4066,"isOffset":false,"isSlot":true,"src":"2552:6:21","suffix":"slot","valueSize":1},{"declaration":4062,"isOffset":false,"isSlot":false,"src":"2562:4:21","valueSize":1}],"flags":["memory-safe"],"id":4068,"nodeType":"InlineAssembly","src":"2513:63:21"}]},"documentation":{"id":4060,"nodeType":"StructuredDocumentation","src":"2328:86:21","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":4070,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:21","nodeType":"FunctionDefinition","parameters":{"id":4063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"slot","nameLocation":"2451:4:21","nodeType":"VariableDeclaration","scope":4070,"src":"2443:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:21"},"returnParameters":{"id":4067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"mutability":"mutable","name":"r","nameLocation":"2500:1:21","nodeType":"VariableDeclaration","scope":4070,"src":"2480:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4025_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4065,"nodeType":"UserDefinedTypeName","pathNode":{"id":4064,"name":"Bytes32Slot","nameLocations":["2480:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":4025,"src":"2480:11:21"},"referencedDeclaration":4025,"src":"2480:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4025_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:21"},"scope":4137,"src":"2419:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4080,"nodeType":"Block","src":"2763:79:21","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:21","statements":[{"nodeType":"YulAssignment","src":"2812:14:21","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:21"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4077,"isOffset":false,"isSlot":true,"src":"2812:6:21","suffix":"slot","valueSize":1},{"declaration":4073,"isOffset":false,"isSlot":false,"src":"2822:4:21","valueSize":1}],"flags":["memory-safe"],"id":4079,"nodeType":"InlineAssembly","src":"2773:63:21"}]},"documentation":{"id":4071,"nodeType":"StructuredDocumentation","src":"2588:86:21","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":4081,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:21","nodeType":"FunctionDefinition","parameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4073,"mutability":"mutable","name":"slot","nameLocation":"2711:4:21","nodeType":"VariableDeclaration","scope":4081,"src":"2703:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:21"},"returnParameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"r","nameLocation":"2760:1:21","nodeType":"VariableDeclaration","scope":4081,"src":"2740:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4028_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4076,"nodeType":"UserDefinedTypeName","pathNode":{"id":4075,"name":"Uint256Slot","nameLocations":["2740:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"2740:11:21"},"referencedDeclaration":4028,"src":"2740:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4028_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:21"},"scope":4137,"src":"2679:163:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4091,"nodeType":"Block","src":"3020:79:21","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:21","statements":[{"nodeType":"YulAssignment","src":"3069:14:21","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:21"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4088,"isOffset":false,"isSlot":true,"src":"3069:6:21","suffix":"slot","valueSize":1},{"declaration":4084,"isOffset":false,"isSlot":false,"src":"3079:4:21","valueSize":1}],"flags":["memory-safe"],"id":4090,"nodeType":"InlineAssembly","src":"3030:63:21"}]},"documentation":{"id":4082,"nodeType":"StructuredDocumentation","src":"2848:85:21","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":4092,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:21","nodeType":"FunctionDefinition","parameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4084,"mutability":"mutable","name":"slot","nameLocation":"2969:4:21","nodeType":"VariableDeclaration","scope":4092,"src":"2961:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:21"},"returnParameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"r","nameLocation":"3017:1:21","nodeType":"VariableDeclaration","scope":4092,"src":"2998:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4031_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":4087,"nodeType":"UserDefinedTypeName","pathNode":{"id":4086,"name":"Int256Slot","nameLocations":["2998:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":4031,"src":"2998:10:21"},"referencedDeclaration":4031,"src":"2998:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4031_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:21"},"scope":4137,"src":"2938:161:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4102,"nodeType":"Block","src":"3277:79:21","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:21","statements":[{"nodeType":"YulAssignment","src":"3326:14:21","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:21"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4099,"isOffset":false,"isSlot":true,"src":"3326:6:21","suffix":"slot","valueSize":1},{"declaration":4095,"isOffset":false,"isSlot":false,"src":"3336:4:21","valueSize":1}],"flags":["memory-safe"],"id":4101,"nodeType":"InlineAssembly","src":"3287:63:21"}]},"documentation":{"id":4093,"nodeType":"StructuredDocumentation","src":"3105:85:21","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":4103,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:21","nodeType":"FunctionDefinition","parameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"mutability":"mutable","name":"slot","nameLocation":"3226:4:21","nodeType":"VariableDeclaration","scope":4103,"src":"3218:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:21"},"returnParameters":{"id":4100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4099,"mutability":"mutable","name":"r","nameLocation":"3274:1:21","nodeType":"VariableDeclaration","scope":4103,"src":"3255:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4034_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4098,"nodeType":"UserDefinedTypeName","pathNode":{"id":4097,"name":"StringSlot","nameLocations":["3255:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":4034,"src":"3255:10:21"},"referencedDeclaration":4034,"src":"3255:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4034_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:21"},"scope":4137,"src":"3195:161:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4113,"nodeType":"Block","src":"3558:85:21","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:21","statements":[{"nodeType":"YulAssignment","src":"3607:20:21","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:21"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4110,"isOffset":false,"isSlot":true,"src":"3607:6:21","suffix":"slot","valueSize":1},{"declaration":4106,"isOffset":false,"isSlot":true,"src":"3617:10:21","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4112,"nodeType":"InlineAssembly","src":"3568:69:21"}]},"documentation":{"id":4104,"nodeType":"StructuredDocumentation","src":"3362:101:21","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":4114,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:21","nodeType":"FunctionDefinition","parameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"store","nameLocation":"3506:5:21","nodeType":"VariableDeclaration","scope":4114,"src":"3491:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4105,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:21"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"r","nameLocation":"3555:1:21","nodeType":"VariableDeclaration","scope":4114,"src":"3536:20:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4034_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4109,"nodeType":"UserDefinedTypeName","pathNode":{"id":4108,"name":"StringSlot","nameLocations":["3536:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":4034,"src":"3536:10:21"},"referencedDeclaration":4034,"src":"3536:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4034_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:21"},"scope":4137,"src":"3468:175:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4124,"nodeType":"Block","src":"3818:79:21","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:21","statements":[{"nodeType":"YulAssignment","src":"3867:14:21","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:21"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4121,"isOffset":false,"isSlot":true,"src":"3867:6:21","suffix":"slot","valueSize":1},{"declaration":4117,"isOffset":false,"isSlot":false,"src":"3877:4:21","valueSize":1}],"flags":["memory-safe"],"id":4123,"nodeType":"InlineAssembly","src":"3828:63:21"}]},"documentation":{"id":4115,"nodeType":"StructuredDocumentation","src":"3649:84:21","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":4125,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:21","nodeType":"FunctionDefinition","parameters":{"id":4118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"mutability":"mutable","name":"slot","nameLocation":"3768:4:21","nodeType":"VariableDeclaration","scope":4125,"src":"3760:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:21"},"returnParameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4121,"mutability":"mutable","name":"r","nameLocation":"3815:1:21","nodeType":"VariableDeclaration","scope":4125,"src":"3797:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4037_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4120,"nodeType":"UserDefinedTypeName","pathNode":{"id":4119,"name":"BytesSlot","nameLocations":["3797:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":4037,"src":"3797:9:21"},"referencedDeclaration":4037,"src":"3797:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4037_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:21"},"scope":4137,"src":"3738:159:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4135,"nodeType":"Block","src":"4094:85:21","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:21","statements":[{"nodeType":"YulAssignment","src":"4143:20:21","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:21"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4132,"isOffset":false,"isSlot":true,"src":"4143:6:21","suffix":"slot","valueSize":1},{"declaration":4128,"isOffset":false,"isSlot":true,"src":"4153:10:21","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4134,"nodeType":"InlineAssembly","src":"4104:69:21"}]},"documentation":{"id":4126,"nodeType":"StructuredDocumentation","src":"3903:99:21","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":4136,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:21","nodeType":"FunctionDefinition","parameters":{"id":4129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"mutability":"mutable","name":"store","nameLocation":"4043:5:21","nodeType":"VariableDeclaration","scope":4136,"src":"4029:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4127,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:21"},"returnParameters":{"id":4133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4132,"mutability":"mutable","name":"r","nameLocation":"4091:1:21","nodeType":"VariableDeclaration","scope":4136,"src":"4073:19:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4037_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4131,"nodeType":"UserDefinedTypeName","pathNode":{"id":4130,"name":"BytesSlot","nameLocations":["4073:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":4037,"src":"4073:9:21"},"referencedDeclaration":4037,"src":"4073:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4037_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:21"},"scope":4137,"src":"4007:172:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4138,"src":"1407:2774:21","usedErrors":[],"usedEvents":[]}],"src":"193:3989:21"},"id":21},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6979],"SafeCast":[8744],"SignedMath":[8888],"Strings":[5337]},"id":5338,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4139,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5338,"sourceUnit":6980,"src":"127:37:22","symbolAliases":[{"foreign":{"id":4140,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"135:4:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":4143,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5338,"sourceUnit":8745,"src":"165:45:22","symbolAliases":[{"foreign":{"id":4142,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"173:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":4145,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5338,"sourceUnit":8889,"src":"211:49:22","symbolAliases":[{"foreign":{"id":4144,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8888,"src":"219:10:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4146,"nodeType":"StructuredDocumentation","src":"262:34:22","text":" @dev String operations."},"fullyImplemented":true,"id":5337,"linearizedBaseContracts":[5337],"name":"Strings","nameLocation":"305:7:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4148,"libraryName":{"id":4147,"name":"SafeCast","nameLocations":["325:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":8744,"src":"325:8:22"},"nodeType":"UsingForDirective","src":"319:21:22"},{"constant":true,"id":4151,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:22","nodeType":"VariableDeclaration","scope":5337,"src":"346:56:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4149,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4154,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:22","nodeType":"VariableDeclaration","scope":5337,"src":"408:42:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4152,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:22","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":4155,"nodeType":"StructuredDocumentation","src":"457:81:22","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":4161,"name":"StringsInsufficientHexLength","nameLocation":"549:28:22","nodeType":"ErrorDefinition","parameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4157,"mutability":"mutable","name":"value","nameLocation":"586:5:22","nodeType":"VariableDeclaration","scope":4161,"src":"578:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4156,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4159,"mutability":"mutable","name":"length","nameLocation":"601:6:22","nodeType":"VariableDeclaration","scope":4161,"src":"593:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:22"},"src":"543:66:22"},{"documentation":{"id":4162,"nodeType":"StructuredDocumentation","src":"615:108:22","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":4164,"name":"StringsInvalidChar","nameLocation":"734:18:22","nodeType":"ErrorDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[],"src":"752:2:22"},"src":"728:27:22"},{"documentation":{"id":4165,"nodeType":"StructuredDocumentation","src":"761:84:22","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":4167,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:22","nodeType":"ErrorDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[],"src":"883:2:22"},"src":"850:36:22"},{"body":{"id":4214,"nodeType":"Block","src":"1058:561:22","statements":[{"id":4213,"nodeType":"UncheckedBlock","src":"1068:545:22","statements":[{"assignments":[4176],"declarations":[{"constant":false,"id":4176,"mutability":"mutable","name":"length","nameLocation":"1100:6:22","nodeType":"VariableDeclaration","scope":4213,"src":"1092:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4183,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"1120:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4177,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"1109:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6979_$","typeString":"type(library Math)"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:22","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6751,"src":"1109:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:22"},{"assignments":[4185],"declarations":[{"constant":false,"id":4185,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:22","nodeType":"VariableDeclaration","scope":4213,"src":"1144:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4184,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4190,"initialValue":{"arguments":[{"id":4188,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"1178:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4186,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:22"},{"assignments":[4192],"declarations":[{"constant":false,"id":4192,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:22","nodeType":"VariableDeclaration","scope":4213,"src":"1199:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4193,"nodeType":"VariableDeclarationStatement","src":"1199:11:22"},{"AST":{"nodeType":"YulBlock","src":"1249:67:22","statements":[{"nodeType":"YulAssignment","src":"1267:35:22","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1278:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1290:2:22","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1294:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:22"},"nodeType":"YulFunctionCall","src":"1286:15:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:22"},"nodeType":"YulFunctionCall","src":"1274:28:22"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1267:3:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4185,"isOffset":false,"isSlot":false,"src":"1278:6:22","valueSize":1},{"declaration":4176,"isOffset":false,"isSlot":false,"src":"1294:6:22","valueSize":1},{"declaration":4192,"isOffset":false,"isSlot":false,"src":"1267:3:22","valueSize":1}],"flags":["memory-safe"],"id":4194,"nodeType":"InlineAssembly","src":"1224:92:22"},{"body":{"id":4209,"nodeType":"Block","src":"1342:234:22","statements":[{"expression":{"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:22","subExpression":{"id":4196,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"1360:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4198,"nodeType":"ExpressionStatement","src":"1360:5:22"},{"AST":{"nodeType":"YulBlock","src":"1408:86:22","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:22","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1448:3:22"},"nodeType":"YulFunctionCall","src":"1448:14:22"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1464:10:22"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1443:4:22"},"nodeType":"YulFunctionCall","src":"1443:32:22"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1430:7:22"},"nodeType":"YulFunctionCall","src":"1430:46:22"},"nodeType":"YulExpressionStatement","src":"1430:46:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":4151,"isOffset":false,"isSlot":false,"src":"1464:10:22","valueSize":1},{"declaration":4192,"isOffset":false,"isSlot":false,"src":"1438:3:22","valueSize":1},{"declaration":4170,"isOffset":false,"isSlot":false,"src":"1452:5:22","valueSize":1}],"flags":["memory-safe"],"id":4199,"nodeType":"InlineAssembly","src":"1383:111:22"},{"expression":{"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"1511:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4203,"nodeType":"ExpressionStatement","src":"1511:11:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"1544:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4208,"nodeType":"IfStatement","src":"1540:21:22","trueBody":{"id":4207,"nodeType":"Break","src":"1556:5:22"}}]},"condition":{"hexValue":"74727565","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4210,"nodeType":"WhileStatement","src":"1329:247:22"},{"expression":{"id":4211,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"1596:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4174,"id":4212,"nodeType":"Return","src":"1589:13:22"}]}]},"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"892:90:22","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4215,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:22","nodeType":"FunctionDefinition","parameters":{"id":4171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"value","nameLocation":"1013:5:22","nodeType":"VariableDeclaration","scope":4215,"src":"1005:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:22"},"returnParameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4215,"src":"1043:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4172,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:22"},"scope":5337,"src":"987:632:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4240,"nodeType":"Block","src":"1795:92:22","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"1826:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:22","trueExpression":{"hexValue":"2d","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"1872:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4233,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8888,"src":"1857:10:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8888_$","typeString":"type(library SignedMath)"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:22","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8887,"src":"1857:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4232,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"1848:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4223,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:22","typeDescriptions":{}}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:22","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:22","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4222,"id":4239,"nodeType":"Return","src":"1805:75:22"}]},"documentation":{"id":4216,"nodeType":"StructuredDocumentation","src":"1625:89:22","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4241,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:22","nodeType":"FunctionDefinition","parameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"value","nameLocation":"1750:5:22","nodeType":"VariableDeclaration","scope":4241,"src":"1743:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4217,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:22"},"returnParameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4241,"src":"1780:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4220,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:22"},"scope":5337,"src":"1719:168:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4260,"nodeType":"Block","src":"2066:100:22","statements":[{"id":4259,"nodeType":"UncheckedBlock","src":"2076:84:22","statements":[{"expression":{"arguments":[{"id":4250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"2119:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"2138:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4251,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"2126:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6979_$","typeString":"type(library Math)"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:22","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6922,"src":"2126:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4249,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4261,4344,4364],"referencedDeclaration":4344,"src":"2107:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4248,"id":4258,"nodeType":"Return","src":"2100:49:22"}]}]},"documentation":{"id":4242,"nodeType":"StructuredDocumentation","src":"1893:94:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4261,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:22","nodeType":"FunctionDefinition","parameters":{"id":4245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4244,"mutability":"mutable","name":"value","nameLocation":"2021:5:22","nodeType":"VariableDeclaration","scope":4261,"src":"2013:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4243,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:22"},"returnParameters":{"id":4248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4261,"src":"2051:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4246,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:22"},"scope":5337,"src":"1992:174:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4343,"nodeType":"Block","src":"2379:435:22","statements":[{"assignments":[4272],"declarations":[{"constant":false,"id":4272,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:22","nodeType":"VariableDeclaration","scope":4343,"src":"2389:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4274,"initialValue":{"id":4273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"2410:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:22"},{"assignments":[4276],"declarations":[{"constant":false,"id":4276,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:22","nodeType":"VariableDeclaration","scope":4343,"src":"2425:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4275,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4285,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4280,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"2461:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4277,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:22"},{"expression":{"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4286,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"2482:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4288,"indexExpression":{"hexValue":"30","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4291,"nodeType":"ExpressionStatement","src":"2482:15:22"},{"expression":{"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4292,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"2507:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4294,"indexExpression":{"hexValue":"31","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4297,"nodeType":"ExpressionStatement","src":"2507:15:22"},{"body":{"id":4326,"nodeType":"Block","src":"2577:95:22","statements":[{"expression":{"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4312,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"2591:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4314,"indexExpression":{"id":4313,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"2598:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4315,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"2603:10:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4319,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4316,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"2614:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4321,"nodeType":"ExpressionStatement","src":"2591:40:22"},{"expression":{"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4322,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"2645:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4325,"nodeType":"ExpressionStatement","src":"2645:16:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4306,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"2565:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4327,"initializationExpression":{"assignments":[4299],"declarations":[{"constant":false,"id":4299,"mutability":"mutable","name":"i","nameLocation":"2545:1:22","nodeType":"VariableDeclaration","scope":4327,"src":"2537:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4298,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4305,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4301,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"2553:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:22"},"loopExpression":{"expression":{"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:22","subExpression":{"id":4309,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"2574:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4311,"nodeType":"ExpressionStatement","src":"2572:3:22"},"nodeType":"ForStatement","src":"2532:140:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4328,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"2685:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4337,"nodeType":"IfStatement","src":"2681:96:22","trueBody":{"id":4336,"nodeType":"Block","src":"2702:75:22","statements":[{"errorCall":{"arguments":[{"id":4332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"2752:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4333,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"2759:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4331,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"2723:28:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4335,"nodeType":"RevertStatement","src":"2716:50:22"}]}},{"expression":{"arguments":[{"id":4340,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"2800:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4338,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:22","typeDescriptions":{}}},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4270,"id":4342,"nodeType":"Return","src":"2786:21:22"}]},"documentation":{"id":4262,"nodeType":"StructuredDocumentation","src":"2172:112:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4344,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:22","nodeType":"FunctionDefinition","parameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4264,"mutability":"mutable","name":"value","nameLocation":"2318:5:22","nodeType":"VariableDeclaration","scope":4344,"src":"2310:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4263,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4266,"mutability":"mutable","name":"length","nameLocation":"2333:6:22","nodeType":"VariableDeclaration","scope":4344,"src":"2325:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:22"},"returnParameters":{"id":4270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4344,"src":"2364:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4268,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:22"},"scope":5337,"src":"2289:525:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4363,"nodeType":"Block","src":"3046:75:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4357,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"3091:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4355,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:22","typeDescriptions":{}}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4353,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:22","typeDescriptions":{}}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4360,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"3099:14:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4352,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4261,4344,4364],"referencedDeclaration":4344,"src":"3063:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4351,"id":4362,"nodeType":"Return","src":"3056:58:22"}]},"documentation":{"id":4345,"nodeType":"StructuredDocumentation","src":"2820:148:22","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":4364,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:22","nodeType":"FunctionDefinition","parameters":{"id":4348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4347,"mutability":"mutable","name":"addr","nameLocation":"3002:4:22","nodeType":"VariableDeclaration","scope":4364,"src":"2994:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4346,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:22"},"returnParameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4364,"src":"3031:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4349,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:22"},"scope":5337,"src":"2973:148:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4428,"nodeType":"Block","src":"3378:642:22","statements":[{"assignments":[4373],"declarations":[{"constant":false,"id":4373,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:22","nodeType":"VariableDeclaration","scope":4428,"src":"3388:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4372,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4380,"initialValue":{"arguments":[{"arguments":[{"id":4377,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"3428:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4376,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4261,4344,4364],"referencedDeclaration":4364,"src":"3416:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4374,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:22","typeDescriptions":{}}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:22"},{"assignments":[4382],"declarations":[{"constant":false,"id":4382,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:22","nodeType":"VariableDeclaration","scope":4428,"src":"3519:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4381,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4383,"nodeType":"VariableDeclarationStatement","src":"3519:17:22"},{"AST":{"nodeType":"YulBlock","src":"3571:78:22","statements":[{"nodeType":"YulAssignment","src":"3585:54:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:2:22","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3620:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:22","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:22"},"nodeType":"YulFunctionCall","src":"3616:17:22"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:22","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3606:9:22"},"nodeType":"YulFunctionCall","src":"3606:32:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3598:3:22"},"nodeType":"YulFunctionCall","src":"3598:41:22"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3585:9:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4373,"isOffset":false,"isSlot":false,"src":"3620:6:22","valueSize":1},{"declaration":4382,"isOffset":false,"isSlot":false,"src":"3585:9:22","valueSize":1}],"flags":["memory-safe"],"id":4384,"nodeType":"InlineAssembly","src":"3546:103:22"},{"body":{"id":4421,"nodeType":"Block","src":"3692:291:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4395,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"3798:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:22","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4402,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"3827:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4404,"indexExpression":{"id":4403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"3834:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4400,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:22","typeDescriptions":{}}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4416,"nodeType":"IfStatement","src":"3794:150:22","trueBody":{"id":4415,"nodeType":"Block","src":"3844:100:22","statements":[{"expression":{"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4409,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"3912:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4411,"indexExpression":{"id":4410,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"3919:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4414,"nodeType":"ExpressionStatement","src":"3912:17:22"}]}},{"expression":{"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4417,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"3957:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4420,"nodeType":"ExpressionStatement","src":"3957:15:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4389,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"3680:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4422,"initializationExpression":{"assignments":[4386],"declarations":[{"constant":false,"id":4386,"mutability":"mutable","name":"i","nameLocation":"3672:1:22","nodeType":"VariableDeclaration","scope":4422,"src":"3664:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4388,"initialValue":{"hexValue":"3431","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:22","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:22"},"loopExpression":{"expression":{"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:22","subExpression":{"id":4392,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"3689:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4394,"nodeType":"ExpressionStatement","src":"3687:3:22"},"nodeType":"ForStatement","src":"3659:324:22"},{"expression":{"arguments":[{"id":4425,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"4006:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4423,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:22","typeDescriptions":{}}},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4371,"id":4427,"nodeType":"Return","src":"3992:21:22"}]},"documentation":{"id":4365,"nodeType":"StructuredDocumentation","src":"3127:165:22","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":4429,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:22","nodeType":"FunctionDefinition","parameters":{"id":4368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4367,"mutability":"mutable","name":"addr","nameLocation":"3334:4:22","nodeType":"VariableDeclaration","scope":4429,"src":"3326:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4366,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:22"},"returnParameters":{"id":4371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4429,"src":"3363:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4369,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:22"},"scope":5337,"src":"3297:723:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4465,"nodeType":"Block","src":"4175:104:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"4198:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4439,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:22","typeDescriptions":{}}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:22","memberName":"length","nodeType":"MemberAccess","src":"4192:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4446,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"4217:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4444,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:22","typeDescriptions":{}}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:22","memberName":"length","nodeType":"MemberAccess","src":"4211:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4453,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"4246:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4451,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:22","typeDescriptions":{}}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4450,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4459,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"4269:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4457,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:22","typeDescriptions":{}}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4456,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4438,"id":4464,"nodeType":"Return","src":"4185:87:22"}]},"documentation":{"id":4430,"nodeType":"StructuredDocumentation","src":"4026:66:22","text":" @dev Returns true if the two strings are equal."},"id":4466,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:22","nodeType":"FunctionDefinition","parameters":{"id":4435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4432,"mutability":"mutable","name":"a","nameLocation":"4126:1:22","nodeType":"VariableDeclaration","scope":4466,"src":"4112:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4431,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4434,"mutability":"mutable","name":"b","nameLocation":"4143:1:22","nodeType":"VariableDeclaration","scope":4466,"src":"4129:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4433,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:22"},"returnParameters":{"id":4438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4466,"src":"4169:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4436,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:22"},"scope":5337,"src":"4097:182:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4484,"nodeType":"Block","src":"4576:64:22","statements":[{"expression":{"arguments":[{"id":4475,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"4603:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4479,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"4619:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4477,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:22","typeDescriptions":{}}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:22","memberName":"length","nodeType":"MemberAccess","src":"4613:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4474,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[4485,4516],"referencedDeclaration":4516,"src":"4593:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4473,"id":4483,"nodeType":"Return","src":"4586:47:22"}]},"documentation":{"id":4467,"nodeType":"StructuredDocumentation","src":"4285:214:22","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4485,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:22","nodeType":"FunctionDefinition","parameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4469,"mutability":"mutable","name":"input","nameLocation":"4537:5:22","nodeType":"VariableDeclaration","scope":4485,"src":"4523:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4468,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:22"},"returnParameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4485,"src":"4567:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4471,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:22"},"scope":5337,"src":"4504:136:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4515,"nodeType":"Block","src":"5038:153:22","statements":[{"assignments":[4498,4500],"declarations":[{"constant":false,"id":4498,"mutability":"mutable","name":"success","nameLocation":"5054:7:22","nodeType":"VariableDeclaration","scope":4515,"src":"5049:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4497,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"value","nameLocation":"5071:5:22","nodeType":"VariableDeclaration","scope":4515,"src":"5063:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4506,"initialValue":{"arguments":[{"id":4502,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"5093:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4503,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"5100:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4504,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"5107:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4501,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4537,4574],"referencedDeclaration":4574,"src":"5080:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:22"},{"condition":{"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:22","subExpression":{"id":4507,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5126:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4512,"nodeType":"IfStatement","src":"5121:41:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4509,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"5142:18:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4511,"nodeType":"RevertStatement","src":"5135:27:22"}},{"expression":{"id":4513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"5179:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4496,"id":4514,"nodeType":"Return","src":"5172:12:22"}]},"documentation":{"id":4486,"nodeType":"StructuredDocumentation","src":"4646:287:22","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4516,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:22","nodeType":"FunctionDefinition","parameters":{"id":4493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"input","nameLocation":"4971:5:22","nodeType":"VariableDeclaration","scope":4516,"src":"4957:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4487,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4490,"mutability":"mutable","name":"begin","nameLocation":"4986:5:22","nodeType":"VariableDeclaration","scope":4516,"src":"4978:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4489,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4492,"mutability":"mutable","name":"end","nameLocation":"5001:3:22","nodeType":"VariableDeclaration","scope":4516,"src":"4993:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:22"},"returnParameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4516,"src":"5029:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:22"},"scope":5337,"src":"4938:253:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4536,"nodeType":"Block","src":"5512:83:22","statements":[{"expression":{"arguments":[{"id":4527,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"5558:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4531,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"5574:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4529,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:22","typeDescriptions":{}}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:22","memberName":"length","nodeType":"MemberAccess","src":"5568:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4526,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"5529:28:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4525,"id":4535,"nodeType":"Return","src":"5522:66:22"}]},"documentation":{"id":4517,"nodeType":"StructuredDocumentation","src":"5197:215:22","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4537,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:22","nodeType":"FunctionDefinition","parameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"input","nameLocation":"5453:5:22","nodeType":"VariableDeclaration","scope":4537,"src":"5439:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4518,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:22"},"returnParameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"success","nameLocation":"5488:7:22","nodeType":"VariableDeclaration","scope":4537,"src":"5483:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4521,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4524,"mutability":"mutable","name":"value","nameLocation":"5505:5:22","nodeType":"VariableDeclaration","scope":4537,"src":"5497:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4523,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:22"},"scope":5337,"src":"5417:178:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4573,"nodeType":"Block","src":"5997:144:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4551,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"6011:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4554,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"6023:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4552,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:22","typeDescriptions":{}}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:22","memberName":"length","nodeType":"MemberAccess","src":"6017:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"6040:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4559,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"6048:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4566,"nodeType":"IfStatement","src":"6007:63:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4550,"id":4565,"nodeType":"Return","src":"6053:17:22"}},{"expression":{"arguments":[{"id":4568,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"6116:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4569,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"6123:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4570,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"6130:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4567,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"6087:28:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4550,"id":4572,"nodeType":"Return","src":"6080:54:22"}]},"documentation":{"id":4538,"nodeType":"StructuredDocumentation","src":"5601:238:22","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4574,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:22","nodeType":"FunctionDefinition","parameters":{"id":4545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"input","nameLocation":"5889:5:22","nodeType":"VariableDeclaration","scope":4574,"src":"5875:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4539,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4542,"mutability":"mutable","name":"begin","nameLocation":"5912:5:22","nodeType":"VariableDeclaration","scope":4574,"src":"5904:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4544,"mutability":"mutable","name":"end","nameLocation":"5935:3:22","nodeType":"VariableDeclaration","scope":4574,"src":"5927:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4543,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:22"},"returnParameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4547,"mutability":"mutable","name":"success","nameLocation":"5973:7:22","nodeType":"VariableDeclaration","scope":4574,"src":"5968:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4546,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4549,"mutability":"mutable","name":"value","nameLocation":"5990:5:22","nodeType":"VariableDeclaration","scope":4574,"src":"5982:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4548,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:22"},"scope":5337,"src":"5844:297:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4643,"nodeType":"Block","src":"6521:347:22","statements":[{"assignments":[4589],"declarations":[{"constant":false,"id":4589,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:22","nodeType":"VariableDeclaration","scope":4643,"src":"6531:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4594,"initialValue":{"arguments":[{"id":4592,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"6559:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4590,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:22","typeDescriptions":{}}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:22"},{"assignments":[4596],"declarations":[{"constant":false,"id":4596,"mutability":"mutable","name":"result","nameLocation":"6584:6:22","nodeType":"VariableDeclaration","scope":4643,"src":"6576:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4595,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4598,"initialValue":{"hexValue":"30","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:22"},{"body":{"id":4637,"nodeType":"Block","src":"6642:189:22","statements":[{"assignments":[4610],"declarations":[{"constant":false,"id":4610,"mutability":"mutable","name":"chr","nameLocation":"6662:3:22","nodeType":"VariableDeclaration","scope":4637,"src":"6656:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4609,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4620,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4615,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"6711:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4616,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"6719:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4614,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"6688:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4612,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:22","typeDescriptions":{}}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4611,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"6668:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"6741:3:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:22","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4628,"nodeType":"IfStatement","src":"6737:30:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4587,"id":4627,"nodeType":"Return","src":"6750:17:22"}},{"expression":{"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"6781:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4632,"nodeType":"ExpressionStatement","src":"6781:12:22"},{"expression":{"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4633,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"6807:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4634,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"6817:3:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4636,"nodeType":"ExpressionStatement","src":"6807:13:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"6628:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4604,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"6632:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4638,"initializationExpression":{"assignments":[4600],"declarations":[{"constant":false,"id":4600,"mutability":"mutable","name":"i","nameLocation":"6617:1:22","nodeType":"VariableDeclaration","scope":4638,"src":"6609:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4602,"initialValue":{"id":4601,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"6621:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:22"},"loopExpression":{"expression":{"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:22","subExpression":{"id":4606,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"6639:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4608,"nodeType":"ExpressionStatement","src":"6637:3:22"},"nodeType":"ForStatement","src":"6604:227:22"},{"expression":{"components":[{"hexValue":"74727565","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4640,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"6854:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4641,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4587,"id":4642,"nodeType":"Return","src":"6840:21:22"}]},"documentation":{"id":4575,"nodeType":"StructuredDocumentation","src":"6147:201:22","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4644,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:22","nodeType":"FunctionDefinition","parameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4577,"mutability":"mutable","name":"input","nameLocation":"6414:5:22","nodeType":"VariableDeclaration","scope":4644,"src":"6400:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4576,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4579,"mutability":"mutable","name":"begin","nameLocation":"6437:5:22","nodeType":"VariableDeclaration","scope":4644,"src":"6429:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4581,"mutability":"mutable","name":"end","nameLocation":"6460:3:22","nodeType":"VariableDeclaration","scope":4644,"src":"6452:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4580,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:22"},"returnParameters":{"id":4587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"success","nameLocation":"6497:7:22","nodeType":"VariableDeclaration","scope":4644,"src":"6492:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4583,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4586,"mutability":"mutable","name":"value","nameLocation":"6514:5:22","nodeType":"VariableDeclaration","scope":4644,"src":"6506:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4585,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:22"},"scope":5337,"src":"6353:515:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4662,"nodeType":"Block","src":"7165:63:22","statements":[{"expression":{"arguments":[{"id":4653,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"7191:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4657,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"7207:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4655,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:22","typeDescriptions":{}}},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:22","memberName":"length","nodeType":"MemberAccess","src":"7201:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4652,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[4663,4694],"referencedDeclaration":4694,"src":"7182:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4651,"id":4661,"nodeType":"Return","src":"7175:46:22"}]},"documentation":{"id":4645,"nodeType":"StructuredDocumentation","src":"6874:216:22","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4663,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:22","nodeType":"FunctionDefinition","parameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"input","nameLocation":"7127:5:22","nodeType":"VariableDeclaration","scope":4663,"src":"7113:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4646,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:22"},"returnParameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4663,"src":"7157:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4649,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:22"},"scope":5337,"src":"7095:133:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4693,"nodeType":"Block","src":"7633:151:22","statements":[{"assignments":[4676,4678],"declarations":[{"constant":false,"id":4676,"mutability":"mutable","name":"success","nameLocation":"7649:7:22","nodeType":"VariableDeclaration","scope":4693,"src":"7644:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4675,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4678,"mutability":"mutable","name":"value","nameLocation":"7665:5:22","nodeType":"VariableDeclaration","scope":4693,"src":"7658:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4677,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4684,"initialValue":{"arguments":[{"id":4680,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"7686:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4681,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"7693:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4682,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"7700:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4679,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[4715,4757],"referencedDeclaration":4757,"src":"7674:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:22"},{"condition":{"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:22","subExpression":{"id":4685,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"7719:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4690,"nodeType":"IfStatement","src":"7714:41:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4687,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"7735:18:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4689,"nodeType":"RevertStatement","src":"7728:27:22"}},{"expression":{"id":4691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"7772:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4674,"id":4692,"nodeType":"Return","src":"7765:12:22"}]},"documentation":{"id":4664,"nodeType":"StructuredDocumentation","src":"7234:296:22","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4694,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:22","nodeType":"FunctionDefinition","parameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4666,"mutability":"mutable","name":"input","nameLocation":"7567:5:22","nodeType":"VariableDeclaration","scope":4694,"src":"7553:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4665,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4668,"mutability":"mutable","name":"begin","nameLocation":"7582:5:22","nodeType":"VariableDeclaration","scope":4694,"src":"7574:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4667,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4670,"mutability":"mutable","name":"end","nameLocation":"7597:3:22","nodeType":"VariableDeclaration","scope":4694,"src":"7589:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:22"},"returnParameters":{"id":4674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4694,"src":"7625:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4672,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:22"},"scope":5337,"src":"7535:249:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4714,"nodeType":"Block","src":"8175:82:22","statements":[{"expression":{"arguments":[{"id":4705,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"8220:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4709,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"8236:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4707,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:22","typeDescriptions":{}}},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:22","memberName":"length","nodeType":"MemberAccess","src":"8230:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4704,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"8192:27:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4703,"id":4713,"nodeType":"Return","src":"8185:65:22"}]},"documentation":{"id":4695,"nodeType":"StructuredDocumentation","src":"7790:287:22","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4715,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:22","nodeType":"FunctionDefinition","parameters":{"id":4698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4697,"mutability":"mutable","name":"input","nameLocation":"8117:5:22","nodeType":"VariableDeclaration","scope":4715,"src":"8103:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4696,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:22"},"returnParameters":{"id":4703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"success","nameLocation":"8152:7:22","nodeType":"VariableDeclaration","scope":4715,"src":"8147:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4699,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4702,"mutability":"mutable","name":"value","nameLocation":"8168:5:22","nodeType":"VariableDeclaration","scope":4715,"src":"8161:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4701,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:22"},"scope":5337,"src":"8082:175:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":4720,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:22","nodeType":"VariableDeclaration","scope":5337,"src":"8263:50:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4716,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":4719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":4756,"nodeType":"Block","src":"8779:143:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"8793:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4737,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"8805:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4735,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:22","typeDescriptions":{}}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:22","memberName":"length","nodeType":"MemberAccess","src":"8799:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4741,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"8822:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4742,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"8830:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4749,"nodeType":"IfStatement","src":"8789:63:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4733,"id":4748,"nodeType":"Return","src":"8835:17:22"}},{"expression":{"arguments":[{"id":4751,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"8897:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4752,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"8904:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4753,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"8911:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4750,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"8869:27:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4733,"id":4755,"nodeType":"Return","src":"8862:53:22"}]},"documentation":{"id":4721,"nodeType":"StructuredDocumentation","src":"8320:303:22","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4757,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:22","nodeType":"FunctionDefinition","parameters":{"id":4728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4723,"mutability":"mutable","name":"input","nameLocation":"8672:5:22","nodeType":"VariableDeclaration","scope":4757,"src":"8658:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4722,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4725,"mutability":"mutable","name":"begin","nameLocation":"8695:5:22","nodeType":"VariableDeclaration","scope":4757,"src":"8687:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4724,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4727,"mutability":"mutable","name":"end","nameLocation":"8718:3:22","nodeType":"VariableDeclaration","scope":4757,"src":"8710:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4726,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:22"},"returnParameters":{"id":4733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4730,"mutability":"mutable","name":"success","nameLocation":"8756:7:22","nodeType":"VariableDeclaration","scope":4757,"src":"8751:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4729,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4732,"mutability":"mutable","name":"value","nameLocation":"8772:5:22","nodeType":"VariableDeclaration","scope":4757,"src":"8765:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4731,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:22"},"scope":5337,"src":"8628:294:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4877,"nodeType":"Block","src":"9299:812:22","statements":[{"assignments":[4772],"declarations":[{"constant":false,"id":4772,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:22","nodeType":"VariableDeclaration","scope":4877,"src":"9309:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4771,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4777,"initialValue":{"arguments":[{"id":4775,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"9337:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4773,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:22","typeDescriptions":{}}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:22"},{"assignments":[4779],"declarations":[{"constant":false,"id":4779,"mutability":"mutable","name":"sign","nameLocation":"9407:4:22","nodeType":"VariableDeclaration","scope":4877,"src":"9400:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4778,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4795,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4780,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"9414:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4781,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"9423:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":4790,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"9471:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4791,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"9479:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4789,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"9448:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4787,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:22","typeDescriptions":{}}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:22","trueExpression":{"arguments":[{"hexValue":"30","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4783,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:22","typeDescriptions":{}}},"id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:22"},{"assignments":[4797],"declarations":[{"constant":false,"id":4797,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:22","nodeType":"VariableDeclaration","scope":4877,"src":"9567:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4796,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4804,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"9587:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":4800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4799,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:22","typeDescriptions":{}}},"id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:22"},{"assignments":[4806],"declarations":[{"constant":false,"id":4806,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:22","nodeType":"VariableDeclaration","scope":4877,"src":"9616:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4805,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4813,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4807,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"9636:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":4809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4808,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:22","typeDescriptions":{}}},"id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:22"},{"assignments":[4815],"declarations":[{"constant":false,"id":4815,"mutability":"mutable","name":"offset","nameLocation":"9673:6:22","nodeType":"VariableDeclaration","scope":4877,"src":"9665:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4814,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4822,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4816,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"9683:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":4817,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"9699:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"9682:37:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:22"},{"assignments":[4824,4826],"declarations":[{"constant":false,"id":4824,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:22","nodeType":"VariableDeclaration","scope":4877,"src":"9733:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4823,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4826,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:22","nodeType":"VariableDeclaration","scope":4877,"src":"9750:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4825,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4834,"initialValue":{"arguments":[{"id":4828,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"9783:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4829,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"9790:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4830,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"9798:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4832,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"9806:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4827,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4537,4574],"referencedDeclaration":4574,"src":"9770:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"9825:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4836,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"9839:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4837,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"9850:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4855,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"9967:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4856,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"9981:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4858,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"9997:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4859,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"10009:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4770,"id":4874,"nodeType":"Return","src":"10087:17:22"},"id":4875,"nodeType":"IfStatement","src":"9963:141:22","trueBody":{"id":4870,"nodeType":"Block","src":"10025:56:22","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4864,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4863,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:22","memberName":"min","nodeType":"MemberAccess","src":"10053:16:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4770,"id":4869,"nodeType":"Return","src":"10039:31:22"}]}},"id":4876,"nodeType":"IfStatement","src":"9821:283:22","trueBody":{"id":4854,"nodeType":"Block","src":"9866:91:22","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":4841,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"9894:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4849,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"9936:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4847,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:22","typeDescriptions":{}}},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:22","trueExpression":{"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:22","subExpression":{"arguments":[{"id":4844,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"9917:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4842,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:22","typeDescriptions":{}}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4770,"id":4853,"nodeType":"Return","src":"9880:66:22"}]}}]},"documentation":{"id":4758,"nodeType":"StructuredDocumentation","src":"8928:200:22","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4878,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:22","nodeType":"FunctionDefinition","parameters":{"id":4765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4760,"mutability":"mutable","name":"input","nameLocation":"9193:5:22","nodeType":"VariableDeclaration","scope":4878,"src":"9179:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4759,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4762,"mutability":"mutable","name":"begin","nameLocation":"9216:5:22","nodeType":"VariableDeclaration","scope":4878,"src":"9208:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4761,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4764,"mutability":"mutable","name":"end","nameLocation":"9239:3:22","nodeType":"VariableDeclaration","scope":4878,"src":"9231:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4763,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:22"},"returnParameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"success","nameLocation":"9276:7:22","nodeType":"VariableDeclaration","scope":4878,"src":"9271:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4766,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4769,"mutability":"mutable","name":"value","nameLocation":"9292:5:22","nodeType":"VariableDeclaration","scope":4878,"src":"9285:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4768,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:22"},"scope":5337,"src":"9133:978:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4896,"nodeType":"Block","src":"10456:67:22","statements":[{"expression":{"arguments":[{"id":4887,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"10486:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4891,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"10502:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4889,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:22","typeDescriptions":{}}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:22","memberName":"length","nodeType":"MemberAccess","src":"10496:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4886,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[4897,4928],"referencedDeclaration":4928,"src":"10473:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4885,"id":4895,"nodeType":"Return","src":"10466:50:22"}]},"documentation":{"id":4879,"nodeType":"StructuredDocumentation","src":"10117:259:22","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4897,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:22","nodeType":"FunctionDefinition","parameters":{"id":4882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4881,"mutability":"mutable","name":"input","nameLocation":"10417:5:22","nodeType":"VariableDeclaration","scope":4897,"src":"10403:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4880,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:22"},"returnParameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4897,"src":"10447:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4883,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:22"},"scope":5337,"src":"10381:142:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4927,"nodeType":"Block","src":"10937:156:22","statements":[{"assignments":[4910,4912],"declarations":[{"constant":false,"id":4910,"mutability":"mutable","name":"success","nameLocation":"10953:7:22","nodeType":"VariableDeclaration","scope":4927,"src":"10948:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4909,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4912,"mutability":"mutable","name":"value","nameLocation":"10970:5:22","nodeType":"VariableDeclaration","scope":4927,"src":"10962:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4911,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4918,"initialValue":{"arguments":[{"id":4914,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"10995:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4915,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"11002:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4916,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"11009:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4913,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[4949,4986],"referencedDeclaration":4986,"src":"10979:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:22"},{"condition":{"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:22","subExpression":{"id":4919,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"11028:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4924,"nodeType":"IfStatement","src":"11023:41:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4921,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"11044:18:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4923,"nodeType":"RevertStatement","src":"11037:27:22"}},{"expression":{"id":4925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"11081:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4908,"id":4926,"nodeType":"Return","src":"11074:12:22"}]},"documentation":{"id":4898,"nodeType":"StructuredDocumentation","src":"10529:300:22","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4928,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:22","nodeType":"FunctionDefinition","parameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"input","nameLocation":"10870:5:22","nodeType":"VariableDeclaration","scope":4928,"src":"10856:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4899,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4902,"mutability":"mutable","name":"begin","nameLocation":"10885:5:22","nodeType":"VariableDeclaration","scope":4928,"src":"10877:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4901,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4904,"mutability":"mutable","name":"end","nameLocation":"10900:3:22","nodeType":"VariableDeclaration","scope":4928,"src":"10892:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4903,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:22"},"returnParameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4928,"src":"10928:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4906,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:22"},"scope":5337,"src":"10834:259:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4948,"nodeType":"Block","src":"11420:86:22","statements":[{"expression":{"arguments":[{"id":4939,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"11469:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4943,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"11485:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4941,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:22","typeDescriptions":{}}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:22","memberName":"length","nodeType":"MemberAccess","src":"11479:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4938,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"11437:31:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4937,"id":4947,"nodeType":"Return","src":"11430:69:22"}]},"documentation":{"id":4929,"nodeType":"StructuredDocumentation","src":"11099:218:22","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4949,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:22","nodeType":"FunctionDefinition","parameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"mutability":"mutable","name":"input","nameLocation":"11361:5:22","nodeType":"VariableDeclaration","scope":4949,"src":"11347:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4930,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:22"},"returnParameters":{"id":4937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4934,"mutability":"mutable","name":"success","nameLocation":"11396:7:22","nodeType":"VariableDeclaration","scope":4949,"src":"11391:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4933,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4936,"mutability":"mutable","name":"value","nameLocation":"11413:5:22","nodeType":"VariableDeclaration","scope":4949,"src":"11405:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4935,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:22"},"scope":5337,"src":"11322:184:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4985,"nodeType":"Block","src":"11914:147:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"11928:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4966,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"11940:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4964,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:22","typeDescriptions":{}}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:22","memberName":"length","nodeType":"MemberAccess","src":"11934:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"11957:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4971,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"11965:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4978,"nodeType":"IfStatement","src":"11924:63:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4962,"id":4977,"nodeType":"Return","src":"11970:17:22"}},{"expression":{"arguments":[{"id":4980,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"12036:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4981,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"12043:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4982,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"12050:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4979,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"12004:31:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4962,"id":4984,"nodeType":"Return","src":"11997:57:22"}]},"documentation":{"id":4950,"nodeType":"StructuredDocumentation","src":"11512:241:22","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4986,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:22","nodeType":"FunctionDefinition","parameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"input","nameLocation":"11806:5:22","nodeType":"VariableDeclaration","scope":4986,"src":"11792:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4951,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4954,"mutability":"mutable","name":"begin","nameLocation":"11829:5:22","nodeType":"VariableDeclaration","scope":4986,"src":"11821:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4953,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4956,"mutability":"mutable","name":"end","nameLocation":"11852:3:22","nodeType":"VariableDeclaration","scope":4986,"src":"11844:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4955,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:22"},"returnParameters":{"id":4962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4959,"mutability":"mutable","name":"success","nameLocation":"11890:7:22","nodeType":"VariableDeclaration","scope":4986,"src":"11885:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4958,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4961,"mutability":"mutable","name":"value","nameLocation":"11907:5:22","nodeType":"VariableDeclaration","scope":4986,"src":"11899:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4960,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:22"},"scope":5337,"src":"11758:303:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5088,"nodeType":"Block","src":"12447:880:22","statements":[{"assignments":[5001],"declarations":[{"constant":false,"id":5001,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:22","nodeType":"VariableDeclaration","scope":5088,"src":"12457:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5000,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5006,"initialValue":{"arguments":[{"id":5004,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"12485:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5002,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:22","typeDescriptions":{}}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:22"},{"assignments":[5008],"declarations":[{"constant":false,"id":5008,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:22","nodeType":"VariableDeclaration","scope":5088,"src":"12539:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5007,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5028,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5009,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"12557:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5010,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"12563:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5018,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"12607:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5019,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"12615:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5017,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"12584:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5015,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:22","typeDescriptions":{}}},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5022,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:22","typeDescriptions":{}}},"id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:22"},{"assignments":[5030],"declarations":[{"constant":false,"id":5030,"mutability":"mutable","name":"offset","nameLocation":"12727:6:22","nodeType":"VariableDeclaration","scope":5088,"src":"12719:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5029,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5036,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5031,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"12736:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"12736:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:22"},{"assignments":[5038],"declarations":[{"constant":false,"id":5038,"mutability":"mutable","name":"result","nameLocation":"12777:6:22","nodeType":"VariableDeclaration","scope":5088,"src":"12769:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5037,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5040,"initialValue":{"hexValue":"30","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:22"},{"body":{"id":5082,"nodeType":"Block","src":"12844:446:22","statements":[{"assignments":[5054],"declarations":[{"constant":false,"id":5054,"mutability":"mutable","name":"chr","nameLocation":"12864:3:22","nodeType":"VariableDeclaration","scope":5082,"src":"12858:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5053,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5064,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5059,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"12913:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5060,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"12921:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5058,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"12890:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5056,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:22","typeDescriptions":{}}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5055,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"12870:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5065,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"12943:3:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5072,"nodeType":"IfStatement","src":"12939:31:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4999,"id":5071,"nodeType":"Return","src":"12953:17:22"}},{"expression":{"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"12984:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5076,"nodeType":"ExpressionStatement","src":"12984:12:22"},{"id":5081,"nodeType":"UncheckedBlock","src":"13010:270:22","statements":[{"expression":{"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"13252:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5078,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"13262:3:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5080,"nodeType":"ExpressionStatement","src":"13252:13:22"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5047,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"12830:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5048,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"12834:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5083,"initializationExpression":{"assignments":[5042],"declarations":[{"constant":false,"id":5042,"mutability":"mutable","name":"i","nameLocation":"12810:1:22","nodeType":"VariableDeclaration","scope":5083,"src":"12802:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5041,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5046,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5043,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"12814:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5044,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"12822:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:22"},"loopExpression":{"expression":{"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:22","subExpression":{"id":5050,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"12841:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5052,"nodeType":"ExpressionStatement","src":"12839:3:22"},"nodeType":"ForStatement","src":"12797:493:22"},{"expression":{"components":[{"hexValue":"74727565","id":5084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5085,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"13313:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4999,"id":5087,"nodeType":"Return","src":"13299:21:22"}]},"documentation":{"id":4987,"nodeType":"StructuredDocumentation","src":"12067:204:22","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5089,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:22","nodeType":"FunctionDefinition","parameters":{"id":4994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4989,"mutability":"mutable","name":"input","nameLocation":"12340:5:22","nodeType":"VariableDeclaration","scope":5089,"src":"12326:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4988,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4991,"mutability":"mutable","name":"begin","nameLocation":"12363:5:22","nodeType":"VariableDeclaration","scope":5089,"src":"12355:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4990,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4993,"mutability":"mutable","name":"end","nameLocation":"12386:3:22","nodeType":"VariableDeclaration","scope":5089,"src":"12378:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4992,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:22"},"returnParameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"success","nameLocation":"12423:7:22","nodeType":"VariableDeclaration","scope":5089,"src":"12418:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4995,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4998,"mutability":"mutable","name":"value","nameLocation":"12440:5:22","nodeType":"VariableDeclaration","scope":5089,"src":"12432:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:22"},"scope":5337,"src":"12276:1051:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5107,"nodeType":"Block","src":"13625:67:22","statements":[{"expression":{"arguments":[{"id":5098,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"13655:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5102,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"13671:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5100,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:22","typeDescriptions":{}}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:22","memberName":"length","nodeType":"MemberAccess","src":"13665:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5097,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[5108,5139],"referencedDeclaration":5139,"src":"13642:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5096,"id":5106,"nodeType":"Return","src":"13635:50:22"}]},"documentation":{"id":5090,"nodeType":"StructuredDocumentation","src":"13333:212:22","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5108,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:22","nodeType":"FunctionDefinition","parameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"input","nameLocation":"13586:5:22","nodeType":"VariableDeclaration","scope":5108,"src":"13572:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5091,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:22"},"returnParameters":{"id":5096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5108,"src":"13616:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5094,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:22"},"scope":5337,"src":"13550:142:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5138,"nodeType":"Block","src":"14058:165:22","statements":[{"assignments":[5121,5123],"declarations":[{"constant":false,"id":5121,"mutability":"mutable","name":"success","nameLocation":"14074:7:22","nodeType":"VariableDeclaration","scope":5138,"src":"14069:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5120,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5123,"mutability":"mutable","name":"value","nameLocation":"14091:5:22","nodeType":"VariableDeclaration","scope":5138,"src":"14083:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5122,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5129,"initialValue":{"arguments":[{"id":5125,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"14116:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5126,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"14123:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5127,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"14130:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5124,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5160,5264],"referencedDeclaration":5264,"src":"14100:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:22"},{"condition":{"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:22","subExpression":{"id":5130,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"14149:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5135,"nodeType":"IfStatement","src":"14144:50:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5132,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"14165:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5134,"nodeType":"RevertStatement","src":"14158:36:22"}},{"expression":{"id":5136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"14211:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5119,"id":5137,"nodeType":"Return","src":"14204:12:22"}]},"documentation":{"id":5109,"nodeType":"StructuredDocumentation","src":"13698:252:22","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5139,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:22","nodeType":"FunctionDefinition","parameters":{"id":5116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5111,"mutability":"mutable","name":"input","nameLocation":"13991:5:22","nodeType":"VariableDeclaration","scope":5139,"src":"13977:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5110,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5113,"mutability":"mutable","name":"begin","nameLocation":"14006:5:22","nodeType":"VariableDeclaration","scope":5139,"src":"13998:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5112,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5115,"mutability":"mutable","name":"end","nameLocation":"14021:3:22","nodeType":"VariableDeclaration","scope":5139,"src":"14013:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5114,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:22"},"returnParameters":{"id":5119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5139,"src":"14049:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5117,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:22"},"scope":5337,"src":"13955:268:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5159,"nodeType":"Block","src":"14523:70:22","statements":[{"expression":{"arguments":[{"id":5150,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"14556:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5154,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"14572:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5152,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:22","typeDescriptions":{}}},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:22","memberName":"length","nodeType":"MemberAccess","src":"14566:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5149,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5160,5264],"referencedDeclaration":5264,"src":"14540:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5148,"id":5158,"nodeType":"Return","src":"14533:53:22"}]},"documentation":{"id":5140,"nodeType":"StructuredDocumentation","src":"14229:191:22","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":5160,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:22","nodeType":"FunctionDefinition","parameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5142,"mutability":"mutable","name":"input","nameLocation":"14464:5:22","nodeType":"VariableDeclaration","scope":5160,"src":"14450:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5141,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:22"},"returnParameters":{"id":5148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"success","nameLocation":"14499:7:22","nodeType":"VariableDeclaration","scope":5160,"src":"14494:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5144,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5147,"mutability":"mutable","name":"value","nameLocation":"14516:5:22","nodeType":"VariableDeclaration","scope":5160,"src":"14508:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5146,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:22"},"scope":5337,"src":"14425:168:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5263,"nodeType":"Block","src":"14963:733:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5174,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"14977:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5177,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"14989:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5175,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:22","typeDescriptions":{}}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:22","memberName":"length","nodeType":"MemberAccess","src":"14983:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5181,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"15006:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5182,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"15014:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5192,"nodeType":"IfStatement","src":"14973:72:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5186,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:22","typeDescriptions":{}}},"id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5173,"id":5191,"nodeType":"Return","src":"15019:26:22"}},{"assignments":[5194],"declarations":[{"constant":false,"id":5194,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:22","nodeType":"VariableDeclaration","scope":5263,"src":"15056:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5193,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5217,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5195,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"15074:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5196,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"15080:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":5206,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"15130:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5204,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:22","typeDescriptions":{}}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5208,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"15138:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5203,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"15101:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5201,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:22","typeDescriptions":{}}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5211,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:22","typeDescriptions":{}}},"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:22"},{"assignments":[5219],"declarations":[{"constant":false,"id":5219,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:22","nodeType":"VariableDeclaration","scope":5263,"src":"15242:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5218,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5227,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":5220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5221,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"15272:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"15272:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5228,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"15359:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5229,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"15365:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5231,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"15374:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5261,"nodeType":"Block","src":"15639:51:22","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5255,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:22","typeDescriptions":{}}},"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5173,"id":5260,"nodeType":"Return","src":"15653:26:22"}]},"id":5262,"nodeType":"IfStatement","src":"15355:335:22","trueBody":{"id":5253,"nodeType":"Block","src":"15390:243:22","statements":[{"assignments":[5234,5236],"declarations":[{"constant":false,"id":5234,"mutability":"mutable","name":"s","nameLocation":"15511:1:22","nodeType":"VariableDeclaration","scope":5253,"src":"15506:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5233,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5236,"mutability":"mutable","name":"v","nameLocation":"15522:1:22","nodeType":"VariableDeclaration","scope":5253,"src":"15514:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5235,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5242,"initialValue":{"arguments":[{"id":5238,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"15559:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5239,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"15566:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5240,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"15573:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5237,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"15527:31:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:22"},{"expression":{"components":[{"id":5243,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"15599:1:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":5248,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"15618:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5246,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:22","typeDescriptions":{}}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5244,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:22","typeDescriptions":{}}},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5173,"id":5252,"nodeType":"Return","src":"15591:31:22"}]}}]},"documentation":{"id":5161,"nodeType":"StructuredDocumentation","src":"14599:203:22","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":5264,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:22","nodeType":"FunctionDefinition","parameters":{"id":5168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"input","nameLocation":"14855:5:22","nodeType":"VariableDeclaration","scope":5264,"src":"14841:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5162,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5165,"mutability":"mutable","name":"begin","nameLocation":"14878:5:22","nodeType":"VariableDeclaration","scope":5264,"src":"14870:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5164,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5167,"mutability":"mutable","name":"end","nameLocation":"14901:3:22","nodeType":"VariableDeclaration","scope":5264,"src":"14893:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5166,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:22"},"returnParameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5170,"mutability":"mutable","name":"success","nameLocation":"14939:7:22","nodeType":"VariableDeclaration","scope":5264,"src":"14934:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5169,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5172,"mutability":"mutable","name":"value","nameLocation":"14956:5:22","nodeType":"VariableDeclaration","scope":5264,"src":"14948:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5171,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:22"},"scope":5337,"src":"14807:889:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5323,"nodeType":"Block","src":"15765:461:22","statements":[{"assignments":[5272],"declarations":[{"constant":false,"id":5272,"mutability":"mutable","name":"value","nameLocation":"15781:5:22","nodeType":"VariableDeclaration","scope":5323,"src":"15775:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5271,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5277,"initialValue":{"arguments":[{"id":5275,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"15795:3:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5273,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:22","typeDescriptions":{}}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:22"},{"id":5320,"nodeType":"UncheckedBlock","src":"15959:238:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"15987:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:22","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"16001:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":5282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:22","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"16047:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":5290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"16061:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:22","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"16108:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"16122:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:22","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":5313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5312,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5311,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:22","memberName":"max","nodeType":"MemberAccess","src":"16171:15:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5270,"id":5316,"nodeType":"Return","src":"16164:22:22"},"id":5317,"nodeType":"IfStatement","src":"16104:82:22","trueBody":{"expression":{"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"16134:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:22","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5310,"nodeType":"ExpressionStatement","src":"16134:11:22"}},"id":5318,"nodeType":"IfStatement","src":"16043:143:22","trueBody":{"expression":{"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"16074:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:22","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5299,"nodeType":"ExpressionStatement","src":"16074:11:22"}},"id":5319,"nodeType":"IfStatement","src":"15983:203:22","trueBody":{"expression":{"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"16013:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5288,"nodeType":"ExpressionStatement","src":"16013:11:22"}}]},{"expression":{"id":5321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"16214:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5270,"id":5322,"nodeType":"Return","src":"16207:12:22"}]},"id":5324,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:22","nodeType":"FunctionDefinition","parameters":{"id":5267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5266,"mutability":"mutable","name":"chr","nameLocation":"15731:3:22","nodeType":"VariableDeclaration","scope":5324,"src":"15724:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5265,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:22"},"returnParameters":{"id":5270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5324,"src":"15758:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5268,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:22"},"scope":5337,"src":"15702:524:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5335,"nodeType":"Block","src":"16611:225:22","statements":[{"AST":{"nodeType":"YulBlock","src":"16760:70:22","statements":[{"nodeType":"YulAssignment","src":"16774:46:22","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"16793:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16805:4:22","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"16811:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:22"},"nodeType":"YulFunctionCall","src":"16801:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:22"},"nodeType":"YulFunctionCall","src":"16789:30:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16783:5:22"},"nodeType":"YulFunctionCall","src":"16783:37:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16774:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5327,"isOffset":false,"isSlot":false,"src":"16793:6:22","valueSize":1},{"declaration":5329,"isOffset":false,"isSlot":false,"src":"16811:6:22","valueSize":1},{"declaration":5332,"isOffset":false,"isSlot":false,"src":"16774:5:22","valueSize":1}],"flags":["memory-safe"],"id":5334,"nodeType":"InlineAssembly","src":"16735:95:22"}]},"documentation":{"id":5325,"nodeType":"StructuredDocumentation","src":"16232:268:22","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":5336,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:22","nodeType":"FunctionDefinition","parameters":{"id":5330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5327,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:22","nodeType":"VariableDeclaration","scope":5336,"src":"16537:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5326,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5329,"mutability":"mutable","name":"offset","nameLocation":"16566:6:22","nodeType":"VariableDeclaration","scope":5336,"src":"16558:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5328,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:22"},"returnParameters":{"id":5333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5332,"mutability":"mutable","name":"value","nameLocation":"16604:5:22","nodeType":"VariableDeclaration","scope":5336,"src":"16596:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:22"},"scope":5337,"src":"16505:331:22","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5338,"src":"297:16541:22","usedErrors":[4161,4164,4167],"usedEvents":[]}],"src":"101:16738:22"},"id":22},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[5361],"IERC165":[5373]},"id":5362,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5339,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":5341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5362,"sourceUnit":5374,"src":"140:38:23","symbolAliases":[{"foreign":{"id":5340,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"148:7:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5343,"name":"IERC165","nameLocations":["688:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":5373,"src":"688:7:23"},"id":5344,"nodeType":"InheritanceSpecifier","src":"688:7:23"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":5342,"nodeType":"StructuredDocumentation","src":"180:479:23","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":5361,"linearizedBaseContracts":[5361,5373],"name":"ERC165","nameLocation":"678:6:23","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[5372],"body":{"id":5359,"nodeType":"Block","src":"845:64:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5352,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"862:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5354,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"882:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5373_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5373_$","typeString":"type(contract IERC165)"}],"id":5353,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5373","typeString":"type(contract IERC165)"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:23","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5351,"id":5358,"nodeType":"Return","src":"855:47:23"}]},"documentation":{"id":5345,"nodeType":"StructuredDocumentation","src":"702:56:23","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":5360,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:23","nodeType":"FunctionDefinition","parameters":{"id":5348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5347,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:23","nodeType":"VariableDeclaration","scope":5360,"src":"790:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5346,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:23"},"returnParameters":{"id":5351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5360,"src":"839:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5349,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:23"},"scope":5361,"src":"763:146:23","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":5362,"src":"660:251:23","usedErrors":[],"usedEvents":[]}],"src":"114:798:23"},"id":23},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5373]},"id":5374,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5363,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5364,"nodeType":"StructuredDocumentation","src":"141:280:24","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5373,"linearizedBaseContracts":[5373],"name":"IERC165","nameLocation":"432:7:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5365,"nodeType":"StructuredDocumentation","src":"446:340:24","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5372,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:24","nodeType":"FunctionDefinition","parameters":{"id":5368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5367,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:24","nodeType":"VariableDeclaration","scope":5372,"src":"818:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5366,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:24"},"returnParameters":{"id":5371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5372,"src":"861:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5369,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:24"},"scope":5373,"src":"791:76:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5374,"src":"422:447:24","usedErrors":[],"usedEvents":[]}],"src":"115:755:24"},"id":24},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6979],"Panic":[3883],"SafeCast":[8744]},"id":6980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5375,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":5377,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6980,"sourceUnit":3884,"src":"129:35:25","symbolAliases":[{"foreign":{"id":5376,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"137:5:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5379,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6980,"sourceUnit":8745,"src":"165:40:25","symbolAliases":[{"foreign":{"id":5378,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"173:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5380,"nodeType":"StructuredDocumentation","src":"207:73:25","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6979,"linearizedBaseContracts":[6979],"name":"Math","nameLocation":"289:4:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5385,"members":[{"id":5381,"name":"Floor","nameLocation":"324:5:25","nodeType":"EnumValue","src":"324:5:25"},{"id":5382,"name":"Ceil","nameLocation":"367:4:25","nodeType":"EnumValue","src":"367:4:25"},{"id":5383,"name":"Trunc","nameLocation":"409:5:25","nodeType":"EnumValue","src":"409:5:25"},{"id":5384,"name":"Expand","nameLocation":"439:6:25","nodeType":"EnumValue","src":"439:6:25"}],"name":"Rounding","nameLocation":"305:8:25","nodeType":"EnumDefinition","src":"300:169:25"},{"body":{"id":5416,"nodeType":"Block","src":"677:140:25","statements":[{"id":5415,"nodeType":"UncheckedBlock","src":"687:124:25","statements":[{"assignments":[5398],"declarations":[{"constant":false,"id":5398,"mutability":"mutable","name":"c","nameLocation":"719:1:25","nodeType":"VariableDeclaration","scope":5415,"src":"711:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5397,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5402,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5399,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"723:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5400,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"727:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5403,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"746:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5404,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"750:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5410,"nodeType":"IfStatement","src":"742:28:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5396,"id":5409,"nodeType":"Return","src":"753:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5412,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"798:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5396,"id":5414,"nodeType":"Return","src":"784:16:25"}]}]},"documentation":{"id":5386,"nodeType":"StructuredDocumentation","src":"475:106:25","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":5417,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:25","nodeType":"FunctionDefinition","parameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5388,"mutability":"mutable","name":"a","nameLocation":"610:1:25","nodeType":"VariableDeclaration","scope":5417,"src":"602:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5387,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5390,"mutability":"mutable","name":"b","nameLocation":"621:1:25","nodeType":"VariableDeclaration","scope":5417,"src":"613:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5389,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:25"},"returnParameters":{"id":5396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5393,"mutability":"mutable","name":"success","nameLocation":"652:7:25","nodeType":"VariableDeclaration","scope":5417,"src":"647:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5392,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5395,"mutability":"mutable","name":"result","nameLocation":"669:6:25","nodeType":"VariableDeclaration","scope":5417,"src":"661:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5394,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:25"},"scope":6979,"src":"586:231:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5444,"nodeType":"Block","src":"1028:113:25","statements":[{"id":5443,"nodeType":"UncheckedBlock","src":"1038:97:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5429,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"1066:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5430,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"1070:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5436,"nodeType":"IfStatement","src":"1062:28:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5434,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5428,"id":5435,"nodeType":"Return","src":"1073:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5438,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"1118:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5439,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"1122:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5441,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5428,"id":5442,"nodeType":"Return","src":"1104:20:25"}]}]},"documentation":{"id":5418,"nodeType":"StructuredDocumentation","src":"823:109:25","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":5445,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:25","nodeType":"FunctionDefinition","parameters":{"id":5423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5420,"mutability":"mutable","name":"a","nameLocation":"961:1:25","nodeType":"VariableDeclaration","scope":5445,"src":"953:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5419,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5422,"mutability":"mutable","name":"b","nameLocation":"972:1:25","nodeType":"VariableDeclaration","scope":5445,"src":"964:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:25"},"returnParameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5425,"mutability":"mutable","name":"success","nameLocation":"1003:7:25","nodeType":"VariableDeclaration","scope":5445,"src":"998:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5424,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5427,"mutability":"mutable","name":"result","nameLocation":"1020:6:25","nodeType":"VariableDeclaration","scope":5445,"src":"1012:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:25"},"scope":6979,"src":"937:204:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5486,"nodeType":"Block","src":"1355:417:25","statements":[{"id":5485,"nodeType":"UncheckedBlock","src":"1365:401:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5457,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"1623:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5464,"nodeType":"IfStatement","src":"1619:28:25","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":5460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5456,"id":5463,"nodeType":"Return","src":"1631:16:25"}},{"assignments":[5466],"declarations":[{"constant":false,"id":5466,"mutability":"mutable","name":"c","nameLocation":"1669:1:25","nodeType":"VariableDeclaration","scope":5485,"src":"1661:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5470,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5467,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"1673:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5468,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"1677:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5471,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"1696:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5472,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"1700:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5474,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"1705:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5480,"nodeType":"IfStatement","src":"1692:33:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5478,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5456,"id":5479,"nodeType":"Return","src":"1708:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":5481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5482,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"1753:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5456,"id":5484,"nodeType":"Return","src":"1739:16:25"}]}]},"documentation":{"id":5446,"nodeType":"StructuredDocumentation","src":"1147:112:25","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":5487,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:25","nodeType":"FunctionDefinition","parameters":{"id":5451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5448,"mutability":"mutable","name":"a","nameLocation":"1288:1:25","nodeType":"VariableDeclaration","scope":5487,"src":"1280:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5450,"mutability":"mutable","name":"b","nameLocation":"1299:1:25","nodeType":"VariableDeclaration","scope":5487,"src":"1291:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:25"},"returnParameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"success","nameLocation":"1330:7:25","nodeType":"VariableDeclaration","scope":5487,"src":"1325:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5452,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5455,"mutability":"mutable","name":"result","nameLocation":"1347:6:25","nodeType":"VariableDeclaration","scope":5487,"src":"1339:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:25"},"scope":6979,"src":"1264:508:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5514,"nodeType":"Block","src":"1987:114:25","statements":[{"id":5513,"nodeType":"UncheckedBlock","src":"1997:98:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5499,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"2025:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5506,"nodeType":"IfStatement","src":"2021:29:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5498,"id":5505,"nodeType":"Return","src":"2033:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":5507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5508,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"2078:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5509,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"2082:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5498,"id":5512,"nodeType":"Return","src":"2064:20:25"}]}]},"documentation":{"id":5488,"nodeType":"StructuredDocumentation","src":"1778:113:25","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5515,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:25","nodeType":"FunctionDefinition","parameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"a","nameLocation":"1920:1:25","nodeType":"VariableDeclaration","scope":5515,"src":"1912:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5492,"mutability":"mutable","name":"b","nameLocation":"1931:1:25","nodeType":"VariableDeclaration","scope":5515,"src":"1923:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5491,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:25"},"returnParameters":{"id":5498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"success","nameLocation":"1962:7:25","nodeType":"VariableDeclaration","scope":5515,"src":"1957:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5494,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5497,"mutability":"mutable","name":"result","nameLocation":"1979:6:25","nodeType":"VariableDeclaration","scope":5515,"src":"1971:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5496,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:25"},"scope":6979,"src":"1896:205:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5542,"nodeType":"Block","src":"2326:114:25","statements":[{"id":5541,"nodeType":"UncheckedBlock","src":"2336:98:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5527,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"2364:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5534,"nodeType":"IfStatement","src":"2360:29:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5526,"id":5533,"nodeType":"Return","src":"2372:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":5535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"2417:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5537,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"2421:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5526,"id":5540,"nodeType":"Return","src":"2403:20:25"}]}]},"documentation":{"id":5516,"nodeType":"StructuredDocumentation","src":"2107:123:25","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":5543,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:25","nodeType":"FunctionDefinition","parameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5518,"mutability":"mutable","name":"a","nameLocation":"2259:1:25","nodeType":"VariableDeclaration","scope":5543,"src":"2251:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5520,"mutability":"mutable","name":"b","nameLocation":"2270:1:25","nodeType":"VariableDeclaration","scope":5543,"src":"2262:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5519,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:25"},"returnParameters":{"id":5526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"success","nameLocation":"2301:7:25","nodeType":"VariableDeclaration","scope":5543,"src":"2296:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5522,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5525,"mutability":"mutable","name":"result","nameLocation":"2318:6:25","nodeType":"VariableDeclaration","scope":5543,"src":"2310:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:25"},"scope":6979,"src":"2235:205:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5569,"nodeType":"Block","src":"2912:207:25","statements":[{"id":5568,"nodeType":"UncheckedBlock","src":"2922:191:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5555,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"3060:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"3066:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"3070:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5562,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"3091:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5560,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"3075:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"3075:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5554,"id":5567,"nodeType":"Return","src":"3053:49:25"}]}]},"documentation":{"id":5544,"nodeType":"StructuredDocumentation","src":"2446:374:25","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5570,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:25","nodeType":"FunctionDefinition","parameters":{"id":5551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"condition","nameLocation":"2847:9:25","nodeType":"VariableDeclaration","scope":5570,"src":"2842:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5545,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5548,"mutability":"mutable","name":"a","nameLocation":"2866:1:25","nodeType":"VariableDeclaration","scope":5570,"src":"2858:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5550,"mutability":"mutable","name":"b","nameLocation":"2877:1:25","nodeType":"VariableDeclaration","scope":5570,"src":"2869:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:25"},"returnParameters":{"id":5554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5570,"src":"2903:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5552,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:25"},"scope":6979,"src":"2825:294:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5588,"nodeType":"Block","src":"3256:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5581,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"3281:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5582,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"3285:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5584,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"3288:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5585,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"3291:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5580,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"3273:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5579,"id":5587,"nodeType":"Return","src":"3266:27:25"}]},"documentation":{"id":5571,"nodeType":"StructuredDocumentation","src":"3125:59:25","text":" @dev Returns the largest of two numbers."},"id":5589,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:25","nodeType":"FunctionDefinition","parameters":{"id":5576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5573,"mutability":"mutable","name":"a","nameLocation":"3210:1:25","nodeType":"VariableDeclaration","scope":5589,"src":"3202:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5575,"mutability":"mutable","name":"b","nameLocation":"3221:1:25","nodeType":"VariableDeclaration","scope":5589,"src":"3213:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5574,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:25"},"returnParameters":{"id":5579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5589,"src":"3247:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:25"},"scope":6979,"src":"3189:111:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5607,"nodeType":"Block","src":"3438:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5600,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"3463:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5601,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"3467:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5603,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"3470:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5604,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"3473:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5599,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"3455:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5598,"id":5606,"nodeType":"Return","src":"3448:27:25"}]},"documentation":{"id":5590,"nodeType":"StructuredDocumentation","src":"3306:60:25","text":" @dev Returns the smallest of two numbers."},"id":5608,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:25","nodeType":"FunctionDefinition","parameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5592,"mutability":"mutable","name":"a","nameLocation":"3392:1:25","nodeType":"VariableDeclaration","scope":5608,"src":"3384:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5591,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5594,"mutability":"mutable","name":"b","nameLocation":"3403:1:25","nodeType":"VariableDeclaration","scope":5608,"src":"3395:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5593,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:25"},"returnParameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5608,"src":"3429:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5596,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:25"},"scope":6979,"src":"3371:111:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5630,"nodeType":"Block","src":"3666:82:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5618,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"3721:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5619,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"3725:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5622,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"3731:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5623,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"3735:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5617,"id":5629,"nodeType":"Return","src":"3713:28:25"}]},"documentation":{"id":5609,"nodeType":"StructuredDocumentation","src":"3488:102:25","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5631,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:25","nodeType":"FunctionDefinition","parameters":{"id":5614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5611,"mutability":"mutable","name":"a","nameLocation":"3620:1:25","nodeType":"VariableDeclaration","scope":5631,"src":"3612:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5610,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5613,"mutability":"mutable","name":"b","nameLocation":"3631:1:25","nodeType":"VariableDeclaration","scope":5631,"src":"3623:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5612,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:25"},"returnParameters":{"id":5617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5631,"src":"3657:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5615,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:25"},"scope":6979,"src":"3595:153:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5671,"nodeType":"Block","src":"4040:633:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5641,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"4054:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5652,"nodeType":"IfStatement","src":"4050:150:25","trueBody":{"id":5651,"nodeType":"Block","src":"4062:138:25","statements":[{"expression":{"arguments":[{"expression":{"id":5647,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"4166:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3883_$","typeString":"type(library Panic)"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3850,"src":"4166:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5644,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"4154:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3883_$","typeString":"type(library Panic)"}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3882,"src":"4154:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5650,"nodeType":"ExpressionStatement","src":"4154:35:25"}]}},{"id":5670,"nodeType":"UncheckedBlock","src":"4583:84:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5655,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"4630:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5653,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"4614:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"4614:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5659,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"4641:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5663,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"4650:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5640,"id":5669,"nodeType":"Return","src":"4607:49:25"}]}]},"documentation":{"id":5632,"nodeType":"StructuredDocumentation","src":"3754:210:25","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5672,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:25","nodeType":"FunctionDefinition","parameters":{"id":5637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5634,"mutability":"mutable","name":"a","nameLocation":"3994:1:25","nodeType":"VariableDeclaration","scope":5672,"src":"3986:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5636,"mutability":"mutable","name":"b","nameLocation":"4005:1:25","nodeType":"VariableDeclaration","scope":5672,"src":"3997:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5635,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:25"},"returnParameters":{"id":5640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5672,"src":"4031:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5638,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:25"},"scope":6979,"src":"3969:704:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5808,"nodeType":"Block","src":"5094:4128:25","statements":[{"id":5807,"nodeType":"UncheckedBlock","src":"5104:4112:25","statements":[{"assignments":[5685],"declarations":[{"constant":false,"id":5685,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:25","nodeType":"VariableDeclaration","scope":5807,"src":"5433:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5684,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5689,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5686,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5675,"src":"5449:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5687,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"5453:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:25"},{"assignments":[5691],"declarations":[{"constant":false,"id":5691,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:25","nodeType":"VariableDeclaration","scope":5807,"src":"5513:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5690,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5692,"nodeType":"VariableDeclarationStatement","src":"5513:13:25"},{"AST":{"nodeType":"YulBlock","src":"5593:122:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:25"},"nodeType":"YulFunctionCall","src":"5634:6:25"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:25"},"nodeType":"YulFunctionCall","src":"5621:20:25"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:25","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:25","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:25"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:25"},"nodeType":"YulFunctionCall","src":"5671:14:25"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:25"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:25"},"nodeType":"YulFunctionCall","src":"5687:13:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:25"},"nodeType":"YulFunctionCall","src":"5667:34:25"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5685,"isOffset":false,"isSlot":false,"src":"5679:5:25","valueSize":1},{"declaration":5685,"isOffset":false,"isSlot":false,"src":"5694:5:25","valueSize":1},{"declaration":5691,"isOffset":false,"isSlot":false,"src":"5658:5:25","valueSize":1},{"declaration":5675,"isOffset":false,"isSlot":false,"src":"5628:1:25","valueSize":1},{"declaration":5677,"isOffset":false,"isSlot":false,"src":"5631:1:25","valueSize":1}],"id":5693,"nodeType":"InlineAssembly","src":"5584:131:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5694,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"5796:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5702,"nodeType":"IfStatement","src":"5792:368:25","trueBody":{"id":5701,"nodeType":"Block","src":"5808:352:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5697,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"6126:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5698,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"6134:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5683,"id":5700,"nodeType":"Return","src":"6119:26:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5703,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"6270:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5704,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"6285:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5721,"nodeType":"IfStatement","src":"6266:143:25","trueBody":{"id":5720,"nodeType":"Block","src":"6292:117:25","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"6330:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5713,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"6348:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3883_$","typeString":"type(library Panic)"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3850,"src":"6348:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5715,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"6372:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3883_$","typeString":"type(library Panic)"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:25","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3846,"src":"6372:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5709,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"6322:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5706,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"6310:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3883_$","typeString":"type(library Panic)"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3882,"src":"6310:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5719,"nodeType":"ExpressionStatement","src":"6310:84:25"}]}},{"assignments":[5723],"declarations":[{"constant":false,"id":5723,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:25","nodeType":"VariableDeclaration","scope":5807,"src":"6664:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5722,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5724,"nodeType":"VariableDeclarationStatement","src":"6664:17:25"},{"AST":{"nodeType":"YulBlock","src":"6704:291:25","statements":[{"nodeType":"YulAssignment","src":"6773:38:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:25"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:25"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:25"},"nodeType":"YulFunctionCall","src":"6786:25:25"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:25"}]},{"nodeType":"YulAssignment","src":"6893:41:25","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:25"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:25"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:25"},"nodeType":"YulFunctionCall","src":"6913:20:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:25"},"nodeType":"YulFunctionCall","src":"6902:32:25"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:25"}]},{"nodeType":"YulAssignment","src":"6951:30:25","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:25"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:25"},"nodeType":"YulFunctionCall","src":"6960:21:25"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5679,"isOffset":false,"isSlot":false,"src":"6799:11:25","valueSize":1},{"declaration":5685,"isOffset":false,"isSlot":false,"src":"6927:5:25","valueSize":1},{"declaration":5685,"isOffset":false,"isSlot":false,"src":"6951:5:25","valueSize":1},{"declaration":5685,"isOffset":false,"isSlot":false,"src":"6964:5:25","valueSize":1},{"declaration":5691,"isOffset":false,"isSlot":false,"src":"6893:5:25","valueSize":1},{"declaration":5691,"isOffset":false,"isSlot":false,"src":"6906:5:25","valueSize":1},{"declaration":5723,"isOffset":false,"isSlot":false,"src":"6773:9:25","valueSize":1},{"declaration":5723,"isOffset":false,"isSlot":false,"src":"6916:9:25","valueSize":1},{"declaration":5723,"isOffset":false,"isSlot":false,"src":"6971:9:25","valueSize":1},{"declaration":5675,"isOffset":false,"isSlot":false,"src":"6793:1:25","valueSize":1},{"declaration":5677,"isOffset":false,"isSlot":false,"src":"6796:1:25","valueSize":1}],"id":5725,"nodeType":"InlineAssembly","src":"6695:300:25"},{"assignments":[5727],"declarations":[{"constant":false,"id":5727,"mutability":"mutable","name":"twos","nameLocation":"7207:4:25","nodeType":"VariableDeclaration","scope":5807,"src":"7199:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5726,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5734,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5728,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"7214:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5730,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"7233:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5732,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:25"},{"AST":{"nodeType":"YulBlock","src":"7268:366:25","statements":[{"nodeType":"YulAssignment","src":"7333:37:25","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:25"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:25"},"nodeType":"YulFunctionCall","src":"7348:22:25"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:25"}]},{"nodeType":"YulAssignment","src":"7437:25:25","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:25"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:25"},"nodeType":"YulFunctionCall","src":"7446:16:25"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:25"}]},{"nodeType":"YulAssignment","src":"7581:39:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:25","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:25"},"nodeType":"YulFunctionCall","src":"7597:12:25"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:25"},"nodeType":"YulFunctionCall","src":"7593:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:25"},"nodeType":"YulFunctionCall","src":"7589:31:25"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5679,"isOffset":false,"isSlot":false,"src":"7333:11:25","valueSize":1},{"declaration":5679,"isOffset":false,"isSlot":false,"src":"7352:11:25","valueSize":1},{"declaration":5685,"isOffset":false,"isSlot":false,"src":"7437:5:25","valueSize":1},{"declaration":5685,"isOffset":false,"isSlot":false,"src":"7450:5:25","valueSize":1},{"declaration":5727,"isOffset":false,"isSlot":false,"src":"7365:4:25","valueSize":1},{"declaration":5727,"isOffset":false,"isSlot":false,"src":"7457:4:25","valueSize":1},{"declaration":5727,"isOffset":false,"isSlot":false,"src":"7581:4:25","valueSize":1},{"declaration":5727,"isOffset":false,"isSlot":false,"src":"7604:4:25","valueSize":1},{"declaration":5727,"isOffset":false,"isSlot":false,"src":"7611:4:25","valueSize":1}],"id":5735,"nodeType":"InlineAssembly","src":"7259:375:25"},{"expression":{"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5736,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"7700:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5737,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"7709:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5738,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"7717:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5741,"nodeType":"ExpressionStatement","src":"7700:21:25"},{"assignments":[5743],"declarations":[{"constant":false,"id":5743,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:25","nodeType":"VariableDeclaration","scope":5807,"src":"8056:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5742,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5750,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5745,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"8079:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:25"},{"expression":{"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5751,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"8312:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5753,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"8327:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5754,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"8341:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5758,"nodeType":"ExpressionStatement","src":"8312:36:25"},{"expression":{"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5759,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"8382:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5761,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"8397:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5762,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"8411:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5766,"nodeType":"ExpressionStatement","src":"8382:36:25"},{"expression":{"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5767,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"8454:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5769,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"8469:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5770,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"8483:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5774,"nodeType":"ExpressionStatement","src":"8454:36:25"},{"expression":{"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5775,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"8525:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5777,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"8540:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5778,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"8554:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5782,"nodeType":"ExpressionStatement","src":"8525:36:25"},{"expression":{"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5783,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"8598:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5785,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"8613:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5786,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"8627:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5790,"nodeType":"ExpressionStatement","src":"8598:36:25"},{"expression":{"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5791,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"8672:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5793,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"8687:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5794,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"8701:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5798,"nodeType":"ExpressionStatement","src":"8672:36:25"},{"expression":{"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"9154:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5800,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"9163:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5801,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"9171:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5804,"nodeType":"ExpressionStatement","src":"9154:24:25"},{"expression":{"id":5805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"9199:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5683,"id":5806,"nodeType":"Return","src":"9192:13:25"}]}]},"documentation":{"id":5673,"nodeType":"StructuredDocumentation","src":"4679:312:25","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5809,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:25","nodeType":"FunctionDefinition","parameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5675,"mutability":"mutable","name":"x","nameLocation":"5020:1:25","nodeType":"VariableDeclaration","scope":5809,"src":"5012:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5674,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5677,"mutability":"mutable","name":"y","nameLocation":"5031:1:25","nodeType":"VariableDeclaration","scope":5809,"src":"5023:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5676,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5679,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:25","nodeType":"VariableDeclaration","scope":5809,"src":"5034:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5678,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:25"},"returnParameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"result","nameLocation":"5086:6:25","nodeType":"VariableDeclaration","scope":5809,"src":"5078:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5681,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:25"},"scope":6979,"src":"4996:4226:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5845,"nodeType":"Block","src":"9461:128:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5825,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"9485:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5826,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"9488:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5827,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"9491:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5824,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5809,5846],"referencedDeclaration":5809,"src":"9478:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5832,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"9539:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}],"id":5831,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"9522:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5385_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5835,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"9559:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5836,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"9562:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5837,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"9565:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5834,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:25","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5829,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"9506:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"9506:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5823,"id":5844,"nodeType":"Return","src":"9471:111:25"}]},"documentation":{"id":5810,"nodeType":"StructuredDocumentation","src":"9228:118:25","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5846,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:25","nodeType":"FunctionDefinition","parameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5812,"mutability":"mutable","name":"x","nameLocation":"9375:1:25","nodeType":"VariableDeclaration","scope":5846,"src":"9367:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5811,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5814,"mutability":"mutable","name":"y","nameLocation":"9386:1:25","nodeType":"VariableDeclaration","scope":5846,"src":"9378:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5813,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5816,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:25","nodeType":"VariableDeclaration","scope":5846,"src":"9389:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5815,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5819,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:25","nodeType":"VariableDeclaration","scope":5846,"src":"9410:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"},"typeName":{"id":5818,"nodeType":"UserDefinedTypeName","pathNode":{"id":5817,"name":"Rounding","nameLocations":["9410:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":5385,"src":"9410:8:25"},"referencedDeclaration":5385,"src":"9410:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:25"},"returnParameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5846,"src":"9452:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5821,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:25"},"scope":6979,"src":"9351:238:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5942,"nodeType":"Block","src":"10223:1849:25","statements":[{"id":5941,"nodeType":"UncheckedBlock","src":"10233:1833:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5856,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"10261:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5861,"nodeType":"IfStatement","src":"10257:20:25","trueBody":{"expression":{"hexValue":"30","id":5859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5855,"id":5860,"nodeType":"Return","src":"10269:8:25"}},{"assignments":[5863],"declarations":[{"constant":false,"id":5863,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:25","nodeType":"VariableDeclaration","scope":5941,"src":"10748:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5862,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5867,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5864,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"10768:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5865,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"10772:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:25"},{"assignments":[5869],"declarations":[{"constant":false,"id":5869,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:25","nodeType":"VariableDeclaration","scope":5941,"src":"10787:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5868,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5871,"initialValue":{"id":5870,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"10801:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:25"},{"assignments":[5873],"declarations":[{"constant":false,"id":5873,"mutability":"mutable","name":"x","nameLocation":"10945:1:25","nodeType":"VariableDeclaration","scope":5941,"src":"10938:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5872,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5875,"initialValue":{"hexValue":"30","id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:25"},{"assignments":[5877],"declarations":[{"constant":false,"id":5877,"mutability":"mutable","name":"y","nameLocation":"10971:1:25","nodeType":"VariableDeclaration","scope":5941,"src":"10964:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5876,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5879,"initialValue":{"hexValue":"31","id":5878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:25"},{"body":{"id":5916,"nodeType":"Block","src":"11014:882:25","statements":[{"assignments":[5884],"declarations":[{"constant":false,"id":5884,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:25","nodeType":"VariableDeclaration","scope":5916,"src":"11032:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5883,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5888,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5885,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"11051:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5886,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"11057:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:25"},{"expression":{"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5889,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"11086:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5890,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"11091:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5891,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5892,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"11191:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5893,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"11436:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5894,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"11442:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5895,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"11454:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:25","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5900,"nodeType":"ExpressionStatement","src":"11085:395:25"},{"expression":{"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5901,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"11500:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5902,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"11503:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5903,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5904,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"11585:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5905,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"11839:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5906,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"11843:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5909,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"11854:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5907,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:25","typeDescriptions":{}}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:25","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5915,"nodeType":"ExpressionStatement","src":"11499:382:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5880,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"10998:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5917,"nodeType":"WhileStatement","src":"10991:905:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5918,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"11914:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5923,"nodeType":"IfStatement","src":"11910:22:25","trueBody":{"expression":{"hexValue":"30","id":5921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5855,"id":5922,"nodeType":"Return","src":"11924:8:25"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5925,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"11983:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5928,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"11990:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:25","subExpression":{"id":5931,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"12003:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5929,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:25","typeDescriptions":{}}},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5937,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"12015:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5935,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:25","typeDescriptions":{}}},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5924,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"11975:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5855,"id":5940,"nodeType":"Return","src":"11968:50:25"}]}]},"documentation":{"id":5847,"nodeType":"StructuredDocumentation","src":"9595:553:25","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5943,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:25","nodeType":"FunctionDefinition","parameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5849,"mutability":"mutable","name":"a","nameLocation":"10177:1:25","nodeType":"VariableDeclaration","scope":5943,"src":"10169:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5848,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5851,"mutability":"mutable","name":"n","nameLocation":"10188:1:25","nodeType":"VariableDeclaration","scope":5943,"src":"10180:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5850,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:25"},"returnParameters":{"id":5855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5943,"src":"10214:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5853,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:25"},"scope":6979,"src":"10153:1919:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5963,"nodeType":"Block","src":"12672:82:25","statements":[{"id":5962,"nodeType":"UncheckedBlock","src":"12682:66:25","statements":[{"expression":{"arguments":[{"id":5955,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"12725:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5956,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"12728:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5959,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"12735:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5953,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"12713:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6979_$","typeString":"type(library Math)"}},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:25","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":6000,"src":"12713:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5952,"id":5961,"nodeType":"Return","src":"12706:31:25"}]}]},"documentation":{"id":5944,"nodeType":"StructuredDocumentation","src":"12078:514:25","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5964,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:25","nodeType":"FunctionDefinition","parameters":{"id":5949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5946,"mutability":"mutable","name":"a","nameLocation":"12626:1:25","nodeType":"VariableDeclaration","scope":5964,"src":"12618:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5945,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5948,"mutability":"mutable","name":"p","nameLocation":"12637:1:25","nodeType":"VariableDeclaration","scope":5964,"src":"12629:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5947,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:25"},"returnParameters":{"id":5952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5964,"src":"12663:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5950,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:25"},"scope":6979,"src":"12597:157:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5999,"nodeType":"Block","src":"13524:174:25","statements":[{"assignments":[5977,5979],"declarations":[{"constant":false,"id":5977,"mutability":"mutable","name":"success","nameLocation":"13540:7:25","nodeType":"VariableDeclaration","scope":5999,"src":"13535:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5976,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5979,"mutability":"mutable","name":"result","nameLocation":"13557:6:25","nodeType":"VariableDeclaration","scope":5999,"src":"13549:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5978,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5985,"initialValue":{"arguments":[{"id":5981,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"13577:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5982,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"13580:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5983,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"13583:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5980,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6024,6106],"referencedDeclaration":6024,"src":"13567:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:25"},{"condition":{"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:25","subExpression":{"id":5986,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"13600:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5996,"nodeType":"IfStatement","src":"13595:74:25","trueBody":{"id":5995,"nodeType":"Block","src":"13609:60:25","statements":[{"expression":{"arguments":[{"expression":{"id":5991,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"13635:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3883_$","typeString":"type(library Panic)"}},"id":5992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3850,"src":"13635:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5988,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"13623:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3883_$","typeString":"type(library Panic)"}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3882,"src":"13623:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5994,"nodeType":"ExpressionStatement","src":"13623:35:25"}]}},{"expression":{"id":5997,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"13685:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5975,"id":5998,"nodeType":"Return","src":"13678:13:25"}]},"documentation":{"id":5965,"nodeType":"StructuredDocumentation","src":"12760:678:25","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":6000,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:25","nodeType":"FunctionDefinition","parameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5967,"mutability":"mutable","name":"b","nameLocation":"13467:1:25","nodeType":"VariableDeclaration","scope":6000,"src":"13459:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5966,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5969,"mutability":"mutable","name":"e","nameLocation":"13478:1:25","nodeType":"VariableDeclaration","scope":6000,"src":"13470:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5968,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5971,"mutability":"mutable","name":"m","nameLocation":"13489:1:25","nodeType":"VariableDeclaration","scope":6000,"src":"13481:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5970,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:25"},"returnParameters":{"id":5975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6000,"src":"13515:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5973,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:25"},"scope":6979,"src":"13443:255:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6023,"nodeType":"Block","src":"14552:1493:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6014,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"14566:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6021,"nodeType":"IfStatement","src":"14562:29:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6013,"id":6020,"nodeType":"Return","src":"14574:17:25"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:25","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:25","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:25"},"nodeType":"YulFunctionCall","src":"14651:11:25"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:25","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:25"},"nodeType":"YulFunctionCall","src":"15563:17:25"},"nodeType":"YulExpressionStatement","src":"15563:17:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:25"},"nodeType":"YulFunctionCall","src":"15600:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:25"},"nodeType":"YulFunctionCall","src":"15593:28:25"},"nodeType":"YulExpressionStatement","src":"15593:28:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:25","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:25"},"nodeType":"YulFunctionCall","src":"15641:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:25"},"nodeType":"YulFunctionCall","src":"15634:28:25"},"nodeType":"YulExpressionStatement","src":"15634:28:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:25","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:25"},"nodeType":"YulFunctionCall","src":"15682:14:25"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:25"},"nodeType":"YulFunctionCall","src":"15675:25:25"},"nodeType":"YulExpressionStatement","src":"15675:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:25","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:25"},"nodeType":"YulFunctionCall","src":"15720:14:25"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:25"},"nodeType":"YulFunctionCall","src":"15713:25:25"},"nodeType":"YulExpressionStatement","src":"15713:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:25","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:25"},"nodeType":"YulFunctionCall","src":"15758:14:25"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:25"},"nodeType":"YulFunctionCall","src":"15751:25:25"},"nodeType":"YulExpressionStatement","src":"15751:25:25"},{"nodeType":"YulAssignment","src":"15938:57:25","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:25"},"nodeType":"YulFunctionCall","src":"15960:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:25","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:25","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:25","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:25"},"nodeType":"YulFunctionCall","src":"15949:46:25"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:25"}]},{"nodeType":"YulAssignment","src":"16008:21:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:25","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:25"},"nodeType":"YulFunctionCall","src":"16018:11:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6003,"isOffset":false,"isSlot":false,"src":"15698:1:25","valueSize":1},{"declaration":6005,"isOffset":false,"isSlot":false,"src":"15736:1:25","valueSize":1},{"declaration":6007,"isOffset":false,"isSlot":false,"src":"15774:1:25","valueSize":1},{"declaration":6012,"isOffset":false,"isSlot":false,"src":"16008:6:25","valueSize":1},{"declaration":6010,"isOffset":false,"isSlot":false,"src":"15938:7:25","valueSize":1}],"flags":["memory-safe"],"id":6022,"nodeType":"InlineAssembly","src":"14601:1438:25"}]},"documentation":{"id":6001,"nodeType":"StructuredDocumentation","src":"13704:738:25","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":6024,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:25","nodeType":"FunctionDefinition","parameters":{"id":6008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"b","nameLocation":"14474:1:25","nodeType":"VariableDeclaration","scope":6024,"src":"14466:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6002,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6005,"mutability":"mutable","name":"e","nameLocation":"14485:1:25","nodeType":"VariableDeclaration","scope":6024,"src":"14477:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6004,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6007,"mutability":"mutable","name":"m","nameLocation":"14496:1:25","nodeType":"VariableDeclaration","scope":6024,"src":"14488:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6006,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:25"},"returnParameters":{"id":6013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6010,"mutability":"mutable","name":"success","nameLocation":"14527:7:25","nodeType":"VariableDeclaration","scope":6024,"src":"14522:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6009,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6012,"mutability":"mutable","name":"result","nameLocation":"14544:6:25","nodeType":"VariableDeclaration","scope":6024,"src":"14536:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6011,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:25"},"scope":6979,"src":"14447:1598:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6059,"nodeType":"Block","src":"16242:179:25","statements":[{"assignments":[6037,6039],"declarations":[{"constant":false,"id":6037,"mutability":"mutable","name":"success","nameLocation":"16258:7:25","nodeType":"VariableDeclaration","scope":6059,"src":"16253:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6036,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6039,"mutability":"mutable","name":"result","nameLocation":"16280:6:25","nodeType":"VariableDeclaration","scope":6059,"src":"16267:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6038,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6045,"initialValue":{"arguments":[{"id":6041,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"16300:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6042,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"16303:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6043,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"16306:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6040,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6024,6106],"referencedDeclaration":6106,"src":"16290:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:25"},{"condition":{"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:25","subExpression":{"id":6046,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"16323:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6056,"nodeType":"IfStatement","src":"16318:74:25","trueBody":{"id":6055,"nodeType":"Block","src":"16332:60:25","statements":[{"expression":{"arguments":[{"expression":{"id":6051,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"16358:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3883_$","typeString":"type(library Panic)"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3850,"src":"16358:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6048,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"16346:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3883_$","typeString":"type(library Panic)"}},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3882,"src":"16346:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6054,"nodeType":"ExpressionStatement","src":"16346:35:25"}]}},{"expression":{"id":6057,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"16408:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6035,"id":6058,"nodeType":"Return","src":"16401:13:25"}]},"documentation":{"id":6025,"nodeType":"StructuredDocumentation","src":"16051:85:25","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":6060,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:25","nodeType":"FunctionDefinition","parameters":{"id":6032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6027,"mutability":"mutable","name":"b","nameLocation":"16170:1:25","nodeType":"VariableDeclaration","scope":6060,"src":"16157:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6026,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6029,"mutability":"mutable","name":"e","nameLocation":"16186:1:25","nodeType":"VariableDeclaration","scope":6060,"src":"16173:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6028,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6031,"mutability":"mutable","name":"m","nameLocation":"16202:1:25","nodeType":"VariableDeclaration","scope":6060,"src":"16189:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6030,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:25"},"returnParameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6060,"src":"16228:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6033,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:25"},"scope":6979,"src":"16141:280:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6105,"nodeType":"Block","src":"16675:771:25","statements":[{"condition":{"arguments":[{"id":6075,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"16700:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6074,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"16689:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6084,"nodeType":"IfStatement","src":"16685:47:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6078,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":6073,"id":6083,"nodeType":"Return","src":"16704:28:25"}},{"assignments":[6086],"declarations":[{"constant":false,"id":6086,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:25","nodeType":"VariableDeclaration","scope":6105,"src":"16743:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6085,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6089,"initialValue":{"expression":{"id":6087,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"16758:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:25","memberName":"length","nodeType":"MemberAccess","src":"16758:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:25"},{"expression":{"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6090,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"16848:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6093,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"16874:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:25","memberName":"length","nodeType":"MemberAccess","src":"16874:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6095,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"16884:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:25","memberName":"length","nodeType":"MemberAccess","src":"16884:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6097,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"16894:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6098,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"16900:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6099,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"16903:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6100,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"16906:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6091,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6103,"nodeType":"ExpressionStatement","src":"16848:60:25"},{"AST":{"nodeType":"YulBlock","src":"16944:496:25","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:25","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:25"},"nodeType":"YulFunctionCall","src":"16973:17:25"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:25","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:25","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:25"},"nodeType":"YulFunctionCall","src":"17102:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:25","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:25"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:25"},"nodeType":"YulFunctionCall","src":"17124:13:25"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:25"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:25"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:25"},"nodeType":"YulFunctionCall","src":"17091:62:25"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:25"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:25"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:25"},"nodeType":"YulFunctionCall","src":"17302:20:25"},"nodeType":"YulExpressionStatement","src":"17302:20:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:25","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:25"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:25"},"nodeType":"YulFunctionCall","src":"17411:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:25"},"nodeType":"YulFunctionCall","src":"17398:32:25"},"nodeType":"YulExpressionStatement","src":"17398:32:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":6086,"isOffset":false,"isSlot":false,"src":"17148:4:25","valueSize":1},{"declaration":6086,"isOffset":false,"isSlot":false,"src":"17317:4:25","valueSize":1},{"declaration":6086,"isOffset":false,"isSlot":false,"src":"17424:4:25","valueSize":1},{"declaration":6072,"isOffset":false,"isSlot":false,"src":"16977:6:25","valueSize":1},{"declaration":6072,"isOffset":false,"isSlot":false,"src":"17130:6:25","valueSize":1},{"declaration":6072,"isOffset":false,"isSlot":false,"src":"17309:6:25","valueSize":1},{"declaration":6070,"isOffset":false,"isSlot":false,"src":"17080:7:25","valueSize":1}],"flags":["memory-safe"],"id":6104,"nodeType":"InlineAssembly","src":"16919:521:25"}]},"documentation":{"id":6061,"nodeType":"StructuredDocumentation","src":"16427:88:25","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":6106,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:25","nodeType":"FunctionDefinition","parameters":{"id":6068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6063,"mutability":"mutable","name":"b","nameLocation":"16561:1:25","nodeType":"VariableDeclaration","scope":6106,"src":"16548:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6062,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6065,"mutability":"mutable","name":"e","nameLocation":"16585:1:25","nodeType":"VariableDeclaration","scope":6106,"src":"16572:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6064,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6067,"mutability":"mutable","name":"m","nameLocation":"16609:1:25","nodeType":"VariableDeclaration","scope":6106,"src":"16596:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6066,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:25"},"returnParameters":{"id":6073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6070,"mutability":"mutable","name":"success","nameLocation":"16645:7:25","nodeType":"VariableDeclaration","scope":6106,"src":"16640:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6069,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6072,"mutability":"mutable","name":"result","nameLocation":"16667:6:25","nodeType":"VariableDeclaration","scope":6106,"src":"16654:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6071,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:25"},"scope":6979,"src":"16520:926:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6138,"nodeType":"Block","src":"17601:176:25","statements":[{"body":{"id":6134,"nodeType":"Block","src":"17658:92:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6125,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"17676:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6127,"indexExpression":{"id":6126,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"17686:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6133,"nodeType":"IfStatement","src":"17672:68:25","trueBody":{"id":6132,"nodeType":"Block","src":"17695:45:25","statements":[{"expression":{"hexValue":"66616c7365","id":6130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6113,"id":6131,"nodeType":"Return","src":"17713:12:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"17631:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6119,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"17635:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:25","memberName":"length","nodeType":"MemberAccess","src":"17635:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6135,"initializationExpression":{"assignments":[6115],"declarations":[{"constant":false,"id":6115,"mutability":"mutable","name":"i","nameLocation":"17624:1:25","nodeType":"VariableDeclaration","scope":6135,"src":"17616:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6114,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6117,"initialValue":{"hexValue":"30","id":6116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:25"},"loopExpression":{"expression":{"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:25","subExpression":{"id":6122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"17655:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6124,"nodeType":"ExpressionStatement","src":"17653:3:25"},"nodeType":"ForStatement","src":"17611:139:25"},{"expression":{"hexValue":"74727565","id":6136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6113,"id":6137,"nodeType":"Return","src":"17759:11:25"}]},"documentation":{"id":6107,"nodeType":"StructuredDocumentation","src":"17452:72:25","text":" @dev Returns whether the provided byte array is zero."},"id":6139,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:25","nodeType":"FunctionDefinition","parameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:25","nodeType":"VariableDeclaration","scope":6139,"src":"17549:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6108,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:25"},"returnParameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6139,"src":"17595:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6111,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:25"},"scope":6979,"src":"17529:248:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6357,"nodeType":"Block","src":"18137:5124:25","statements":[{"id":6356,"nodeType":"UncheckedBlock","src":"18147:5108:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6147,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"18241:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6153,"nodeType":"IfStatement","src":"18237:53:25","trueBody":{"id":6152,"nodeType":"Block","src":"18249:41:25","statements":[{"expression":{"id":6150,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"18274:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6146,"id":6151,"nodeType":"Return","src":"18267:8:25"}]}},{"assignments":[6155],"declarations":[{"constant":false,"id":6155,"mutability":"mutable","name":"aa","nameLocation":"19225:2:25","nodeType":"VariableDeclaration","scope":6356,"src":"19217:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6154,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6157,"initialValue":{"id":6156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"19230:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:25"},{"assignments":[6159],"declarations":[{"constant":false,"id":6159,"mutability":"mutable","name":"xn","nameLocation":"19253:2:25","nodeType":"VariableDeclaration","scope":6356,"src":"19245:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6158,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6161,"initialValue":{"hexValue":"31","id":6160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6162,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"19278:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6177,"nodeType":"IfStatement","src":"19274:92:25","trueBody":{"id":6176,"nodeType":"Block","src":"19296:70:25","statements":[{"expression":{"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6168,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"19314:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6171,"nodeType":"ExpressionStatement","src":"19314:10:25"},{"expression":{"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6172,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"19342:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":6173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6175,"nodeType":"ExpressionStatement","src":"19342:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6178,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"19383:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6193,"nodeType":"IfStatement","src":"19379:90:25","trueBody":{"id":6192,"nodeType":"Block","src":"19400:69:25","statements":[{"expression":{"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6184,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"19418:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6187,"nodeType":"ExpressionStatement","src":"19418:9:25"},{"expression":{"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6188,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"19445:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":6189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6191,"nodeType":"ExpressionStatement","src":"19445:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6194,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"19486:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6209,"nodeType":"IfStatement","src":"19482:90:25","trueBody":{"id":6208,"nodeType":"Block","src":"19503:69:25","statements":[{"expression":{"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6200,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"19521:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6203,"nodeType":"ExpressionStatement","src":"19521:9:25"},{"expression":{"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6204,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"19548:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":6205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6207,"nodeType":"ExpressionStatement","src":"19548:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6210,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"19589:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6225,"nodeType":"IfStatement","src":"19585:89:25","trueBody":{"id":6224,"nodeType":"Block","src":"19606:68:25","statements":[{"expression":{"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6216,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"19624:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6219,"nodeType":"ExpressionStatement","src":"19624:9:25"},{"expression":{"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6220,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"19651:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":6221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6223,"nodeType":"ExpressionStatement","src":"19651:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6226,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"19691:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6241,"nodeType":"IfStatement","src":"19687:87:25","trueBody":{"id":6240,"nodeType":"Block","src":"19707:67:25","statements":[{"expression":{"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6232,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"19725:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6235,"nodeType":"ExpressionStatement","src":"19725:8:25"},{"expression":{"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6236,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"19751:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":6237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6239,"nodeType":"ExpressionStatement","src":"19751:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6242,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"19791:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6257,"nodeType":"IfStatement","src":"19787:87:25","trueBody":{"id":6256,"nodeType":"Block","src":"19807:67:25","statements":[{"expression":{"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6248,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"19825:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6251,"nodeType":"ExpressionStatement","src":"19825:8:25"},{"expression":{"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6252,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"19851:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6255,"nodeType":"ExpressionStatement","src":"19851:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6258,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"19891:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6269,"nodeType":"IfStatement","src":"19887:61:25","trueBody":{"id":6268,"nodeType":"Block","src":"19907:41:25","statements":[{"expression":{"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6264,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"19925:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":6265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6267,"nodeType":"ExpressionStatement","src":"19925:8:25"}]}},{"expression":{"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6270,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"20368:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6272,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"20378:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6278,"nodeType":"ExpressionStatement","src":"20368:18:25"},{"expression":{"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6279,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22273:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6280,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22279:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"22284:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6282,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22288:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6289,"nodeType":"ExpressionStatement","src":"22273:23:25"},{"expression":{"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6290,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22382:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22388:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6292,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"22393:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6293,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22397:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6300,"nodeType":"ExpressionStatement","src":"22382:23:25"},{"expression":{"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6301,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22493:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6302,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22499:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6303,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"22504:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6304,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22508:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6311,"nodeType":"ExpressionStatement","src":"22493:23:25"},{"expression":{"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6312,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22602:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6313,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22608:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6314,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"22613:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6315,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22617:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6322,"nodeType":"ExpressionStatement","src":"22602:23:25"},{"expression":{"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6323,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22712:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6324,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22718:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6325,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"22723:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6326,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22727:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6333,"nodeType":"ExpressionStatement","src":"22712:23:25"},{"expression":{"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6334,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22822:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6335,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22828:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6336,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"22833:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6337,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"22837:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6344,"nodeType":"ExpressionStatement","src":"22822:23:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6345,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"23211:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6348,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"23232:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"23237:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6350,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"23241:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6346,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"23216:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"23216:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6146,"id":6355,"nodeType":"Return","src":"23204:40:25"}]}]},"documentation":{"id":6140,"nodeType":"StructuredDocumentation","src":"17783:292:25","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":6358,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:25","nodeType":"FunctionDefinition","parameters":{"id":6143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6142,"mutability":"mutable","name":"a","nameLocation":"18102:1:25","nodeType":"VariableDeclaration","scope":6358,"src":"18094:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6141,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:25"},"returnParameters":{"id":6146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6358,"src":"18128:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6144,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:25"},"scope":6979,"src":"18080:5181:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6391,"nodeType":"Block","src":"23434:171:25","statements":[{"id":6390,"nodeType":"UncheckedBlock","src":"23444:155:25","statements":[{"assignments":[6370],"declarations":[{"constant":false,"id":6370,"mutability":"mutable","name":"result","nameLocation":"23476:6:25","nodeType":"VariableDeclaration","scope":6390,"src":"23468:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6369,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6374,"initialValue":{"arguments":[{"id":6372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"23490:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6371,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6358,6392],"referencedDeclaration":6358,"src":"23485:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"23513:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6379,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"23555:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}],"id":6378,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"23538:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5385_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"23568:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"23577:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"23586:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6376,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"23522:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"23522:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6368,"id":6389,"nodeType":"Return","src":"23506:82:25"}]}]},"documentation":{"id":6359,"nodeType":"StructuredDocumentation","src":"23267:86:25","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":6392,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:25","nodeType":"FunctionDefinition","parameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6361,"mutability":"mutable","name":"a","nameLocation":"23380:1:25","nodeType":"VariableDeclaration","scope":6392,"src":"23372:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6360,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6364,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:25","nodeType":"VariableDeclaration","scope":6392,"src":"23383:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"},"typeName":{"id":6363,"nodeType":"UserDefinedTypeName","pathNode":{"id":6362,"name":"Rounding","nameLocations":["23383:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":5385,"src":"23383:8:25"},"referencedDeclaration":5385,"src":"23383:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:25"},"returnParameters":{"id":6368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6392,"src":"23425:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6366,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:25"},"scope":6979,"src":"23358:247:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6587,"nodeType":"Block","src":"23796:981:25","statements":[{"assignments":[6401],"declarations":[{"constant":false,"id":6401,"mutability":"mutable","name":"result","nameLocation":"23814:6:25","nodeType":"VariableDeclaration","scope":6587,"src":"23806:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6400,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6403,"initialValue":{"hexValue":"30","id":6402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:25"},{"assignments":[6405],"declarations":[{"constant":false,"id":6405,"mutability":"mutable","name":"exp","nameLocation":"23842:3:25","nodeType":"VariableDeclaration","scope":6587,"src":"23834:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6404,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6406,"nodeType":"VariableDeclarationStatement","src":"23834:11:25"},{"id":6584,"nodeType":"UncheckedBlock","src":"23855:893:25","statements":[{"expression":{"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6407,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"23879:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":6408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"23907:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":6417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6415,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6409,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"23891:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"23891:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6422,"nodeType":"ExpressionStatement","src":"23879:51:25"},{"expression":{"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"23944:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6424,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"23954:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6426,"nodeType":"ExpressionStatement","src":"23944:13:25"},{"expression":{"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"23971:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6428,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"23981:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6430,"nodeType":"ExpressionStatement","src":"23971:13:25"},{"expression":{"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6431,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"23999:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":6432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24026:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":6441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6433,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"24010:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"24010:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6446,"nodeType":"ExpressionStatement","src":"23999:49:25"},{"expression":{"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24062:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6448,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24072:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6450,"nodeType":"ExpressionStatement","src":"24062:13:25"},{"expression":{"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"24089:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6452,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24099:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6454,"nodeType":"ExpressionStatement","src":"24089:13:25"},{"expression":{"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6455,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24117:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":6456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24144:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":6465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6457,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"24128:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"24128:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6470,"nodeType":"ExpressionStatement","src":"24117:49:25"},{"expression":{"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24180:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6472,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24190:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6474,"nodeType":"ExpressionStatement","src":"24180:13:25"},{"expression":{"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6475,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"24207:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6476,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24217:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6478,"nodeType":"ExpressionStatement","src":"24207:13:25"},{"expression":{"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6479,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24235:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":6480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24262:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":6489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:25","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6481,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"24246:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"24246:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6494,"nodeType":"ExpressionStatement","src":"24235:49:25"},{"expression":{"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24298:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6496,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24308:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6498,"nodeType":"ExpressionStatement","src":"24298:13:25"},{"expression":{"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6499,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"24325:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6500,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24335:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6502,"nodeType":"ExpressionStatement","src":"24325:13:25"},{"expression":{"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6503,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24353:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":6504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24379:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":6513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6505,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"24363:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"24363:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6518,"nodeType":"ExpressionStatement","src":"24353:47:25"},{"expression":{"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24414:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6520,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24424:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6522,"nodeType":"ExpressionStatement","src":"24414:13:25"},{"expression":{"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"24441:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6524,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24451:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6526,"nodeType":"ExpressionStatement","src":"24441:13:25"},{"expression":{"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6527,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24469:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":6528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24495:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":6537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:25","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6529,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"24479:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"24479:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6542,"nodeType":"ExpressionStatement","src":"24469:47:25"},{"expression":{"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24530:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6544,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24540:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6546,"nodeType":"ExpressionStatement","src":"24530:13:25"},{"expression":{"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6547,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"24557:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6548,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24567:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6550,"nodeType":"ExpressionStatement","src":"24557:13:25"},{"expression":{"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6551,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24585:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24611:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":6561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6553,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"24595:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"24595:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6566,"nodeType":"ExpressionStatement","src":"24585:47:25"},{"expression":{"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24646:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":6568,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24656:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6570,"nodeType":"ExpressionStatement","src":"24646:13:25"},{"expression":{"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6571,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"24673:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6572,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"24683:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6574,"nodeType":"ExpressionStatement","src":"24673:13:25"},{"expression":{"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6575,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"24701:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"24727:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":6579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6576,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"24711:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"24711:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6583,"nodeType":"ExpressionStatement","src":"24701:36:25"}]},{"expression":{"id":6585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"24764:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6399,"id":6586,"nodeType":"Return","src":"24757:13:25"}]},"documentation":{"id":6393,"nodeType":"StructuredDocumentation","src":"23611:119:25","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6588,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:25","nodeType":"FunctionDefinition","parameters":{"id":6396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"value","nameLocation":"23757:5:25","nodeType":"VariableDeclaration","scope":6588,"src":"23749:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6394,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:25"},"returnParameters":{"id":6399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6588,"src":"23787:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6397,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:25"},"scope":6979,"src":"23735:1042:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6621,"nodeType":"Block","src":"25010:175:25","statements":[{"id":6620,"nodeType":"UncheckedBlock","src":"25020:159:25","statements":[{"assignments":[6600],"declarations":[{"constant":false,"id":6600,"mutability":"mutable","name":"result","nameLocation":"25052:6:25","nodeType":"VariableDeclaration","scope":6620,"src":"25044:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6599,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6604,"initialValue":{"arguments":[{"id":6602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"25066:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6601,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6588,6622],"referencedDeclaration":6588,"src":"25061:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"25093:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6609,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"25135:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}],"id":6608,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"25118:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5385_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"25153:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"25162:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6606,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"25102:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"25102:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6598,"id":6619,"nodeType":"Return","src":"25086:82:25"}]}]},"documentation":{"id":6589,"nodeType":"StructuredDocumentation","src":"24783:142:25","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6622,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:25","nodeType":"FunctionDefinition","parameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6591,"mutability":"mutable","name":"value","nameLocation":"24952:5:25","nodeType":"VariableDeclaration","scope":6622,"src":"24944:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6590,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6594,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:25","nodeType":"VariableDeclaration","scope":6622,"src":"24959:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"},"typeName":{"id":6593,"nodeType":"UserDefinedTypeName","pathNode":{"id":6592,"name":"Rounding","nameLocations":["24959:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":5385,"src":"24959:8:25"},"referencedDeclaration":5385,"src":"24959:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:25"},"returnParameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6622,"src":"25001:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6596,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:25"},"scope":6979,"src":"24930:255:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6750,"nodeType":"Block","src":"25378:854:25","statements":[{"assignments":[6631],"declarations":[{"constant":false,"id":6631,"mutability":"mutable","name":"result","nameLocation":"25396:6:25","nodeType":"VariableDeclaration","scope":6750,"src":"25388:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6630,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6633,"initialValue":{"hexValue":"30","id":6632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:25"},{"id":6747,"nodeType":"UncheckedBlock","src":"25416:787:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"25444:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6650,"nodeType":"IfStatement","src":"25440:103:25","trueBody":{"id":6649,"nodeType":"Block","src":"25463:80:25","statements":[{"expression":{"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"25481:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6644,"nodeType":"ExpressionStatement","src":"25481:17:25"},{"expression":{"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"25516:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6648,"nodeType":"ExpressionStatement","src":"25516:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"25560:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6667,"nodeType":"IfStatement","src":"25556:103:25","trueBody":{"id":6666,"nodeType":"Block","src":"25579:80:25","statements":[{"expression":{"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"25597:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6661,"nodeType":"ExpressionStatement","src":"25597:17:25"},{"expression":{"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"25632:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6665,"nodeType":"ExpressionStatement","src":"25632:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"25676:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6684,"nodeType":"IfStatement","src":"25672:103:25","trueBody":{"id":6683,"nodeType":"Block","src":"25695:80:25","statements":[{"expression":{"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"25713:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6678,"nodeType":"ExpressionStatement","src":"25713:17:25"},{"expression":{"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6679,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"25748:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6682,"nodeType":"ExpressionStatement","src":"25748:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"25792:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6701,"nodeType":"IfStatement","src":"25788:100:25","trueBody":{"id":6700,"nodeType":"Block","src":"25810:78:25","statements":[{"expression":{"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"25828:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6695,"nodeType":"ExpressionStatement","src":"25828:16:25"},{"expression":{"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6696,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"25862:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6699,"nodeType":"ExpressionStatement","src":"25862:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"25905:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6718,"nodeType":"IfStatement","src":"25901:100:25","trueBody":{"id":6717,"nodeType":"Block","src":"25923:78:25","statements":[{"expression":{"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"25941:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6712,"nodeType":"ExpressionStatement","src":"25941:16:25"},{"expression":{"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"25975:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6716,"nodeType":"ExpressionStatement","src":"25975:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"26018:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6735,"nodeType":"IfStatement","src":"26014:100:25","trueBody":{"id":6734,"nodeType":"Block","src":"26036:78:25","statements":[{"expression":{"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"26054:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6729,"nodeType":"ExpressionStatement","src":"26054:16:25"},{"expression":{"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"26088:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6733,"nodeType":"ExpressionStatement","src":"26088:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"26131:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6746,"nodeType":"IfStatement","src":"26127:66:25","trueBody":{"id":6745,"nodeType":"Block","src":"26149:44:25","statements":[{"expression":{"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6741,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"26167:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6744,"nodeType":"ExpressionStatement","src":"26167:11:25"}]}}]},{"expression":{"id":6748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"26219:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6629,"id":6749,"nodeType":"Return","src":"26212:13:25"}]},"documentation":{"id":6623,"nodeType":"StructuredDocumentation","src":"25191:120:25","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6751,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:25","nodeType":"FunctionDefinition","parameters":{"id":6626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6625,"mutability":"mutable","name":"value","nameLocation":"25339:5:25","nodeType":"VariableDeclaration","scope":6751,"src":"25331:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6624,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:25"},"returnParameters":{"id":6629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6751,"src":"25369:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6627,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:25"},"scope":6979,"src":"25316:916:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6784,"nodeType":"Block","src":"26467:177:25","statements":[{"id":6783,"nodeType":"UncheckedBlock","src":"26477:161:25","statements":[{"assignments":[6763],"declarations":[{"constant":false,"id":6763,"mutability":"mutable","name":"result","nameLocation":"26509:6:25","nodeType":"VariableDeclaration","scope":6783,"src":"26501:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6762,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6767,"initialValue":{"arguments":[{"id":6765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"26524:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6764,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6751,6785],"referencedDeclaration":6751,"src":"26518:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6768,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"26551:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6772,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"26593:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}],"id":6771,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"26576:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5385_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"26612:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"26621:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6769,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"26560:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"26560:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6761,"id":6782,"nodeType":"Return","src":"26544:83:25"}]}]},"documentation":{"id":6752,"nodeType":"StructuredDocumentation","src":"26238:143:25","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6785,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:25","nodeType":"FunctionDefinition","parameters":{"id":6758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6754,"mutability":"mutable","name":"value","nameLocation":"26409:5:25","nodeType":"VariableDeclaration","scope":6785,"src":"26401:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6753,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6757,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:25","nodeType":"VariableDeclaration","scope":6785,"src":"26416:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"},"typeName":{"id":6756,"nodeType":"UserDefinedTypeName","pathNode":{"id":6755,"name":"Rounding","nameLocations":["26416:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":5385,"src":"26416:8:25"},"referencedDeclaration":5385,"src":"26416:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:25"},"returnParameters":{"id":6761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6785,"src":"26458:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6759,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:25"},"scope":6979,"src":"26386:258:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6921,"nodeType":"Block","src":"26964:674:25","statements":[{"assignments":[6794],"declarations":[{"constant":false,"id":6794,"mutability":"mutable","name":"result","nameLocation":"26982:6:25","nodeType":"VariableDeclaration","scope":6921,"src":"26974:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6793,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6796,"initialValue":{"hexValue":"30","id":6795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:25"},{"assignments":[6798],"declarations":[{"constant":false,"id":6798,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:25","nodeType":"VariableDeclaration","scope":6921,"src":"27002:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6797,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6799,"nodeType":"VariableDeclarationStatement","src":"27002:12:25"},{"id":6918,"nodeType":"UncheckedBlock","src":"27024:585:25","statements":[{"expression":{"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6800,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"27048:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"27071:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":6809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6807,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6801,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"27055:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"27055:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6813,"nodeType":"ExpressionStatement","src":"27048:46:25"},{"expression":{"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"27108:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6815,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"27118:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":6816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6819,"nodeType":"ExpressionStatement","src":"27108:20:25"},{"expression":{"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6820,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"27142:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6821,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"27152:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":6822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6825,"nodeType":"ExpressionStatement","src":"27142:19:25"},{"expression":{"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6826,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"27176:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"27199:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":6835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6827,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"27183:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"27183:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6839,"nodeType":"ExpressionStatement","src":"27176:45:25"},{"expression":{"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"27235:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6841,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"27245:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":6842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6845,"nodeType":"ExpressionStatement","src":"27235:19:25"},{"expression":{"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6846,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"27268:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6847,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"27278:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":6848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6851,"nodeType":"ExpressionStatement","src":"27268:18:25"},{"expression":{"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6852,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"27301:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"27324:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":6861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6853,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"27308:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"27308:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6865,"nodeType":"ExpressionStatement","src":"27301:45:25"},{"expression":{"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"27360:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6867,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"27370:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":6868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6871,"nodeType":"ExpressionStatement","src":"27360:19:25"},{"expression":{"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6872,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"27393:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6873,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"27403:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":6874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6877,"nodeType":"ExpressionStatement","src":"27393:18:25"},{"expression":{"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6878,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"27426:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"27449:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":6887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:25","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6879,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"27433:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"27433:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6891,"nodeType":"ExpressionStatement","src":"27426:45:25"},{"expression":{"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"27485:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6893,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"27495:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":6894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6897,"nodeType":"ExpressionStatement","src":"27485:19:25"},{"expression":{"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"27518:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6899,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"27528:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6903,"nodeType":"ExpressionStatement","src":"27518:18:25"},{"expression":{"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6904,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"27551:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"27577:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":6913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6905,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"27561:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"27561:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6917,"nodeType":"ExpressionStatement","src":"27551:47:25"}]},{"expression":{"id":6919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"27625:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6792,"id":6920,"nodeType":"Return","src":"27618:13:25"}]},"documentation":{"id":6786,"nodeType":"StructuredDocumentation","src":"26650:246:25","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6922,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:25","nodeType":"FunctionDefinition","parameters":{"id":6789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6788,"mutability":"mutable","name":"value","nameLocation":"26925:5:25","nodeType":"VariableDeclaration","scope":6922,"src":"26917:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6787,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:25"},"returnParameters":{"id":6792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6922,"src":"26955:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6790,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:25"},"scope":6979,"src":"26901:737:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6958,"nodeType":"Block","src":"27875:184:25","statements":[{"id":6957,"nodeType":"UncheckedBlock","src":"27885:168:25","statements":[{"assignments":[6934],"declarations":[{"constant":false,"id":6934,"mutability":"mutable","name":"result","nameLocation":"27917:6:25","nodeType":"VariableDeclaration","scope":6957,"src":"27909:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6933,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6938,"initialValue":{"arguments":[{"id":6936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"27933:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6935,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6922,6959],"referencedDeclaration":6922,"src":"27926:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6939,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"27960:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6943,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"28002:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}],"id":6942,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"27985:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5385_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6946,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"28021:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"28036:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6940,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"27969:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"27969:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6932,"id":6956,"nodeType":"Return","src":"27953:89:25"}]}]},"documentation":{"id":6923,"nodeType":"StructuredDocumentation","src":"27644:144:25","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6959,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:25","nodeType":"FunctionDefinition","parameters":{"id":6929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6925,"mutability":"mutable","name":"value","nameLocation":"27817:5:25","nodeType":"VariableDeclaration","scope":6959,"src":"27809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6924,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6928,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:25","nodeType":"VariableDeclaration","scope":6959,"src":"27824:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"},"typeName":{"id":6927,"nodeType":"UserDefinedTypeName","pathNode":{"id":6926,"name":"Rounding","nameLocations":["27824:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":5385,"src":"27824:8:25"},"referencedDeclaration":5385,"src":"27824:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:25"},"returnParameters":{"id":6932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6959,"src":"27866:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6930,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:25"},"scope":6979,"src":"27793:266:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6977,"nodeType":"Block","src":"28257:48:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6970,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6963,"src":"28280:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}],"id":6969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6968,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:25","typeDescriptions":{}}},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6967,"id":6976,"nodeType":"Return","src":"28267:31:25"}]},"documentation":{"id":6960,"nodeType":"StructuredDocumentation","src":"28065:113:25","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6978,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:25","nodeType":"FunctionDefinition","parameters":{"id":6964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6963,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:25","nodeType":"VariableDeclaration","scope":6978,"src":"28209:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"},"typeName":{"id":6962,"nodeType":"UserDefinedTypeName","pathNode":{"id":6961,"name":"Rounding","nameLocations":["28209:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":5385,"src":"28209:8:25"},"referencedDeclaration":5385,"src":"28209:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5385","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:25"},"returnParameters":{"id":6967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6978,"src":"28251:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6965,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:25"},"scope":6979,"src":"28183:122:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6980,"src":"281:28026:25","usedErrors":[],"usedEvents":[]}],"src":"103:28205:25"},"id":25},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8744]},"id":8745,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6981,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6982,"nodeType":"StructuredDocumentation","src":"218:550:26","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8744,"linearizedBaseContracts":[8744],"name":"SafeCast","nameLocation":"777:8:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6983,"nodeType":"StructuredDocumentation","src":"792:68:26","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6989,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:26","nodeType":"ErrorDefinition","parameters":{"id":6988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6985,"mutability":"mutable","name":"bits","nameLocation":"908:4:26","nodeType":"VariableDeclaration","scope":6989,"src":"902:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6984,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6987,"mutability":"mutable","name":"value","nameLocation":"922:5:26","nodeType":"VariableDeclaration","scope":6989,"src":"914:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6986,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:26"},"src":"865:64:26"},{"documentation":{"id":6990,"nodeType":"StructuredDocumentation","src":"935:75:26","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6994,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:26","nodeType":"ErrorDefinition","parameters":{"id":6993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6992,"mutability":"mutable","name":"value","nameLocation":"1056:5:26","nodeType":"VariableDeclaration","scope":6994,"src":"1049:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6991,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:26"},"src":"1015:48:26"},{"documentation":{"id":6995,"nodeType":"StructuredDocumentation","src":"1069:67:26","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":7001,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:26","nodeType":"ErrorDefinition","parameters":{"id":7000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6997,"mutability":"mutable","name":"bits","nameLocation":"1183:4:26","nodeType":"VariableDeclaration","scope":7001,"src":"1177:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6996,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6999,"mutability":"mutable","name":"value","nameLocation":"1196:5:26","nodeType":"VariableDeclaration","scope":7001,"src":"1189:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6998,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:26"},"src":"1141:62:26"},{"documentation":{"id":7002,"nodeType":"StructuredDocumentation","src":"1209:75:26","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":7006,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:26","nodeType":"ErrorDefinition","parameters":{"id":7005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7004,"mutability":"mutable","name":"value","nameLocation":"1331:5:26","nodeType":"VariableDeclaration","scope":7006,"src":"1323:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:26"},"src":"1289:49:26"},{"body":{"id":7033,"nodeType":"Block","src":"1695:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"1709:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7016,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":7015,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":7019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:26","memberName":"max","nodeType":"MemberAccess","src":"1717:17:26","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7027,"nodeType":"IfStatement","src":"1705:105:26","trueBody":{"id":7026,"nodeType":"Block","src":"1736:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:26","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"1793:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7021,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"1757:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7025,"nodeType":"RevertStatement","src":"1750:49:26"}]}},{"expression":{"arguments":[{"id":7030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"1834:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7028,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:26","typeDescriptions":{}}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":7013,"id":7032,"nodeType":"Return","src":"1819:21:26"}]},"documentation":{"id":7007,"nodeType":"StructuredDocumentation","src":"1344:280:26","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7034,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:26","nodeType":"FunctionDefinition","parameters":{"id":7010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7009,"mutability":"mutable","name":"value","nameLocation":"1656:5:26","nodeType":"VariableDeclaration","scope":7034,"src":"1648:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7008,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:26"},"returnParameters":{"id":7013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7034,"src":"1686:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":7011,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:26","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:26"},"scope":8744,"src":"1629:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7061,"nodeType":"Block","src":"2204:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"2218:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7044,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":7043,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":7047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:26","memberName":"max","nodeType":"MemberAccess","src":"2226:17:26","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7055,"nodeType":"IfStatement","src":"2214:105:26","trueBody":{"id":7054,"nodeType":"Block","src":"2245:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:26","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"2302:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7049,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"2266:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7053,"nodeType":"RevertStatement","src":"2259:49:26"}]}},{"expression":{"arguments":[{"id":7058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"2343:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7056,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:26","typeDescriptions":{}}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":7041,"id":7060,"nodeType":"Return","src":"2328:21:26"}]},"documentation":{"id":7035,"nodeType":"StructuredDocumentation","src":"1853:280:26","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7062,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:26","nodeType":"FunctionDefinition","parameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"value","nameLocation":"2165:5:26","nodeType":"VariableDeclaration","scope":7062,"src":"2157:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:26"},"returnParameters":{"id":7041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7062,"src":"2195:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":7039,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:26","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:26"},"scope":8744,"src":"2138:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7089,"nodeType":"Block","src":"2713:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"2727:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7072,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":7071,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:26","memberName":"max","nodeType":"MemberAccess","src":"2735:17:26","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7083,"nodeType":"IfStatement","src":"2723:105:26","trueBody":{"id":7082,"nodeType":"Block","src":"2754:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:26","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"2811:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7077,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"2775:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7081,"nodeType":"RevertStatement","src":"2768:49:26"}]}},{"expression":{"arguments":[{"id":7086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"2852:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7084,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:26","typeDescriptions":{}}},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":7069,"id":7088,"nodeType":"Return","src":"2837:21:26"}]},"documentation":{"id":7063,"nodeType":"StructuredDocumentation","src":"2362:280:26","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7090,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:26","nodeType":"FunctionDefinition","parameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7065,"mutability":"mutable","name":"value","nameLocation":"2674:5:26","nodeType":"VariableDeclaration","scope":7090,"src":"2666:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7064,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:26"},"returnParameters":{"id":7069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7090,"src":"2704:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":7067,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:26","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:26"},"scope":8744,"src":"2647:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7117,"nodeType":"Block","src":"3222:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"3236:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7100,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":7099,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":7103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:26","memberName":"max","nodeType":"MemberAccess","src":"3244:17:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7111,"nodeType":"IfStatement","src":"3232:105:26","trueBody":{"id":7110,"nodeType":"Block","src":"3263:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:26","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"3320:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7105,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3284:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7109,"nodeType":"RevertStatement","src":"3277:49:26"}]}},{"expression":{"arguments":[{"id":7114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"3361:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7112,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:26","typeDescriptions":{}}},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7097,"id":7116,"nodeType":"Return","src":"3346:21:26"}]},"documentation":{"id":7091,"nodeType":"StructuredDocumentation","src":"2871:280:26","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7118,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:26","nodeType":"FunctionDefinition","parameters":{"id":7094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7093,"mutability":"mutable","name":"value","nameLocation":"3183:5:26","nodeType":"VariableDeclaration","scope":7118,"src":"3175:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7092,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:26"},"returnParameters":{"id":7097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7118,"src":"3213:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7095,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:26"},"scope":8744,"src":"3156:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7145,"nodeType":"Block","src":"3731:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"3745:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7128,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":7127,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":7131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:26","memberName":"max","nodeType":"MemberAccess","src":"3753:17:26","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7139,"nodeType":"IfStatement","src":"3741:105:26","trueBody":{"id":7138,"nodeType":"Block","src":"3772:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:26","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"3829:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7133,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3793:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7137,"nodeType":"RevertStatement","src":"3786:49:26"}]}},{"expression":{"arguments":[{"id":7142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"3870:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7140,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:26","typeDescriptions":{}}},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":7125,"id":7144,"nodeType":"Return","src":"3855:21:26"}]},"documentation":{"id":7119,"nodeType":"StructuredDocumentation","src":"3380:280:26","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7146,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:26","nodeType":"FunctionDefinition","parameters":{"id":7122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7121,"mutability":"mutable","name":"value","nameLocation":"3692:5:26","nodeType":"VariableDeclaration","scope":7146,"src":"3684:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7120,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:26"},"returnParameters":{"id":7125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7146,"src":"3722:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":7123,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:26","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:26"},"scope":8744,"src":"3665:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7173,"nodeType":"Block","src":"4240:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"4254:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7156,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":7155,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:26","memberName":"max","nodeType":"MemberAccess","src":"4262:17:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7167,"nodeType":"IfStatement","src":"4250:105:26","trueBody":{"id":7166,"nodeType":"Block","src":"4281:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:26","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"4338:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7161,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4302:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7165,"nodeType":"RevertStatement","src":"4295:49:26"}]}},{"expression":{"arguments":[{"id":7170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"4379:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7168,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:26","typeDescriptions":{}}},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7153,"id":7172,"nodeType":"Return","src":"4364:21:26"}]},"documentation":{"id":7147,"nodeType":"StructuredDocumentation","src":"3889:280:26","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7174,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:26","nodeType":"FunctionDefinition","parameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"value","nameLocation":"4201:5:26","nodeType":"VariableDeclaration","scope":7174,"src":"4193:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7148,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:26"},"returnParameters":{"id":7153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7174,"src":"4231:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7151,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:26"},"scope":8744,"src":"4174:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7201,"nodeType":"Block","src":"4749:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"4763:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7184,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":7183,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":7187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:26","memberName":"max","nodeType":"MemberAccess","src":"4771:17:26","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7195,"nodeType":"IfStatement","src":"4759:105:26","trueBody":{"id":7194,"nodeType":"Block","src":"4790:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:26","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"4847:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7189,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4811:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7193,"nodeType":"RevertStatement","src":"4804:49:26"}]}},{"expression":{"arguments":[{"id":7198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"4888:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7196,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:26","typeDescriptions":{}}},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":7181,"id":7200,"nodeType":"Return","src":"4873:21:26"}]},"documentation":{"id":7175,"nodeType":"StructuredDocumentation","src":"4398:280:26","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7202,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:26","nodeType":"FunctionDefinition","parameters":{"id":7178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7177,"mutability":"mutable","name":"value","nameLocation":"4710:5:26","nodeType":"VariableDeclaration","scope":7202,"src":"4702:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7176,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:26"},"returnParameters":{"id":7181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7202,"src":"4740:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":7179,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:26","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:26"},"scope":8744,"src":"4683:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7229,"nodeType":"Block","src":"5258:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"5272:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7212,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":7211,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":7215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:26","memberName":"max","nodeType":"MemberAccess","src":"5280:17:26","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7223,"nodeType":"IfStatement","src":"5268:105:26","trueBody":{"id":7222,"nodeType":"Block","src":"5299:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:26","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"5356:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7217,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"5320:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7221,"nodeType":"RevertStatement","src":"5313:49:26"}]}},{"expression":{"arguments":[{"id":7226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"5397:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7224,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:26","typeDescriptions":{}}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":7209,"id":7228,"nodeType":"Return","src":"5382:21:26"}]},"documentation":{"id":7203,"nodeType":"StructuredDocumentation","src":"4907:280:26","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7230,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:26","nodeType":"FunctionDefinition","parameters":{"id":7206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7205,"mutability":"mutable","name":"value","nameLocation":"5219:5:26","nodeType":"VariableDeclaration","scope":7230,"src":"5211:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7204,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:26"},"returnParameters":{"id":7209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7230,"src":"5249:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":7207,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:26","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:26"},"scope":8744,"src":"5192:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7257,"nodeType":"Block","src":"5767:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"5781:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7240,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":7239,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":7243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:26","memberName":"max","nodeType":"MemberAccess","src":"5789:17:26","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7251,"nodeType":"IfStatement","src":"5777:105:26","trueBody":{"id":7250,"nodeType":"Block","src":"5808:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:26","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"5865:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7245,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"5829:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7249,"nodeType":"RevertStatement","src":"5822:49:26"}]}},{"expression":{"arguments":[{"id":7254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"5906:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7252,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:26","typeDescriptions":{}}},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":7237,"id":7256,"nodeType":"Return","src":"5891:21:26"}]},"documentation":{"id":7231,"nodeType":"StructuredDocumentation","src":"5416:280:26","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7258,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:26","nodeType":"FunctionDefinition","parameters":{"id":7234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7233,"mutability":"mutable","name":"value","nameLocation":"5728:5:26","nodeType":"VariableDeclaration","scope":7258,"src":"5720:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7232,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:26"},"returnParameters":{"id":7237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7258,"src":"5758:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":7235,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:26","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:26"},"scope":8744,"src":"5701:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7285,"nodeType":"Block","src":"6276:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"6290:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7268,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":7267,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":7271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:26","memberName":"max","nodeType":"MemberAccess","src":"6298:17:26","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7279,"nodeType":"IfStatement","src":"6286:105:26","trueBody":{"id":7278,"nodeType":"Block","src":"6317:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:26","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"6374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7273,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"6338:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7277,"nodeType":"RevertStatement","src":"6331:49:26"}]}},{"expression":{"arguments":[{"id":7282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"6415:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7280,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:26","typeDescriptions":{}}},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":7265,"id":7284,"nodeType":"Return","src":"6400:21:26"}]},"documentation":{"id":7259,"nodeType":"StructuredDocumentation","src":"5925:280:26","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7286,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:26","nodeType":"FunctionDefinition","parameters":{"id":7262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7261,"mutability":"mutable","name":"value","nameLocation":"6237:5:26","nodeType":"VariableDeclaration","scope":7286,"src":"6229:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7260,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:26"},"returnParameters":{"id":7265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7286,"src":"6267:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":7263,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:26","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:26"},"scope":8744,"src":"6210:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7313,"nodeType":"Block","src":"6785:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"6799:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7296,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":7295,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":7299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:26","memberName":"max","nodeType":"MemberAccess","src":"6807:17:26","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7307,"nodeType":"IfStatement","src":"6795:105:26","trueBody":{"id":7306,"nodeType":"Block","src":"6826:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:26","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"6883:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7301,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"6847:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7305,"nodeType":"RevertStatement","src":"6840:49:26"}]}},{"expression":{"arguments":[{"id":7310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"6924:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7308,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:26","typeDescriptions":{}}},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":7293,"id":7312,"nodeType":"Return","src":"6909:21:26"}]},"documentation":{"id":7287,"nodeType":"StructuredDocumentation","src":"6434:280:26","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7314,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:26","nodeType":"FunctionDefinition","parameters":{"id":7290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7289,"mutability":"mutable","name":"value","nameLocation":"6746:5:26","nodeType":"VariableDeclaration","scope":7314,"src":"6738:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7288,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:26"},"returnParameters":{"id":7293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7314,"src":"6776:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":7291,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:26","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:26"},"scope":8744,"src":"6719:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7341,"nodeType":"Block","src":"7294:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"7308:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7324,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":7323,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":7327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:26","memberName":"max","nodeType":"MemberAccess","src":"7316:17:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7335,"nodeType":"IfStatement","src":"7304:105:26","trueBody":{"id":7334,"nodeType":"Block","src":"7335:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:26","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"7392:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7329,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"7356:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7333,"nodeType":"RevertStatement","src":"7349:49:26"}]}},{"expression":{"arguments":[{"id":7338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"7433:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7336,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:26","typeDescriptions":{}}},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7321,"id":7340,"nodeType":"Return","src":"7418:21:26"}]},"documentation":{"id":7315,"nodeType":"StructuredDocumentation","src":"6943:280:26","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7342,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:26","nodeType":"FunctionDefinition","parameters":{"id":7318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7317,"mutability":"mutable","name":"value","nameLocation":"7255:5:26","nodeType":"VariableDeclaration","scope":7342,"src":"7247:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7316,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:26"},"returnParameters":{"id":7321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7342,"src":"7285:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7319,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:26"},"scope":8744,"src":"7228:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7369,"nodeType":"Block","src":"7803:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"7817:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7352,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":7351,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":7355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:26","memberName":"max","nodeType":"MemberAccess","src":"7825:17:26","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7363,"nodeType":"IfStatement","src":"7813:105:26","trueBody":{"id":7362,"nodeType":"Block","src":"7844:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:26","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"7901:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7357,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"7865:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7361,"nodeType":"RevertStatement","src":"7858:49:26"}]}},{"expression":{"arguments":[{"id":7366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"7942:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7364,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:26","typeDescriptions":{}}},"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":7349,"id":7368,"nodeType":"Return","src":"7927:21:26"}]},"documentation":{"id":7343,"nodeType":"StructuredDocumentation","src":"7452:280:26","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7370,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:26","nodeType":"FunctionDefinition","parameters":{"id":7346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7345,"mutability":"mutable","name":"value","nameLocation":"7764:5:26","nodeType":"VariableDeclaration","scope":7370,"src":"7756:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7344,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:26"},"returnParameters":{"id":7349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7370,"src":"7794:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":7347,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:26","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:26"},"scope":8744,"src":"7737:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7397,"nodeType":"Block","src":"8312:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"8326:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7380,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":7379,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":7383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:26","memberName":"max","nodeType":"MemberAccess","src":"8334:17:26","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7391,"nodeType":"IfStatement","src":"8322:105:26","trueBody":{"id":7390,"nodeType":"Block","src":"8353:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:26","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"8410:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7385,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"8374:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7389,"nodeType":"RevertStatement","src":"8367:49:26"}]}},{"expression":{"arguments":[{"id":7394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"8451:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7392,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:26","typeDescriptions":{}}},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":7377,"id":7396,"nodeType":"Return","src":"8436:21:26"}]},"documentation":{"id":7371,"nodeType":"StructuredDocumentation","src":"7961:280:26","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7398,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:26","nodeType":"FunctionDefinition","parameters":{"id":7374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7373,"mutability":"mutable","name":"value","nameLocation":"8273:5:26","nodeType":"VariableDeclaration","scope":7398,"src":"8265:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7372,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:26"},"returnParameters":{"id":7377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7398,"src":"8303:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":7375,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:26","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:26"},"scope":8744,"src":"8246:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7425,"nodeType":"Block","src":"8821:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"8835:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7408,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":7407,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":7411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:26","memberName":"max","nodeType":"MemberAccess","src":"8843:17:26","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7419,"nodeType":"IfStatement","src":"8831:105:26","trueBody":{"id":7418,"nodeType":"Block","src":"8862:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:26","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"8919:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7413,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"8883:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7417,"nodeType":"RevertStatement","src":"8876:49:26"}]}},{"expression":{"arguments":[{"id":7422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"8960:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7420,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:26","typeDescriptions":{}}},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":7405,"id":7424,"nodeType":"Return","src":"8945:21:26"}]},"documentation":{"id":7399,"nodeType":"StructuredDocumentation","src":"8470:280:26","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7426,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:26","nodeType":"FunctionDefinition","parameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7401,"mutability":"mutable","name":"value","nameLocation":"8782:5:26","nodeType":"VariableDeclaration","scope":7426,"src":"8774:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7400,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:26"},"returnParameters":{"id":7405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7426,"src":"8812:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":7403,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:26","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:26"},"scope":8744,"src":"8755:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7453,"nodeType":"Block","src":"9330:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"9344:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7436,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7435,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:26","memberName":"max","nodeType":"MemberAccess","src":"9352:17:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7447,"nodeType":"IfStatement","src":"9340:105:26","trueBody":{"id":7446,"nodeType":"Block","src":"9371:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"9428:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7441,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"9392:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7445,"nodeType":"RevertStatement","src":"9385:49:26"}]}},{"expression":{"arguments":[{"id":7450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"9469:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7448,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:26","typeDescriptions":{}}},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":7433,"id":7452,"nodeType":"Return","src":"9454:21:26"}]},"documentation":{"id":7427,"nodeType":"StructuredDocumentation","src":"8979:280:26","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7454,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:26","nodeType":"FunctionDefinition","parameters":{"id":7430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7429,"mutability":"mutable","name":"value","nameLocation":"9291:5:26","nodeType":"VariableDeclaration","scope":7454,"src":"9283:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7428,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:26"},"returnParameters":{"id":7433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7454,"src":"9321:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7431,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:26"},"scope":8744,"src":"9264:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7481,"nodeType":"Block","src":"9839:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"9853:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7464,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7463,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:26","memberName":"max","nodeType":"MemberAccess","src":"9861:17:26","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7475,"nodeType":"IfStatement","src":"9849:105:26","trueBody":{"id":7474,"nodeType":"Block","src":"9880:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:26","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"9937:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7469,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"9901:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7473,"nodeType":"RevertStatement","src":"9894:49:26"}]}},{"expression":{"arguments":[{"id":7478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"9978:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7476,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:26","typeDescriptions":{}}},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":7461,"id":7480,"nodeType":"Return","src":"9963:21:26"}]},"documentation":{"id":7455,"nodeType":"StructuredDocumentation","src":"9488:280:26","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7482,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:26","nodeType":"FunctionDefinition","parameters":{"id":7458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7457,"mutability":"mutable","name":"value","nameLocation":"9800:5:26","nodeType":"VariableDeclaration","scope":7482,"src":"9792:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7456,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:26"},"returnParameters":{"id":7461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7482,"src":"9830:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":7459,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:26","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:26"},"scope":8744,"src":"9773:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7509,"nodeType":"Block","src":"10348:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"10362:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7492,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7491,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:26","memberName":"max","nodeType":"MemberAccess","src":"10370:17:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7503,"nodeType":"IfStatement","src":"10358:105:26","trueBody":{"id":7502,"nodeType":"Block","src":"10389:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:26","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"10446:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7497,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"10410:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7501,"nodeType":"RevertStatement","src":"10403:49:26"}]}},{"expression":{"arguments":[{"id":7506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7485,"src":"10487:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7504,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:26","typeDescriptions":{}}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7489,"id":7508,"nodeType":"Return","src":"10472:21:26"}]},"documentation":{"id":7483,"nodeType":"StructuredDocumentation","src":"9997:280:26","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7510,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:26","nodeType":"FunctionDefinition","parameters":{"id":7486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7485,"mutability":"mutable","name":"value","nameLocation":"10309:5:26","nodeType":"VariableDeclaration","scope":7510,"src":"10301:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7484,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:26"},"returnParameters":{"id":7489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7510,"src":"10339:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7487,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:26"},"scope":8744,"src":"10282:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7537,"nodeType":"Block","src":"10857:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7513,"src":"10871:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7520,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7519,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:26","memberName":"max","nodeType":"MemberAccess","src":"10879:17:26","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7531,"nodeType":"IfStatement","src":"10867:105:26","trueBody":{"id":7530,"nodeType":"Block","src":"10898:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:26","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7513,"src":"10955:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7525,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"10919:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7529,"nodeType":"RevertStatement","src":"10912:49:26"}]}},{"expression":{"arguments":[{"id":7534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7513,"src":"10996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7532,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:26","typeDescriptions":{}}},"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7517,"id":7536,"nodeType":"Return","src":"10981:21:26"}]},"documentation":{"id":7511,"nodeType":"StructuredDocumentation","src":"10506:280:26","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7538,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:26","nodeType":"FunctionDefinition","parameters":{"id":7514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7513,"mutability":"mutable","name":"value","nameLocation":"10818:5:26","nodeType":"VariableDeclaration","scope":7538,"src":"10810:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7512,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:26"},"returnParameters":{"id":7517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7538,"src":"10848:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7515,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:26","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:26"},"scope":8744,"src":"10791:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7565,"nodeType":"Block","src":"11360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"11374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7548,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7547,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:26","memberName":"max","nodeType":"MemberAccess","src":"11382:16:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7559,"nodeType":"IfStatement","src":"11370:103:26","trueBody":{"id":7558,"nodeType":"Block","src":"11400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"11456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7553,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"11421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7557,"nodeType":"RevertStatement","src":"11414:48:26"}]}},{"expression":{"arguments":[{"id":7562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"11496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7560,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:26","typeDescriptions":{}}},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7545,"id":7564,"nodeType":"Return","src":"11482:20:26"}]},"documentation":{"id":7539,"nodeType":"StructuredDocumentation","src":"11015:276:26","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7566,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:26","nodeType":"FunctionDefinition","parameters":{"id":7542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7541,"mutability":"mutable","name":"value","nameLocation":"11322:5:26","nodeType":"VariableDeclaration","scope":7566,"src":"11314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7540,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:26"},"returnParameters":{"id":7545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7566,"src":"11352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7543,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:26"},"scope":8744,"src":"11296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7593,"nodeType":"Block","src":"11860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"11874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7576,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7575,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:26","memberName":"max","nodeType":"MemberAccess","src":"11882:16:26","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7587,"nodeType":"IfStatement","src":"11870:103:26","trueBody":{"id":7586,"nodeType":"Block","src":"11900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"11956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7581,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"11921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7585,"nodeType":"RevertStatement","src":"11914:48:26"}]}},{"expression":{"arguments":[{"id":7590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"11996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7588,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:26","typeDescriptions":{}}},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7573,"id":7592,"nodeType":"Return","src":"11982:20:26"}]},"documentation":{"id":7567,"nodeType":"StructuredDocumentation","src":"11515:276:26","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7594,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:26","nodeType":"FunctionDefinition","parameters":{"id":7570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7569,"mutability":"mutable","name":"value","nameLocation":"11822:5:26","nodeType":"VariableDeclaration","scope":7594,"src":"11814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7568,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:26"},"returnParameters":{"id":7573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7594,"src":"11852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7571,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:26","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:26"},"scope":8744,"src":"11796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7621,"nodeType":"Block","src":"12360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"12374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7604,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7603,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:26","memberName":"max","nodeType":"MemberAccess","src":"12382:16:26","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7615,"nodeType":"IfStatement","src":"12370:103:26","trueBody":{"id":7614,"nodeType":"Block","src":"12400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"12456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7609,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"12421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7613,"nodeType":"RevertStatement","src":"12414:48:26"}]}},{"expression":{"arguments":[{"id":7618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"12496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7616,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:26","typeDescriptions":{}}},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7601,"id":7620,"nodeType":"Return","src":"12482:20:26"}]},"documentation":{"id":7595,"nodeType":"StructuredDocumentation","src":"12015:276:26","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7622,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:26","nodeType":"FunctionDefinition","parameters":{"id":7598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7597,"mutability":"mutable","name":"value","nameLocation":"12322:5:26","nodeType":"VariableDeclaration","scope":7622,"src":"12314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7596,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:26"},"returnParameters":{"id":7601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7622,"src":"12352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7599,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:26","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:26"},"scope":8744,"src":"12296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7649,"nodeType":"Block","src":"12860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"12874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7632,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7631,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:26","memberName":"max","nodeType":"MemberAccess","src":"12882:16:26","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7643,"nodeType":"IfStatement","src":"12870:103:26","trueBody":{"id":7642,"nodeType":"Block","src":"12900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"12956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7637,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"12921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7641,"nodeType":"RevertStatement","src":"12914:48:26"}]}},{"expression":{"arguments":[{"id":7646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"12996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7644,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:26","typeDescriptions":{}}},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7629,"id":7648,"nodeType":"Return","src":"12982:20:26"}]},"documentation":{"id":7623,"nodeType":"StructuredDocumentation","src":"12515:276:26","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7650,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:26","nodeType":"FunctionDefinition","parameters":{"id":7626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7625,"mutability":"mutable","name":"value","nameLocation":"12822:5:26","nodeType":"VariableDeclaration","scope":7650,"src":"12814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7624,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:26"},"returnParameters":{"id":7629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7650,"src":"12852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7627,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:26","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:26"},"scope":8744,"src":"12796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7677,"nodeType":"Block","src":"13360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7653,"src":"13374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7660,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7659,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:26","memberName":"max","nodeType":"MemberAccess","src":"13382:16:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7671,"nodeType":"IfStatement","src":"13370:103:26","trueBody":{"id":7670,"nodeType":"Block","src":"13400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7653,"src":"13456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7665,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"13421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7669,"nodeType":"RevertStatement","src":"13414:48:26"}]}},{"expression":{"arguments":[{"id":7674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7653,"src":"13496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7672,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:26","typeDescriptions":{}}},"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7657,"id":7676,"nodeType":"Return","src":"13482:20:26"}]},"documentation":{"id":7651,"nodeType":"StructuredDocumentation","src":"13015:276:26","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7678,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:26","nodeType":"FunctionDefinition","parameters":{"id":7654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7653,"mutability":"mutable","name":"value","nameLocation":"13322:5:26","nodeType":"VariableDeclaration","scope":7678,"src":"13314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7652,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:26"},"returnParameters":{"id":7657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7678,"src":"13352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7655,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:26"},"scope":8744,"src":"13296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7705,"nodeType":"Block","src":"13860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"13874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7688,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7687,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:26","memberName":"max","nodeType":"MemberAccess","src":"13882:16:26","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7699,"nodeType":"IfStatement","src":"13870:103:26","trueBody":{"id":7698,"nodeType":"Block","src":"13900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"13956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7693,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"13921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7697,"nodeType":"RevertStatement","src":"13914:48:26"}]}},{"expression":{"arguments":[{"id":7702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"13996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7700,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:26","typeDescriptions":{}}},"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7685,"id":7704,"nodeType":"Return","src":"13982:20:26"}]},"documentation":{"id":7679,"nodeType":"StructuredDocumentation","src":"13515:276:26","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7706,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:26","nodeType":"FunctionDefinition","parameters":{"id":7682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7681,"mutability":"mutable","name":"value","nameLocation":"13822:5:26","nodeType":"VariableDeclaration","scope":7706,"src":"13814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7680,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:26"},"returnParameters":{"id":7685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7706,"src":"13852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7683,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:26","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:26"},"scope":8744,"src":"13796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7733,"nodeType":"Block","src":"14360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"14374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7716,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7715,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:26","memberName":"max","nodeType":"MemberAccess","src":"14382:16:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7727,"nodeType":"IfStatement","src":"14370:103:26","trueBody":{"id":7726,"nodeType":"Block","src":"14400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"14456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7721,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"14421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7725,"nodeType":"RevertStatement","src":"14414:48:26"}]}},{"expression":{"arguments":[{"id":7730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"14496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7728,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:26","typeDescriptions":{}}},"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7713,"id":7732,"nodeType":"Return","src":"14482:20:26"}]},"documentation":{"id":7707,"nodeType":"StructuredDocumentation","src":"14015:276:26","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7734,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:26","nodeType":"FunctionDefinition","parameters":{"id":7710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7709,"mutability":"mutable","name":"value","nameLocation":"14322:5:26","nodeType":"VariableDeclaration","scope":7734,"src":"14314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7708,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:26"},"returnParameters":{"id":7713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7734,"src":"14352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7711,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:26"},"scope":8744,"src":"14296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7761,"nodeType":"Block","src":"14860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"14874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7744,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7743,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:26","memberName":"max","nodeType":"MemberAccess","src":"14882:16:26","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7755,"nodeType":"IfStatement","src":"14870:103:26","trueBody":{"id":7754,"nodeType":"Block","src":"14900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"14956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7749,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"14921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7753,"nodeType":"RevertStatement","src":"14914:48:26"}]}},{"expression":{"arguments":[{"id":7758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"14996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7756,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:26","typeDescriptions":{}}},"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7741,"id":7760,"nodeType":"Return","src":"14982:20:26"}]},"documentation":{"id":7735,"nodeType":"StructuredDocumentation","src":"14515:276:26","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7762,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:26","nodeType":"FunctionDefinition","parameters":{"id":7738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7737,"mutability":"mutable","name":"value","nameLocation":"14822:5:26","nodeType":"VariableDeclaration","scope":7762,"src":"14814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7736,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:26"},"returnParameters":{"id":7741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7762,"src":"14852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7739,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:26","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:26"},"scope":8744,"src":"14796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7789,"nodeType":"Block","src":"15360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7765,"src":"15374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7772,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7771,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:26","memberName":"max","nodeType":"MemberAccess","src":"15382:16:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7783,"nodeType":"IfStatement","src":"15370:103:26","trueBody":{"id":7782,"nodeType":"Block","src":"15400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7765,"src":"15456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7777,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"15421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7781,"nodeType":"RevertStatement","src":"15414:48:26"}]}},{"expression":{"arguments":[{"id":7786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7765,"src":"15496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7784,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:26","typeDescriptions":{}}},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7769,"id":7788,"nodeType":"Return","src":"15482:20:26"}]},"documentation":{"id":7763,"nodeType":"StructuredDocumentation","src":"15015:276:26","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7790,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:26","nodeType":"FunctionDefinition","parameters":{"id":7766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7765,"mutability":"mutable","name":"value","nameLocation":"15322:5:26","nodeType":"VariableDeclaration","scope":7790,"src":"15314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7764,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:26"},"returnParameters":{"id":7769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7790,"src":"15352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7767,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:26"},"scope":8744,"src":"15296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7817,"nodeType":"Block","src":"15860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7793,"src":"15874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7800,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7799,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:26","memberName":"max","nodeType":"MemberAccess","src":"15882:16:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7811,"nodeType":"IfStatement","src":"15870:103:26","trueBody":{"id":7810,"nodeType":"Block","src":"15900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7793,"src":"15956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7805,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"15921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7809,"nodeType":"RevertStatement","src":"15914:48:26"}]}},{"expression":{"arguments":[{"id":7814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7793,"src":"15996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7812,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:26","typeDescriptions":{}}},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7797,"id":7816,"nodeType":"Return","src":"15982:20:26"}]},"documentation":{"id":7791,"nodeType":"StructuredDocumentation","src":"15515:276:26","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7818,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:26","nodeType":"FunctionDefinition","parameters":{"id":7794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7793,"mutability":"mutable","name":"value","nameLocation":"15822:5:26","nodeType":"VariableDeclaration","scope":7818,"src":"15814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7792,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:26"},"returnParameters":{"id":7797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7818,"src":"15852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7795,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:26"},"scope":8744,"src":"15796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7845,"nodeType":"Block","src":"16360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"16374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7828,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7827,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:26","memberName":"max","nodeType":"MemberAccess","src":"16382:16:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7839,"nodeType":"IfStatement","src":"16370:103:26","trueBody":{"id":7838,"nodeType":"Block","src":"16400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"16456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7833,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"16421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7837,"nodeType":"RevertStatement","src":"16414:48:26"}]}},{"expression":{"arguments":[{"id":7842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"16496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7840,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:26","typeDescriptions":{}}},"id":7843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7825,"id":7844,"nodeType":"Return","src":"16482:20:26"}]},"documentation":{"id":7819,"nodeType":"StructuredDocumentation","src":"16015:276:26","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7846,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:26","nodeType":"FunctionDefinition","parameters":{"id":7822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7821,"mutability":"mutable","name":"value","nameLocation":"16322:5:26","nodeType":"VariableDeclaration","scope":7846,"src":"16314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7820,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:26"},"returnParameters":{"id":7825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7846,"src":"16352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7823,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:26"},"scope":8744,"src":"16296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7873,"nodeType":"Block","src":"16854:146:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"16868:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7856,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7855,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:26","memberName":"max","nodeType":"MemberAccess","src":"16876:15:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7867,"nodeType":"IfStatement","src":"16864:101:26","trueBody":{"id":7866,"nodeType":"Block","src":"16893:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"16948:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7861,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"16914:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7865,"nodeType":"RevertStatement","src":"16907:47:26"}]}},{"expression":{"arguments":[{"id":7870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"16987:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7868,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:26","typeDescriptions":{}}},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7853,"id":7872,"nodeType":"Return","src":"16974:19:26"}]},"documentation":{"id":7847,"nodeType":"StructuredDocumentation","src":"16515:272:26","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7874,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:26","nodeType":"FunctionDefinition","parameters":{"id":7850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7849,"mutability":"mutable","name":"value","nameLocation":"16817:5:26","nodeType":"VariableDeclaration","scope":7874,"src":"16809:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7848,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:26"},"returnParameters":{"id":7853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7874,"src":"16847:5:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7851,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:26"},"scope":8744,"src":"16792:208:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7896,"nodeType":"Block","src":"17236:128:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"17250:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7890,"nodeType":"IfStatement","src":"17246:81:26","trueBody":{"id":7889,"nodeType":"Block","src":"17261:66:26","statements":[{"errorCall":{"arguments":[{"id":7886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"17310:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7885,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"17282:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7888,"nodeType":"RevertStatement","src":"17275:41:26"}]}},{"expression":{"arguments":[{"id":7893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"17351:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7891,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:26","typeDescriptions":{}}},"id":7894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7881,"id":7895,"nodeType":"Return","src":"17336:21:26"}]},"documentation":{"id":7875,"nodeType":"StructuredDocumentation","src":"17006:160:26","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7897,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:26","nodeType":"FunctionDefinition","parameters":{"id":7878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7877,"mutability":"mutable","name":"value","nameLocation":"17197:5:26","nodeType":"VariableDeclaration","scope":7897,"src":"17190:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7876,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:26"},"returnParameters":{"id":7881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7897,"src":"17227:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7879,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:26"},"scope":8744,"src":"17171:193:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7922,"nodeType":"Block","src":"17761:150:26","statements":[{"expression":{"id":7910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7905,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7903,"src":"17771:10:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"17791:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7906,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:26","typeDescriptions":{}}},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7911,"nodeType":"ExpressionStatement","src":"17771:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7912,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7903,"src":"17811:10:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"17825:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7921,"nodeType":"IfStatement","src":"17807:98:26","trueBody":{"id":7920,"nodeType":"Block","src":"17832:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:26","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7900,"src":"17888:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7915,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"17853:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7919,"nodeType":"RevertStatement","src":"17846:48:26"}]}}]},"documentation":{"id":7898,"nodeType":"StructuredDocumentation","src":"17370:312:26","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7923,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:26","nodeType":"FunctionDefinition","parameters":{"id":7901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7900,"mutability":"mutable","name":"value","nameLocation":"17712:5:26","nodeType":"VariableDeclaration","scope":7923,"src":"17705:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7899,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:26"},"returnParameters":{"id":7904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7903,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:26","nodeType":"VariableDeclaration","scope":7923,"src":"17742:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7902,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:26"},"scope":8744,"src":"17687:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7948,"nodeType":"Block","src":"18308:150:26","statements":[{"expression":{"id":7936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7931,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"18318:10:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"18338:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7932,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:26","typeDescriptions":{}}},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7937,"nodeType":"ExpressionStatement","src":"18318:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7938,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"18358:10:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"18372:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7947,"nodeType":"IfStatement","src":"18354:98:26","trueBody":{"id":7946,"nodeType":"Block","src":"18379:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:26","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"18435:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7941,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"18400:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7945,"nodeType":"RevertStatement","src":"18393:48:26"}]}}]},"documentation":{"id":7924,"nodeType":"StructuredDocumentation","src":"17917:312:26","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7949,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:26","nodeType":"FunctionDefinition","parameters":{"id":7927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7926,"mutability":"mutable","name":"value","nameLocation":"18259:5:26","nodeType":"VariableDeclaration","scope":7949,"src":"18252:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7925,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:26"},"returnParameters":{"id":7930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7929,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:26","nodeType":"VariableDeclaration","scope":7949,"src":"18289:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7928,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:26"},"scope":8744,"src":"18234:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7974,"nodeType":"Block","src":"18855:150:26","statements":[{"expression":{"id":7962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7957,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7955,"src":"18865:10:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7952,"src":"18885:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7958,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:26","typeDescriptions":{}}},"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7963,"nodeType":"ExpressionStatement","src":"18865:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7964,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7955,"src":"18905:10:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7952,"src":"18919:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7973,"nodeType":"IfStatement","src":"18901:98:26","trueBody":{"id":7972,"nodeType":"Block","src":"18926:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:26","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7952,"src":"18982:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7967,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"18947:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7971,"nodeType":"RevertStatement","src":"18940:48:26"}]}}]},"documentation":{"id":7950,"nodeType":"StructuredDocumentation","src":"18464:312:26","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7975,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:26","nodeType":"FunctionDefinition","parameters":{"id":7953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7952,"mutability":"mutable","name":"value","nameLocation":"18806:5:26","nodeType":"VariableDeclaration","scope":7975,"src":"18799:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7951,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:26"},"returnParameters":{"id":7956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7955,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:26","nodeType":"VariableDeclaration","scope":7975,"src":"18836:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7954,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:26"},"scope":8744,"src":"18781:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8000,"nodeType":"Block","src":"19402:150:26","statements":[{"expression":{"id":7988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7983,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"19412:10:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"19432:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7984,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:26","typeDescriptions":{}}},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7989,"nodeType":"ExpressionStatement","src":"19412:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"19452:10:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"19466:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7999,"nodeType":"IfStatement","src":"19448:98:26","trueBody":{"id":7998,"nodeType":"Block","src":"19473:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:26","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"19529:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7993,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"19494:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7997,"nodeType":"RevertStatement","src":"19487:48:26"}]}}]},"documentation":{"id":7976,"nodeType":"StructuredDocumentation","src":"19011:312:26","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8001,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:26","nodeType":"FunctionDefinition","parameters":{"id":7979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7978,"mutability":"mutable","name":"value","nameLocation":"19353:5:26","nodeType":"VariableDeclaration","scope":8001,"src":"19346:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7977,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:26"},"returnParameters":{"id":7982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7981,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:26","nodeType":"VariableDeclaration","scope":8001,"src":"19383:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7980,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:26"},"scope":8744,"src":"19328:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8026,"nodeType":"Block","src":"19949:150:26","statements":[{"expression":{"id":8014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"19959:10:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"19979:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":8010,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:26","typeDescriptions":{}}},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":8015,"nodeType":"ExpressionStatement","src":"19959:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8016,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"19999:10:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"20013:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8025,"nodeType":"IfStatement","src":"19995:98:26","trueBody":{"id":8024,"nodeType":"Block","src":"20020:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:26","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"20076:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8019,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"20041:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8023,"nodeType":"RevertStatement","src":"20034:48:26"}]}}]},"documentation":{"id":8002,"nodeType":"StructuredDocumentation","src":"19558:312:26","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8027,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:26","nodeType":"FunctionDefinition","parameters":{"id":8005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8004,"mutability":"mutable","name":"value","nameLocation":"19900:5:26","nodeType":"VariableDeclaration","scope":8027,"src":"19893:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8003,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:26"},"returnParameters":{"id":8008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8007,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:26","nodeType":"VariableDeclaration","scope":8027,"src":"19930:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":8006,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:26"},"scope":8744,"src":"19875:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8052,"nodeType":"Block","src":"20496:150:26","statements":[{"expression":{"id":8040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8035,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8033,"src":"20506:10:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8030,"src":"20526:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":8036,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:26","typeDescriptions":{}}},"id":8039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":8041,"nodeType":"ExpressionStatement","src":"20506:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8042,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8033,"src":"20546:10:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8030,"src":"20560:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8051,"nodeType":"IfStatement","src":"20542:98:26","trueBody":{"id":8050,"nodeType":"Block","src":"20567:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:26","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8030,"src":"20623:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8045,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"20588:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8049,"nodeType":"RevertStatement","src":"20581:48:26"}]}}]},"documentation":{"id":8028,"nodeType":"StructuredDocumentation","src":"20105:312:26","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8053,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:26","nodeType":"FunctionDefinition","parameters":{"id":8031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8030,"mutability":"mutable","name":"value","nameLocation":"20447:5:26","nodeType":"VariableDeclaration","scope":8053,"src":"20440:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8029,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:26"},"returnParameters":{"id":8034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8033,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:26","nodeType":"VariableDeclaration","scope":8053,"src":"20477:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":8032,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:26"},"scope":8744,"src":"20422:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8078,"nodeType":"Block","src":"21043:150:26","statements":[{"expression":{"id":8066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"21053:10:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"21073:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":8062,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:26","typeDescriptions":{}}},"id":8065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":8067,"nodeType":"ExpressionStatement","src":"21053:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8068,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"21093:10:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"21107:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8077,"nodeType":"IfStatement","src":"21089:98:26","trueBody":{"id":8076,"nodeType":"Block","src":"21114:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:26","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"21170:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8071,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"21135:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8075,"nodeType":"RevertStatement","src":"21128:48:26"}]}}]},"documentation":{"id":8054,"nodeType":"StructuredDocumentation","src":"20652:312:26","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8079,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:26","nodeType":"FunctionDefinition","parameters":{"id":8057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8056,"mutability":"mutable","name":"value","nameLocation":"20994:5:26","nodeType":"VariableDeclaration","scope":8079,"src":"20987:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8055,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:26"},"returnParameters":{"id":8060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8059,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:26","nodeType":"VariableDeclaration","scope":8079,"src":"21024:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":8058,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:26"},"scope":8744,"src":"20969:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8104,"nodeType":"Block","src":"21590:150:26","statements":[{"expression":{"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"21600:10:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"21620:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":8088,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:26","typeDescriptions":{}}},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":8093,"nodeType":"ExpressionStatement","src":"21600:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8094,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8085,"src":"21640:10:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"21654:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8103,"nodeType":"IfStatement","src":"21636:98:26","trueBody":{"id":8102,"nodeType":"Block","src":"21661:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:26","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"21717:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8097,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"21682:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8101,"nodeType":"RevertStatement","src":"21675:48:26"}]}}]},"documentation":{"id":8080,"nodeType":"StructuredDocumentation","src":"21199:312:26","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8105,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:26","nodeType":"FunctionDefinition","parameters":{"id":8083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8082,"mutability":"mutable","name":"value","nameLocation":"21541:5:26","nodeType":"VariableDeclaration","scope":8105,"src":"21534:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8081,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:26"},"returnParameters":{"id":8086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8085,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:26","nodeType":"VariableDeclaration","scope":8105,"src":"21571:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":8084,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:26"},"scope":8744,"src":"21516:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8130,"nodeType":"Block","src":"22137:150:26","statements":[{"expression":{"id":8118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"22147:10:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8108,"src":"22167:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":8114,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:26","typeDescriptions":{}}},"id":8117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":8119,"nodeType":"ExpressionStatement","src":"22147:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8120,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"22187:10:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8108,"src":"22201:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8129,"nodeType":"IfStatement","src":"22183:98:26","trueBody":{"id":8128,"nodeType":"Block","src":"22208:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:26","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8108,"src":"22264:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8123,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"22229:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8127,"nodeType":"RevertStatement","src":"22222:48:26"}]}}]},"documentation":{"id":8106,"nodeType":"StructuredDocumentation","src":"21746:312:26","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8131,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:26","nodeType":"FunctionDefinition","parameters":{"id":8109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8108,"mutability":"mutable","name":"value","nameLocation":"22088:5:26","nodeType":"VariableDeclaration","scope":8131,"src":"22081:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8107,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:26"},"returnParameters":{"id":8112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8111,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:26","nodeType":"VariableDeclaration","scope":8131,"src":"22118:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":8110,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:26"},"scope":8744,"src":"22063:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8156,"nodeType":"Block","src":"22684:150:26","statements":[{"expression":{"id":8144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8139,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8137,"src":"22694:10:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"22714:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":8140,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:26","typeDescriptions":{}}},"id":8143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":8145,"nodeType":"ExpressionStatement","src":"22694:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8146,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8137,"src":"22734:10:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"22748:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8155,"nodeType":"IfStatement","src":"22730:98:26","trueBody":{"id":8154,"nodeType":"Block","src":"22755:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:26","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"22811:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8149,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"22776:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8153,"nodeType":"RevertStatement","src":"22769:48:26"}]}}]},"documentation":{"id":8132,"nodeType":"StructuredDocumentation","src":"22293:312:26","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8157,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:26","nodeType":"FunctionDefinition","parameters":{"id":8135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8134,"mutability":"mutable","name":"value","nameLocation":"22635:5:26","nodeType":"VariableDeclaration","scope":8157,"src":"22628:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8133,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:26"},"returnParameters":{"id":8138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8137,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:26","nodeType":"VariableDeclaration","scope":8157,"src":"22665:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":8136,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:26"},"scope":8744,"src":"22610:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8182,"nodeType":"Block","src":"23231:150:26","statements":[{"expression":{"id":8170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8165,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"23241:10:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"23261:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":8166,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:26","typeDescriptions":{}}},"id":8169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":8171,"nodeType":"ExpressionStatement","src":"23241:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8172,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"23281:10:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"23295:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8181,"nodeType":"IfStatement","src":"23277:98:26","trueBody":{"id":8180,"nodeType":"Block","src":"23302:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:26","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"23358:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8175,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"23323:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8179,"nodeType":"RevertStatement","src":"23316:48:26"}]}}]},"documentation":{"id":8158,"nodeType":"StructuredDocumentation","src":"22840:312:26","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8183,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:26","nodeType":"FunctionDefinition","parameters":{"id":8161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8160,"mutability":"mutable","name":"value","nameLocation":"23182:5:26","nodeType":"VariableDeclaration","scope":8183,"src":"23175:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8159,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:26"},"returnParameters":{"id":8164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8163,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:26","nodeType":"VariableDeclaration","scope":8183,"src":"23212:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":8162,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:26"},"scope":8744,"src":"23157:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8208,"nodeType":"Block","src":"23778:150:26","statements":[{"expression":{"id":8196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8189,"src":"23788:10:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8186,"src":"23808:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":8192,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:26","typeDescriptions":{}}},"id":8195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":8197,"nodeType":"ExpressionStatement","src":"23788:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8198,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8189,"src":"23828:10:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8186,"src":"23842:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8207,"nodeType":"IfStatement","src":"23824:98:26","trueBody":{"id":8206,"nodeType":"Block","src":"23849:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:26","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8186,"src":"23905:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8201,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"23870:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8205,"nodeType":"RevertStatement","src":"23863:48:26"}]}}]},"documentation":{"id":8184,"nodeType":"StructuredDocumentation","src":"23387:312:26","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8209,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:26","nodeType":"FunctionDefinition","parameters":{"id":8187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8186,"mutability":"mutable","name":"value","nameLocation":"23729:5:26","nodeType":"VariableDeclaration","scope":8209,"src":"23722:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8185,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:26"},"returnParameters":{"id":8190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8189,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:26","nodeType":"VariableDeclaration","scope":8209,"src":"23759:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":8188,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:26"},"scope":8744,"src":"23704:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8234,"nodeType":"Block","src":"24325:150:26","statements":[{"expression":{"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8217,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"24335:10:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8212,"src":"24355:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":8218,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:26","typeDescriptions":{}}},"id":8221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":8223,"nodeType":"ExpressionStatement","src":"24335:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8224,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"24375:10:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8212,"src":"24389:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8233,"nodeType":"IfStatement","src":"24371:98:26","trueBody":{"id":8232,"nodeType":"Block","src":"24396:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:26","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8212,"src":"24452:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8227,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"24417:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8231,"nodeType":"RevertStatement","src":"24410:48:26"}]}}]},"documentation":{"id":8210,"nodeType":"StructuredDocumentation","src":"23934:312:26","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8235,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:26","nodeType":"FunctionDefinition","parameters":{"id":8213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8212,"mutability":"mutable","name":"value","nameLocation":"24276:5:26","nodeType":"VariableDeclaration","scope":8235,"src":"24269:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8211,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:26"},"returnParameters":{"id":8216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8215,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:26","nodeType":"VariableDeclaration","scope":8235,"src":"24306:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":8214,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:26"},"scope":8744,"src":"24251:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8260,"nodeType":"Block","src":"24872:150:26","statements":[{"expression":{"id":8248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"24882:10:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"24902:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":8244,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:26","typeDescriptions":{}}},"id":8247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":8249,"nodeType":"ExpressionStatement","src":"24882:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8250,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"24922:10:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"24936:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8259,"nodeType":"IfStatement","src":"24918:98:26","trueBody":{"id":8258,"nodeType":"Block","src":"24943:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:26","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"24999:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8253,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"24964:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8257,"nodeType":"RevertStatement","src":"24957:48:26"}]}}]},"documentation":{"id":8236,"nodeType":"StructuredDocumentation","src":"24481:312:26","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8261,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:26","nodeType":"FunctionDefinition","parameters":{"id":8239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8238,"mutability":"mutable","name":"value","nameLocation":"24823:5:26","nodeType":"VariableDeclaration","scope":8261,"src":"24816:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8237,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:26"},"returnParameters":{"id":8242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8241,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:26","nodeType":"VariableDeclaration","scope":8261,"src":"24853:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":8240,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:26"},"scope":8744,"src":"24798:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8286,"nodeType":"Block","src":"25419:150:26","statements":[{"expression":{"id":8274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"25429:10:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8264,"src":"25449:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":8270,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:26","typeDescriptions":{}}},"id":8273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":8275,"nodeType":"ExpressionStatement","src":"25429:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8276,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"25469:10:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8264,"src":"25483:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8285,"nodeType":"IfStatement","src":"25465:98:26","trueBody":{"id":8284,"nodeType":"Block","src":"25490:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:26","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8264,"src":"25546:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8279,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"25511:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8283,"nodeType":"RevertStatement","src":"25504:48:26"}]}}]},"documentation":{"id":8262,"nodeType":"StructuredDocumentation","src":"25028:312:26","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8287,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:26","nodeType":"FunctionDefinition","parameters":{"id":8265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8264,"mutability":"mutable","name":"value","nameLocation":"25370:5:26","nodeType":"VariableDeclaration","scope":8287,"src":"25363:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8263,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:26"},"returnParameters":{"id":8268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8267,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:26","nodeType":"VariableDeclaration","scope":8287,"src":"25400:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":8266,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:26"},"scope":8744,"src":"25345:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8312,"nodeType":"Block","src":"25966:150:26","statements":[{"expression":{"id":8300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8295,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"25976:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8290,"src":"25996:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":8296,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:26","typeDescriptions":{}}},"id":8299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8301,"nodeType":"ExpressionStatement","src":"25976:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8302,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"26016:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8290,"src":"26030:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8311,"nodeType":"IfStatement","src":"26012:98:26","trueBody":{"id":8310,"nodeType":"Block","src":"26037:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8290,"src":"26093:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8305,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"26058:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8309,"nodeType":"RevertStatement","src":"26051:48:26"}]}}]},"documentation":{"id":8288,"nodeType":"StructuredDocumentation","src":"25575:312:26","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8313,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:26","nodeType":"FunctionDefinition","parameters":{"id":8291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8290,"mutability":"mutable","name":"value","nameLocation":"25917:5:26","nodeType":"VariableDeclaration","scope":8313,"src":"25910:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8289,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:26"},"returnParameters":{"id":8294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8293,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:26","nodeType":"VariableDeclaration","scope":8313,"src":"25947:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8292,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:26"},"scope":8744,"src":"25892:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8338,"nodeType":"Block","src":"26513:150:26","statements":[{"expression":{"id":8326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8321,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"26523:10:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"26543:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":8322,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:26","typeDescriptions":{}}},"id":8325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":8327,"nodeType":"ExpressionStatement","src":"26523:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8328,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"26563:10:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"26577:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8337,"nodeType":"IfStatement","src":"26559:98:26","trueBody":{"id":8336,"nodeType":"Block","src":"26584:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:26","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"26640:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8331,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"26605:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8335,"nodeType":"RevertStatement","src":"26598:48:26"}]}}]},"documentation":{"id":8314,"nodeType":"StructuredDocumentation","src":"26122:312:26","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8339,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:26","nodeType":"FunctionDefinition","parameters":{"id":8317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8316,"mutability":"mutable","name":"value","nameLocation":"26464:5:26","nodeType":"VariableDeclaration","scope":8339,"src":"26457:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8315,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:26"},"returnParameters":{"id":8320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8319,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:26","nodeType":"VariableDeclaration","scope":8339,"src":"26494:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":8318,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:26"},"scope":8744,"src":"26439:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8364,"nodeType":"Block","src":"27060:150:26","statements":[{"expression":{"id":8352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8347,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"27070:10:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8342,"src":"27090:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":8348,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:26","typeDescriptions":{}}},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":8353,"nodeType":"ExpressionStatement","src":"27070:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8354,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"27110:10:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8342,"src":"27124:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8363,"nodeType":"IfStatement","src":"27106:98:26","trueBody":{"id":8362,"nodeType":"Block","src":"27131:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:26","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8342,"src":"27187:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8357,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"27152:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8361,"nodeType":"RevertStatement","src":"27145:48:26"}]}}]},"documentation":{"id":8340,"nodeType":"StructuredDocumentation","src":"26669:312:26","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8365,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:26","nodeType":"FunctionDefinition","parameters":{"id":8343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8342,"mutability":"mutable","name":"value","nameLocation":"27011:5:26","nodeType":"VariableDeclaration","scope":8365,"src":"27004:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8341,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:26"},"returnParameters":{"id":8346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8345,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:26","nodeType":"VariableDeclaration","scope":8365,"src":"27041:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":8344,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:26"},"scope":8744,"src":"26986:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8390,"nodeType":"Block","src":"27607:150:26","statements":[{"expression":{"id":8378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8371,"src":"27617:10:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8368,"src":"27637:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":8374,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:26","typeDescriptions":{}}},"id":8377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":8379,"nodeType":"ExpressionStatement","src":"27617:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8380,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8371,"src":"27657:10:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8368,"src":"27671:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8389,"nodeType":"IfStatement","src":"27653:98:26","trueBody":{"id":8388,"nodeType":"Block","src":"27678:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:26","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8368,"src":"27734:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8383,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"27699:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8387,"nodeType":"RevertStatement","src":"27692:48:26"}]}}]},"documentation":{"id":8366,"nodeType":"StructuredDocumentation","src":"27216:312:26","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8391,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:26","nodeType":"FunctionDefinition","parameters":{"id":8369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8368,"mutability":"mutable","name":"value","nameLocation":"27558:5:26","nodeType":"VariableDeclaration","scope":8391,"src":"27551:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8367,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:26"},"returnParameters":{"id":8372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8371,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:26","nodeType":"VariableDeclaration","scope":8391,"src":"27588:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":8370,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:26"},"scope":8744,"src":"27533:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8416,"nodeType":"Block","src":"28147:148:26","statements":[{"expression":{"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8399,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8397,"src":"28157:10:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"28176:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":8400,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:26","typeDescriptions":{}}},"id":8403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":8405,"nodeType":"ExpressionStatement","src":"28157:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8406,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8397,"src":"28196:10:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"28210:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8415,"nodeType":"IfStatement","src":"28192:97:26","trueBody":{"id":8414,"nodeType":"Block","src":"28217:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"28272:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8409,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"28238:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8413,"nodeType":"RevertStatement","src":"28231:47:26"}]}}]},"documentation":{"id":8392,"nodeType":"StructuredDocumentation","src":"27763:307:26","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8417,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:26","nodeType":"FunctionDefinition","parameters":{"id":8395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8394,"mutability":"mutable","name":"value","nameLocation":"28099:5:26","nodeType":"VariableDeclaration","scope":8417,"src":"28092:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8393,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:26"},"returnParameters":{"id":8398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8397,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:26","nodeType":"VariableDeclaration","scope":8417,"src":"28129:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":8396,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:26"},"scope":8744,"src":"28075:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8442,"nodeType":"Block","src":"28685:148:26","statements":[{"expression":{"id":8430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8425,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8423,"src":"28695:10:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8420,"src":"28714:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":8426,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:26","typeDescriptions":{}}},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":8431,"nodeType":"ExpressionStatement","src":"28695:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8432,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8423,"src":"28734:10:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8420,"src":"28748:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8441,"nodeType":"IfStatement","src":"28730:97:26","trueBody":{"id":8440,"nodeType":"Block","src":"28755:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:26","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8420,"src":"28810:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8435,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"28776:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8439,"nodeType":"RevertStatement","src":"28769:47:26"}]}}]},"documentation":{"id":8418,"nodeType":"StructuredDocumentation","src":"28301:307:26","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8443,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:26","nodeType":"FunctionDefinition","parameters":{"id":8421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8420,"mutability":"mutable","name":"value","nameLocation":"28637:5:26","nodeType":"VariableDeclaration","scope":8443,"src":"28630:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8419,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:26"},"returnParameters":{"id":8424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8423,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:26","nodeType":"VariableDeclaration","scope":8443,"src":"28667:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":8422,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:26"},"scope":8744,"src":"28613:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8468,"nodeType":"Block","src":"29223:148:26","statements":[{"expression":{"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8451,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8449,"src":"29233:10:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"29252:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":8452,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:26","typeDescriptions":{}}},"id":8455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":8457,"nodeType":"ExpressionStatement","src":"29233:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8458,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8449,"src":"29272:10:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"29286:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8467,"nodeType":"IfStatement","src":"29268:97:26","trueBody":{"id":8466,"nodeType":"Block","src":"29293:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:26","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"29348:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8461,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"29314:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8465,"nodeType":"RevertStatement","src":"29307:47:26"}]}}]},"documentation":{"id":8444,"nodeType":"StructuredDocumentation","src":"28839:307:26","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8469,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:26","nodeType":"FunctionDefinition","parameters":{"id":8447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8446,"mutability":"mutable","name":"value","nameLocation":"29175:5:26","nodeType":"VariableDeclaration","scope":8469,"src":"29168:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8445,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:26"},"returnParameters":{"id":8450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8449,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:26","nodeType":"VariableDeclaration","scope":8469,"src":"29205:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":8448,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:26"},"scope":8744,"src":"29151:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8494,"nodeType":"Block","src":"29761:148:26","statements":[{"expression":{"id":8482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8477,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8475,"src":"29771:10:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8472,"src":"29790:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8478,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:26","typeDescriptions":{}}},"id":8481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8483,"nodeType":"ExpressionStatement","src":"29771:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8484,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8475,"src":"29810:10:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8472,"src":"29824:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8493,"nodeType":"IfStatement","src":"29806:97:26","trueBody":{"id":8492,"nodeType":"Block","src":"29831:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:26","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8472,"src":"29886:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8487,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"29852:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8491,"nodeType":"RevertStatement","src":"29845:47:26"}]}}]},"documentation":{"id":8470,"nodeType":"StructuredDocumentation","src":"29377:307:26","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8495,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:26","nodeType":"FunctionDefinition","parameters":{"id":8473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8472,"mutability":"mutable","name":"value","nameLocation":"29713:5:26","nodeType":"VariableDeclaration","scope":8495,"src":"29706:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8471,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:26"},"returnParameters":{"id":8476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8475,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:26","nodeType":"VariableDeclaration","scope":8495,"src":"29743:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8474,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:26"},"scope":8744,"src":"29689:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8520,"nodeType":"Block","src":"30299:148:26","statements":[{"expression":{"id":8508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8503,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8501,"src":"30309:10:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8498,"src":"30328:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8504,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:26","typeDescriptions":{}}},"id":8507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8509,"nodeType":"ExpressionStatement","src":"30309:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8510,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8501,"src":"30348:10:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8498,"src":"30362:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8519,"nodeType":"IfStatement","src":"30344:97:26","trueBody":{"id":8518,"nodeType":"Block","src":"30369:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8498,"src":"30424:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8513,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"30390:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8517,"nodeType":"RevertStatement","src":"30383:47:26"}]}}]},"documentation":{"id":8496,"nodeType":"StructuredDocumentation","src":"29915:307:26","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8521,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:26","nodeType":"FunctionDefinition","parameters":{"id":8499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8498,"mutability":"mutable","name":"value","nameLocation":"30251:5:26","nodeType":"VariableDeclaration","scope":8521,"src":"30244:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8497,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:26"},"returnParameters":{"id":8502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8501,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:26","nodeType":"VariableDeclaration","scope":8521,"src":"30281:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8500,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:26"},"scope":8744,"src":"30227:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8546,"nodeType":"Block","src":"30837:148:26","statements":[{"expression":{"id":8534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8529,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8527,"src":"30847:10:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8524,"src":"30866:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8530,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:26","typeDescriptions":{}}},"id":8533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8535,"nodeType":"ExpressionStatement","src":"30847:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8536,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8527,"src":"30886:10:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8524,"src":"30900:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8545,"nodeType":"IfStatement","src":"30882:97:26","trueBody":{"id":8544,"nodeType":"Block","src":"30907:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:26","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8524,"src":"30962:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8539,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"30928:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8543,"nodeType":"RevertStatement","src":"30921:47:26"}]}}]},"documentation":{"id":8522,"nodeType":"StructuredDocumentation","src":"30453:307:26","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8547,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:26","nodeType":"FunctionDefinition","parameters":{"id":8525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8524,"mutability":"mutable","name":"value","nameLocation":"30789:5:26","nodeType":"VariableDeclaration","scope":8547,"src":"30782:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8523,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:26"},"returnParameters":{"id":8528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8527,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:26","nodeType":"VariableDeclaration","scope":8547,"src":"30819:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8526,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:26"},"scope":8744,"src":"30765:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8572,"nodeType":"Block","src":"31375:148:26","statements":[{"expression":{"id":8560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"31385:10:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8550,"src":"31404:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8556,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:26","typeDescriptions":{}}},"id":8559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8561,"nodeType":"ExpressionStatement","src":"31385:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8562,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"31424:10:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8550,"src":"31438:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8571,"nodeType":"IfStatement","src":"31420:97:26","trueBody":{"id":8570,"nodeType":"Block","src":"31445:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8550,"src":"31500:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8565,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"31466:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8569,"nodeType":"RevertStatement","src":"31459:47:26"}]}}]},"documentation":{"id":8548,"nodeType":"StructuredDocumentation","src":"30991:307:26","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8573,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:26","nodeType":"FunctionDefinition","parameters":{"id":8551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8550,"mutability":"mutable","name":"value","nameLocation":"31327:5:26","nodeType":"VariableDeclaration","scope":8573,"src":"31320:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8549,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:26"},"returnParameters":{"id":8554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8553,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:26","nodeType":"VariableDeclaration","scope":8573,"src":"31357:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8552,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:26"},"scope":8744,"src":"31303:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8598,"nodeType":"Block","src":"31913:148:26","statements":[{"expression":{"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8581,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"31923:10:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"31942:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8582,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:26","typeDescriptions":{}}},"id":8585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8587,"nodeType":"ExpressionStatement","src":"31923:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8588,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8579,"src":"31962:10:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"31976:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8597,"nodeType":"IfStatement","src":"31958:97:26","trueBody":{"id":8596,"nodeType":"Block","src":"31983:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:26","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"32038:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8591,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"32004:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8595,"nodeType":"RevertStatement","src":"31997:47:26"}]}}]},"documentation":{"id":8574,"nodeType":"StructuredDocumentation","src":"31529:307:26","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8599,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:26","nodeType":"FunctionDefinition","parameters":{"id":8577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8576,"mutability":"mutable","name":"value","nameLocation":"31865:5:26","nodeType":"VariableDeclaration","scope":8599,"src":"31858:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8575,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:26"},"returnParameters":{"id":8580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8579,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:26","nodeType":"VariableDeclaration","scope":8599,"src":"31895:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8578,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:26"},"scope":8744,"src":"31841:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8624,"nodeType":"Block","src":"32451:148:26","statements":[{"expression":{"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8607,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"32461:10:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"32480:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8608,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:26","typeDescriptions":{}}},"id":8611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8613,"nodeType":"ExpressionStatement","src":"32461:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8614,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"32500:10:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"32514:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8623,"nodeType":"IfStatement","src":"32496:97:26","trueBody":{"id":8622,"nodeType":"Block","src":"32521:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"32576:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8617,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"32542:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8621,"nodeType":"RevertStatement","src":"32535:47:26"}]}}]},"documentation":{"id":8600,"nodeType":"StructuredDocumentation","src":"32067:307:26","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8625,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:26","nodeType":"FunctionDefinition","parameters":{"id":8603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8602,"mutability":"mutable","name":"value","nameLocation":"32403:5:26","nodeType":"VariableDeclaration","scope":8625,"src":"32396:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8601,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:26"},"returnParameters":{"id":8606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8605,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:26","nodeType":"VariableDeclaration","scope":8625,"src":"32433:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8604,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:26"},"scope":8744,"src":"32379:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8650,"nodeType":"Block","src":"32989:148:26","statements":[{"expression":{"id":8638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8633,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8631,"src":"32999:10:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8628,"src":"33018:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8634,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:26","typeDescriptions":{}}},"id":8637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8639,"nodeType":"ExpressionStatement","src":"32999:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8640,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8631,"src":"33038:10:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8628,"src":"33052:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8649,"nodeType":"IfStatement","src":"33034:97:26","trueBody":{"id":8648,"nodeType":"Block","src":"33059:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8628,"src":"33114:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8643,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"33080:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8647,"nodeType":"RevertStatement","src":"33073:47:26"}]}}]},"documentation":{"id":8626,"nodeType":"StructuredDocumentation","src":"32605:307:26","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8651,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:26","nodeType":"FunctionDefinition","parameters":{"id":8629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8628,"mutability":"mutable","name":"value","nameLocation":"32941:5:26","nodeType":"VariableDeclaration","scope":8651,"src":"32934:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8627,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:26"},"returnParameters":{"id":8632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8631,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:26","nodeType":"VariableDeclaration","scope":8651,"src":"32971:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8630,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:26"},"scope":8744,"src":"32917:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8676,"nodeType":"Block","src":"33527:148:26","statements":[{"expression":{"id":8664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8659,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8657,"src":"33537:10:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8654,"src":"33556:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8660,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:26","typeDescriptions":{}}},"id":8663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8665,"nodeType":"ExpressionStatement","src":"33537:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8666,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8657,"src":"33576:10:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8654,"src":"33590:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8675,"nodeType":"IfStatement","src":"33572:97:26","trueBody":{"id":8674,"nodeType":"Block","src":"33597:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8654,"src":"33652:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8669,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"33618:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8673,"nodeType":"RevertStatement","src":"33611:47:26"}]}}]},"documentation":{"id":8652,"nodeType":"StructuredDocumentation","src":"33143:307:26","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8677,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:26","nodeType":"FunctionDefinition","parameters":{"id":8655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8654,"mutability":"mutable","name":"value","nameLocation":"33479:5:26","nodeType":"VariableDeclaration","scope":8677,"src":"33472:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8653,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:26"},"returnParameters":{"id":8658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8657,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:26","nodeType":"VariableDeclaration","scope":8677,"src":"33509:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8656,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:26"},"scope":8744,"src":"33455:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8702,"nodeType":"Block","src":"34058:146:26","statements":[{"expression":{"id":8690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8685,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8683,"src":"34068:10:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8680,"src":"34086:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8686,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:26","typeDescriptions":{}}},"id":8689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8691,"nodeType":"ExpressionStatement","src":"34068:24:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8692,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8683,"src":"34106:10:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8680,"src":"34120:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8701,"nodeType":"IfStatement","src":"34102:96:26","trueBody":{"id":8700,"nodeType":"Block","src":"34127:71:26","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8680,"src":"34181:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8695,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"34148:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8699,"nodeType":"RevertStatement","src":"34141:46:26"}]}}]},"documentation":{"id":8678,"nodeType":"StructuredDocumentation","src":"33681:302:26","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8703,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:26","nodeType":"FunctionDefinition","parameters":{"id":8681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8680,"mutability":"mutable","name":"value","nameLocation":"34011:5:26","nodeType":"VariableDeclaration","scope":8703,"src":"34004:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8679,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:26"},"returnParameters":{"id":8684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8683,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:26","nodeType":"VariableDeclaration","scope":8703,"src":"34041:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8682,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:26"},"scope":8744,"src":"33988:216:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8732,"nodeType":"Block","src":"34444:250:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"34557:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8715,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8714,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:26","memberName":"max","nodeType":"MemberAccess","src":"34573:16:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8712,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:26","typeDescriptions":{}}},"id":8719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8726,"nodeType":"IfStatement","src":"34553:105:26","trueBody":{"id":8725,"nodeType":"Block","src":"34592:66:26","statements":[{"errorCall":{"arguments":[{"id":8722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"34641:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8721,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"34613:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8724,"nodeType":"RevertStatement","src":"34606:41:26"}]}},{"expression":{"arguments":[{"id":8729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"34681:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8727,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:26","typeDescriptions":{}}},"id":8730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8710,"id":8731,"nodeType":"Return","src":"34667:20:26"}]},"documentation":{"id":8704,"nodeType":"StructuredDocumentation","src":"34210:165:26","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8733,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:26","nodeType":"FunctionDefinition","parameters":{"id":8707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8706,"mutability":"mutable","name":"value","nameLocation":"34406:5:26","nodeType":"VariableDeclaration","scope":8733,"src":"34398:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8705,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:26"},"returnParameters":{"id":8710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8733,"src":"34436:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8708,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:26"},"scope":8744,"src":"34380:314:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8742,"nodeType":"Block","src":"34853:87:26","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:26","statements":[{"nodeType":"YulAssignment","src":"34902:22:26","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:26"},"nodeType":"YulFunctionCall","src":"34914:9:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:26"},"nodeType":"YulFunctionCall","src":"34907:17:26"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8736,"isOffset":false,"isSlot":false,"src":"34921:1:26","valueSize":1},{"declaration":8739,"isOffset":false,"isSlot":false,"src":"34902:1:26","valueSize":1}],"flags":["memory-safe"],"id":8741,"nodeType":"InlineAssembly","src":"34863:71:26"}]},"documentation":{"id":8734,"nodeType":"StructuredDocumentation","src":"34700:90:26","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8743,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:26","nodeType":"FunctionDefinition","parameters":{"id":8737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8736,"mutability":"mutable","name":"b","nameLocation":"34816:1:26","nodeType":"VariableDeclaration","scope":8743,"src":"34811:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8735,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:26"},"returnParameters":{"id":8740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8739,"mutability":"mutable","name":"u","nameLocation":"34850:1:26","nodeType":"VariableDeclaration","scope":8743,"src":"34842:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8738,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:26"},"scope":8744,"src":"34795:145:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8745,"src":"769:34173:26","usedErrors":[6989,6994,7001,7006],"usedEvents":[]}],"src":"192:34751:26"},"id":26},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8744],"SignedMath":[8888]},"id":8889,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8746,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8748,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8889,"sourceUnit":8745,"src":"135:40:27","symbolAliases":[{"foreign":{"id":8747,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"143:8:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8749,"nodeType":"StructuredDocumentation","src":"177:80:27","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8888,"linearizedBaseContracts":[8888],"name":"SignedMath","nameLocation":"266:10:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":8778,"nodeType":"Block","src":"746:215:27","statements":[{"id":8777,"nodeType":"UncheckedBlock","src":"756:199:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8761,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8756,"src":"894:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8762,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"900:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8763,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8756,"src":"904:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8770,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8752,"src":"932:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8768,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"916:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8744_$","typeString":"type(library SafeCast)"}},"id":8769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8743,"src":"916:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8766,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:27","typeDescriptions":{}}},"id":8772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8760,"id":8776,"nodeType":"Return","src":"887:57:27"}]}]},"documentation":{"id":8750,"nodeType":"StructuredDocumentation","src":"283:374:27","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8779,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:27","nodeType":"FunctionDefinition","parameters":{"id":8757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8752,"mutability":"mutable","name":"condition","nameLocation":"684:9:27","nodeType":"VariableDeclaration","scope":8779,"src":"679:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8751,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8754,"mutability":"mutable","name":"a","nameLocation":"702:1:27","nodeType":"VariableDeclaration","scope":8779,"src":"695:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8753,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8756,"mutability":"mutable","name":"b","nameLocation":"712:1:27","nodeType":"VariableDeclaration","scope":8779,"src":"705:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8755,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:27"},"returnParameters":{"id":8760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8779,"src":"738:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8758,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:27"},"scope":8888,"src":"662:299:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8797,"nodeType":"Block","src":"1102:44:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8790,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8782,"src":"1127:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8791,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8784,"src":"1131:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8793,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8782,"src":"1134:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8794,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8784,"src":"1137:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8789,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8779,"src":"1119:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8788,"id":8796,"nodeType":"Return","src":"1112:27:27"}]},"documentation":{"id":8780,"nodeType":"StructuredDocumentation","src":"967:66:27","text":" @dev Returns the largest of two signed numbers."},"id":8798,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:27","nodeType":"FunctionDefinition","parameters":{"id":8785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8782,"mutability":"mutable","name":"a","nameLocation":"1058:1:27","nodeType":"VariableDeclaration","scope":8798,"src":"1051:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8781,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8784,"mutability":"mutable","name":"b","nameLocation":"1068:1:27","nodeType":"VariableDeclaration","scope":8798,"src":"1061:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8783,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:27"},"returnParameters":{"id":8788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8798,"src":"1094:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8786,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:27"},"scope":8888,"src":"1038:108:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8816,"nodeType":"Block","src":"1288:44:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8801,"src":"1313:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8810,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"1317:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8812,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8801,"src":"1320:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8813,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"1323:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8808,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8779,"src":"1305:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8807,"id":8815,"nodeType":"Return","src":"1298:27:27"}]},"documentation":{"id":8799,"nodeType":"StructuredDocumentation","src":"1152:67:27","text":" @dev Returns the smallest of two signed numbers."},"id":8817,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:27","nodeType":"FunctionDefinition","parameters":{"id":8804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8801,"mutability":"mutable","name":"a","nameLocation":"1244:1:27","nodeType":"VariableDeclaration","scope":8817,"src":"1237:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8800,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8803,"mutability":"mutable","name":"b","nameLocation":"1254:1:27","nodeType":"VariableDeclaration","scope":8817,"src":"1247:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8802,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:27"},"returnParameters":{"id":8807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8817,"src":"1280:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8805,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:27"},"scope":8888,"src":"1224:108:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8860,"nodeType":"Block","src":"1537:162:27","statements":[{"assignments":[8828],"declarations":[{"constant":false,"id":8828,"mutability":"mutable","name":"x","nameLocation":"1606:1:27","nodeType":"VariableDeclaration","scope":8860,"src":"1599:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8827,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8841,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8829,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8820,"src":"1611:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8830,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8822,"src":"1615:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8833,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8820,"src":"1622:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8834,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8822,"src":"1626:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:27"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8842,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8828,"src":"1651:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8847,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8828,"src":"1671:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:27","typeDescriptions":{}}},"id":8848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8843,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:27","typeDescriptions":{}}},"id":8851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8852,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8820,"src":"1685:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8853,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8822,"src":"1689:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8826,"id":8859,"nodeType":"Return","src":"1644:48:27"}]},"documentation":{"id":8818,"nodeType":"StructuredDocumentation","src":"1338:126:27","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8861,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:27","nodeType":"FunctionDefinition","parameters":{"id":8823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8820,"mutability":"mutable","name":"a","nameLocation":"1493:1:27","nodeType":"VariableDeclaration","scope":8861,"src":"1486:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8819,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8822,"mutability":"mutable","name":"b","nameLocation":"1503:1:27","nodeType":"VariableDeclaration","scope":8861,"src":"1496:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8821,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:27"},"returnParameters":{"id":8826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8861,"src":"1529:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8824,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:27"},"scope":8888,"src":"1469:230:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8886,"nodeType":"Block","src":"1843:767:27","statements":[{"id":8885,"nodeType":"UncheckedBlock","src":"1853:751:27","statements":[{"assignments":[8870],"declarations":[{"constant":false,"id":8870,"mutability":"mutable","name":"mask","nameLocation":"2424:4:27","nodeType":"VariableDeclaration","scope":8885,"src":"2417:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8869,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8874,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8871,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8864,"src":"2431:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8877,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8864,"src":"2576:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8878,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8870,"src":"2580:4:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8881,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8870,"src":"2588:4:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8875,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:27","typeDescriptions":{}}},"id":8883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8868,"id":8884,"nodeType":"Return","src":"2560:33:27"}]}]},"documentation":{"id":8862,"nodeType":"StructuredDocumentation","src":"1705:78:27","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8887,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:27","nodeType":"FunctionDefinition","parameters":{"id":8865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8864,"mutability":"mutable","name":"n","nameLocation":"1808:1:27","nodeType":"VariableDeclaration","scope":8887,"src":"1801:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8863,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:27"},"returnParameters":{"id":8868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8887,"src":"1834:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:27"},"scope":8888,"src":"1788:822:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8889,"src":"258:2354:27","usedErrors":[],"usedEvents":[]}],"src":"109:2504:27"},"id":27},"contracts/Hashpin.sol":{"ast":{"absolutePath":"contracts/Hashpin.sol","exportedSymbols":{"Context":[3831],"Hashpin":[9374],"IHashpinNFT":[9746],"Ownable":[147]},"id":9375,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8890,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:28"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8891,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9375,"sourceUnit":148,"src":"58:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IHashpinNFT.sol","file":"./interfaces/IHashpinNFT.sol","id":8892,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9375,"sourceUnit":9747,"src":"111:38:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8894,"name":"Ownable","nameLocations":["293:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"293:7:28"},"id":8895,"nodeType":"InheritanceSpecifier","src":"293:7:28"}],"canonicalName":"Hashpin","contractDependencies":[],"contractKind":"contract","documentation":{"id":8893,"nodeType":"StructuredDocumentation","src":"151:121:28","text":" @title Hashpin\n @dev A protocol for pinning cryptographic hashes to the blockchain and claiming them as NFTs"},"fullyImplemented":true,"id":9374,"linearizedBaseContracts":[9374,147,3831],"name":"Hashpin","nameLocation":"282:7:28","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"e4bba2d0223259da1a7581431df71e45609917cfb573b4d2c434499441f23ea1","id":8905,"name":"HashPinned","nameLocation":"327:10:28","nodeType":"EventDefinition","parameters":{"id":8904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8897,"indexed":true,"mutability":"mutable","name":"pinner","nameLocation":"354:6:28","nodeType":"VariableDeclaration","scope":8905,"src":"338:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8896,"name":"address","nodeType":"ElementaryTypeName","src":"338:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8899,"indexed":true,"mutability":"mutable","name":"powHash","nameLocation":"378:7:28","nodeType":"VariableDeclaration","scope":8905,"src":"362:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"362:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8901,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"394:8:28","nodeType":"VariableDeclaration","scope":8905,"src":"387:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8900,"name":"string","nodeType":"ElementaryTypeName","src":"387:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8903,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"412:9:28","nodeType":"VariableDeclaration","scope":8905,"src":"404:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8902,"name":"uint256","nodeType":"ElementaryTypeName","src":"404:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"337:85:28"},"src":"321:102:28"},{"anonymous":false,"eventSelector":"5a790c48cbebdceff3f1fcd445afd12d57302b7196738d61c60dcd491bf3efba","id":8909,"name":"DifficultyUpdated","nameLocation":"434:17:28","nodeType":"EventDefinition","parameters":{"id":8908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8907,"indexed":false,"mutability":"mutable","name":"newDifficulty","nameLocation":"460:13:28","nodeType":"VariableDeclaration","scope":8909,"src":"452:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8906,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"451:23:28"},"src":"428:47:28"},{"anonymous":false,"eventSelector":"3d095c3b92d17d84e3cd9810eb5ad0a1e7e5934d567f1cb32e60c78596368c77","id":8919,"name":"HashClaimed","nameLocation":"486:11:28","nodeType":"EventDefinition","parameters":{"id":8918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8911,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"514:7:28","nodeType":"VariableDeclaration","scope":8919,"src":"498:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8910,"name":"address","nodeType":"ElementaryTypeName","src":"498:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8913,"indexed":true,"mutability":"mutable","name":"hash","nameLocation":"539:4:28","nodeType":"VariableDeclaration","scope":8919,"src":"523:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"523:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8915,"indexed":true,"mutability":"mutable","name":"adapter","nameLocation":"561:7:28","nodeType":"VariableDeclaration","scope":8919,"src":"545:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8914,"name":"address","nodeType":"ElementaryTypeName","src":"545:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8917,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"578:7:28","nodeType":"VariableDeclaration","scope":8919,"src":"570:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8916,"name":"uint256","nodeType":"ElementaryTypeName","src":"570:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:89:28"},"src":"480:107:28"},{"anonymous":false,"eventSelector":"3cece36ac6216147f57b10bb30975f82b18b8b290a7925c322277e684afcce4a","id":8925,"name":"AdapterWhitelisted","nameLocation":"598:18:28","nodeType":"EventDefinition","parameters":{"id":8924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8921,"indexed":true,"mutability":"mutable","name":"adapter","nameLocation":"633:7:28","nodeType":"VariableDeclaration","scope":8925,"src":"617:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8920,"name":"address","nodeType":"ElementaryTypeName","src":"617:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8923,"indexed":false,"mutability":"mutable","name":"whitelisted","nameLocation":"647:11:28","nodeType":"VariableDeclaration","scope":8925,"src":"642:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8922,"name":"bool","nodeType":"ElementaryTypeName","src":"642:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"616:43:28"},"src":"592:68:28"},{"canonicalName":"Hashpin.PinnedHash","id":8932,"members":[{"constant":false,"id":8927,"mutability":"mutable","name":"pinner","nameLocation":"721:6:28","nodeType":"VariableDeclaration","scope":8932,"src":"713:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8926,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8929,"mutability":"mutable","name":"metadata","nameLocation":"744:8:28","nodeType":"VariableDeclaration","scope":8932,"src":"737:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8928,"name":"string","nodeType":"ElementaryTypeName","src":"737:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8931,"mutability":"mutable","name":"timestamp","nameLocation":"770:9:28","nodeType":"VariableDeclaration","scope":8932,"src":"762:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8930,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PinnedHash","nameLocation":"692:10:28","nodeType":"StructDefinition","scope":9374,"src":"685:101:28","visibility":"public"},{"constant":false,"functionSelector":"95314d51","id":8937,"mutability":"mutable","name":"pinnedHashes","nameLocation":"857:12:28","nodeType":"VariableDeclaration","scope":9374,"src":"819:50:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_PinnedHash_$8932_storage_$","typeString":"mapping(bytes32 => struct Hashpin.PinnedHash)"},"typeName":{"id":8936,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"827:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"819:30:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_PinnedHash_$8932_storage_$","typeString":"mapping(bytes32 => struct Hashpin.PinnedHash)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8935,"nodeType":"UserDefinedTypeName","pathNode":{"id":8934,"name":"PinnedHash","nameLocations":["838:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":8932,"src":"838:10:28"},"referencedDeclaration":8932,"src":"838:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage_ptr","typeString":"struct Hashpin.PinnedHash"}}},"visibility":"public"},{"constant":false,"functionSelector":"5c062d6c","id":8939,"mutability":"mutable","name":"currentDifficulty","nameLocation":"927:17:28","nodeType":"VariableDeclaration","scope":9374,"src":"912:32:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8938,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"d3ed2409","id":8942,"mutability":"constant","name":"INITIAL_DIFFICULTY","nameLocation":"1011:18:28","nodeType":"VariableDeclaration","scope":9374,"src":"987:46:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8940,"name":"uint256","nodeType":"ElementaryTypeName","src":"987:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":8941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1032:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"public"},{"constant":false,"functionSelector":"b893cce2","id":8946,"mutability":"mutable","name":"whitelistedAdapters","nameLocation":"1139:19:28","nodeType":"VariableDeclaration","scope":9374,"src":"1107:51:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":8945,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8943,"name":"address","nodeType":"ElementaryTypeName","src":"1115:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1107:24:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8944,"name":"bool","nodeType":"ElementaryTypeName","src":"1126:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":8957,"nodeType":"Block","src":"1203:55:28","statements":[{"expression":{"id":8955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8953,"name":"currentDifficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8939,"src":"1213:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8954,"name":"INITIAL_DIFFICULTY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8942,"src":"1233:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1213:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8956,"nodeType":"ExpressionStatement","src":"1213:38:28"}]},"id":8958,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":8949,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1191:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1195:6:28","memberName":"sender","nodeType":"MemberAccess","src":"1191:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8951,"kind":"baseConstructorSpecifier","modifierName":{"id":8948,"name":"Ownable","nameLocations":["1183:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1183:7:28"},"nodeType":"ModifierInvocation","src":"1183:19:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8947,"nodeType":"ParameterList","parameters":[],"src":"1180:2:28"},"returnParameters":{"id":8952,"nodeType":"ParameterList","parameters":[],"src":"1203:0:28"},"scope":9374,"src":"1169:89:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9036,"nodeType":"Block","src":"1613:824:28","statements":[{"assignments":[8967],"declarations":[{"constant":false,"id":8967,"mutability":"mutable","name":"fullBytes","nameLocation":"1698:9:28","nodeType":"VariableDeclaration","scope":9036,"src":"1690:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1690:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8971,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8968,"name":"currentDifficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8939,"src":"1710:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"38","id":8969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1730:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1710:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1690:41:28"},{"assignments":[8973],"declarations":[{"constant":false,"id":8973,"mutability":"mutable","name":"remainingBits","nameLocation":"1749:13:28","nodeType":"VariableDeclaration","scope":9036,"src":"1741:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8972,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8977,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8974,"name":"currentDifficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8939,"src":"1765:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"38","id":8975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1785:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1765:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1741:45:28"},{"body":{"id":9000,"nodeType":"Block","src":"1896:94:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":8990,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8961,"src":"1920:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8992,"indexExpression":{"id":8991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8979,"src":"1925:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1920:7:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":8989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8988,"name":"uint8","nodeType":"ElementaryTypeName","src":"1914:5:28","typeDescriptions":{}}},"id":8993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1932:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1914:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8999,"nodeType":"IfStatement","src":"1910:70:28","trueBody":{"id":8998,"nodeType":"Block","src":"1935:45:28","statements":[{"expression":{"hexValue":"66616c7365","id":8996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1960:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8965,"id":8997,"nodeType":"Return","src":"1953:12:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8982,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8979,"src":"1876:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8983,"name":"fullBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8967,"src":"1880:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:13:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9001,"initializationExpression":{"assignments":[8979],"declarations":[{"constant":false,"id":8979,"mutability":"mutable","name":"i","nameLocation":"1869:1:28","nodeType":"VariableDeclaration","scope":9001,"src":"1861:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8981,"initialValue":{"hexValue":"30","id":8980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1873:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1861:13:28"},"loopExpression":{"expression":{"id":8986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1891:3:28","subExpression":{"id":8985,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8979,"src":"1891:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8987,"nodeType":"ExpressionStatement","src":"1891:3:28"},"nodeType":"ForStatement","src":"1856:134:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9002,"name":"remainingBits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8973,"src":"2051:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2067:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2051:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9033,"nodeType":"IfStatement","src":"2047:354:28","trueBody":{"id":9032,"nodeType":"Block","src":"2070:331:28","statements":[{"assignments":[9006],"declarations":[{"constant":false,"id":9006,"mutability":"mutable","name":"mask","nameLocation":"2185:4:28","nodeType":"VariableDeclaration","scope":9032,"src":"2179:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9005,"name":"uint8","nodeType":"ElementaryTypeName","src":"2179:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":9016,"initialValue":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":9015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"30784646","id":9009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}],"id":9008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2192:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":9007,"name":"uint8","nodeType":"ElementaryTypeName","src":"2192:5:28","typeDescriptions":{}}},"id":9010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":9011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2208:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9012,"name":"remainingBits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8973,"src":"2212:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2208:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2207:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2192:34:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"2179:47:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":9027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":9024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":9019,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8961,"src":"2315:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9021,"indexExpression":{"id":9020,"name":"fullBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8967,"src":"2320:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2315:15:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":9018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2309:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":9017,"name":"uint8","nodeType":"ElementaryTypeName","src":"2309:5:28","typeDescriptions":{}}},"id":9022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9023,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9006,"src":"2334:4:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2309:29:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":9025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2308:31:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2308:36:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9031,"nodeType":"IfStatement","src":"2304:87:28","trueBody":{"id":9030,"nodeType":"Block","src":"2346:45:28","statements":[{"expression":{"hexValue":"66616c7365","id":9028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2371:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8965,"id":9029,"nodeType":"Return","src":"2364:12:28"}]}}]}},{"expression":{"hexValue":"74727565","id":9034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2426:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":8965,"id":9035,"nodeType":"Return","src":"2419:11:28"}]},"documentation":{"id":8959,"nodeType":"StructuredDocumentation","src":"1268:274:28","text":" @notice Verifies if a provided hash meets the required difficulty\n @dev Difficulty is represented by the number of leading zero bits required\n @param hash The hash to verify\n @return bool True if the hash meets the difficulty requirement"},"functionSelector":"80a25abc","id":9037,"implemented":true,"kind":"function","modifiers":[],"name":"meetsDifficulty","nameLocation":"1556:15:28","nodeType":"FunctionDefinition","parameters":{"id":8962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8961,"mutability":"mutable","name":"hash","nameLocation":"1580:4:28","nodeType":"VariableDeclaration","scope":9037,"src":"1572:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1572:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1571:14:28"},"returnParameters":{"id":8965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9037,"src":"1607:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8963,"name":"bool","nodeType":"ElementaryTypeName","src":"1607:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1606:6:28"},"scope":9374,"src":"1547:890:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9109,"nodeType":"Block","src":"2904:803:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":9055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9050,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9040,"src":"2922:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2938:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2930:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2930:7:28","typeDescriptions":{}}},"id":9054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2930:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2922:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"486173682063616e6e6f7420626520656d707479","id":9056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2942:22:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_598457107a7abae200ae7e953bc41c27a5b232e6eebc911f8bf716d6a0b11258","typeString":"literal_string \"Hash cannot be empty\""},"value":"Hash cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_598457107a7abae200ae7e953bc41c27a5b232e6eebc911f8bf716d6a0b11258","typeString":"literal_string \"Hash cannot be empty\""}],"id":9049,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2914:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2914:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9058,"nodeType":"ExpressionStatement","src":"2914:51:28"},{"assignments":[9060],"declarations":[{"constant":false,"id":9060,"mutability":"mutable","name":"powHash","nameLocation":"3036:7:28","nodeType":"VariableDeclaration","scope":9109,"src":"3028:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3028:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9068,"initialValue":{"arguments":[{"arguments":[{"id":9064,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9040,"src":"3073:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9065,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9042,"src":"3079:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9062,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3056:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3060:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"3056:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3056:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9061,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3046:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3028:58:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":9070,"name":"pinnedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"3164:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_PinnedHash_$8932_storage_$","typeString":"mapping(bytes32 => struct Hashpin.PinnedHash storage ref)"}},"id":9072,"indexExpression":{"id":9071,"name":"powHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"3177:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3164:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage","typeString":"struct Hashpin.PinnedHash storage ref"}},"id":9073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3186:9:28","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":8931,"src":"3164:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3199:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3164:36:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4861736820616c72656164792070696e6e6564","id":9076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3202:21:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_5014a9a8ebb91f3f7d1f9c8268519c975f146564f008dddc6722ad0689be85d7","typeString":"literal_string \"Hash already pinned\""},"value":"Hash already pinned"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5014a9a8ebb91f3f7d1f9c8268519c975f146564f008dddc6722ad0689be85d7","typeString":"literal_string \"Hash already pinned\""}],"id":9069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3156:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3156:68:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9078,"nodeType":"ExpressionStatement","src":"3156:68:28"},{"expression":{"arguments":[{"arguments":[{"id":9081,"name":"powHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"3299:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9080,"name":"meetsDifficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9037,"src":"3283:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":9082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3283:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4861736820646f6573206e6f74206d65657420646966666963756c747920726571756972656d656e74","id":9083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3309:43:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_e392b938160012a83dd91d0d152871d87bf802079f71bc28e807a2d5a3c01b3f","typeString":"literal_string \"Hash does not meet difficulty requirement\""},"value":"Hash does not meet difficulty requirement"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e392b938160012a83dd91d0d152871d87bf802079f71bc28e807a2d5a3c01b3f","typeString":"literal_string \"Hash does not meet difficulty requirement\""}],"id":9079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3275:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3275:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9085,"nodeType":"ExpressionStatement","src":"3275:78:28"},{"expression":{"id":9096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9086,"name":"pinnedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"3413:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_PinnedHash_$8932_storage_$","typeString":"mapping(bytes32 => struct Hashpin.PinnedHash storage ref)"}},"id":9088,"indexExpression":{"id":9087,"name":"powHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"3426:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3413:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage","typeString":"struct Hashpin.PinnedHash storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":9090,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3470:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3474:6:28","memberName":"sender","nodeType":"MemberAccess","src":"3470:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9092,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"3504:8:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":9093,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3537:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3543:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"3537:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9089,"name":"PinnedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"3437:10:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PinnedHash_$8932_storage_ptr_$","typeString":"type(struct Hashpin.PinnedHash storage pointer)"}},"id":9095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3462:6:28","3494:8:28","3526:9:28"],"names":["pinner","metadata","timestamp"],"nodeType":"FunctionCall","src":"3437:126:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_memory_ptr","typeString":"struct Hashpin.PinnedHash memory"}},"src":"3413:150:28","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage","typeString":"struct Hashpin.PinnedHash storage ref"}},"id":9097,"nodeType":"ExpressionStatement","src":"3413:150:28"},{"eventCall":{"arguments":[{"expression":{"id":9099,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3620:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3624:6:28","memberName":"sender","nodeType":"MemberAccess","src":"3620:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9101,"name":"powHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"3632:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9102,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"3641:8:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":9103,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3651:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"3651:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9098,"name":"HashPinned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"3609:10:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,string memory,uint256)"}},"id":9105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3609:58:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9106,"nodeType":"EmitStatement","src":"3604:63:28"},{"expression":{"id":9107,"name":"powHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"3693:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9048,"id":9108,"nodeType":"Return","src":"3686:14:28"}]},"documentation":{"id":9038,"nodeType":"StructuredDocumentation","src":"2451:349:28","text":" @dev Pin a hash to the blockchain with proof of work\n @param hash The hash to pin (could be a single hash or a merkle root)\n @param nonce The nonce used to meet the difficulty requirement\n @param metadata Optional metadata associated with the hash\n @return powHash The proof-of-work hash that was generated"},"functionSelector":"4c8460a1","id":9110,"implemented":true,"kind":"function","modifiers":[],"name":"pinHash","nameLocation":"2814:7:28","nodeType":"FunctionDefinition","parameters":{"id":9045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9040,"mutability":"mutable","name":"hash","nameLocation":"2830:4:28","nodeType":"VariableDeclaration","scope":9110,"src":"2822:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9042,"mutability":"mutable","name":"nonce","nameLocation":"2844:5:28","nodeType":"VariableDeclaration","scope":9110,"src":"2836:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9041,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9044,"mutability":"mutable","name":"metadata","nameLocation":"2867:8:28","nodeType":"VariableDeclaration","scope":9110,"src":"2851:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":9043,"name":"string","nodeType":"ElementaryTypeName","src":"2851:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2821:55:28"},"returnParameters":{"id":9048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9110,"src":"2895:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2895:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2894:9:28"},"scope":9374,"src":"2805:902:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9221,"nodeType":"Block","src":"4262:1265:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9126,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9116,"src":"4280:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":9127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4292:6:28","memberName":"length","nodeType":"MemberAccess","src":"4280:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4301:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4280:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c652070726f6f66206d75737420696e636c756465206174206c6561737420746865206e6f6e6365","id":9130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4304:46:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_f880b54ed3054d94e6d073c5cc65d4a58c8b3077b4a2ae74b173c261849a2379","typeString":"literal_string \"Merkle proof must include at least the nonce\""},"value":"Merkle proof must include at least the nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f880b54ed3054d94e6d073c5cc65d4a58c8b3077b4a2ae74b173c261849a2379","typeString":"literal_string \"Merkle proof must include at least the nonce\""}],"id":9125,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4272:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:79:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9132,"nodeType":"ExpressionStatement","src":"4272:79:28"},{"assignments":[9134],"declarations":[{"constant":false,"id":9134,"mutability":"mutable","name":"currentHash","nameLocation":"4418:11:28","nodeType":"VariableDeclaration","scope":9221,"src":"4410:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4410:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9136,"initialValue":{"id":9135,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9113,"src":"4432:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4410:26:28"},{"body":{"id":9160,"nodeType":"Block","src":"4589:159:28","statements":[{"expression":{"id":9158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9148,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9134,"src":"4667:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":9152,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9134,"src":"4708:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":9153,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9116,"src":"4721:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":9155,"indexExpression":{"id":9154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9138,"src":"4733:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4721:14:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":9150,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4691:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4695:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"4691:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4691:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9149,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4681:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4681:56:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4667:70:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9159,"nodeType":"ExpressionStatement","src":"4667:70:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9141,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9138,"src":"4560:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9142,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9116,"src":"4564:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":9143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4576:6:28","memberName":"length","nodeType":"MemberAccess","src":"4564:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4560:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9161,"initializationExpression":{"assignments":[9138],"declarations":[{"constant":false,"id":9138,"mutability":"mutable","name":"i","nameLocation":"4553:1:28","nodeType":"VariableDeclaration","scope":9161,"src":"4545:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9137,"name":"uint256","nodeType":"ElementaryTypeName","src":"4545:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9140,"initialValue":{"hexValue":"30","id":9139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4557:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4545:13:28"},"loopExpression":{"expression":{"id":9146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4584:3:28","subExpression":{"id":9145,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9138,"src":"4584:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9147,"nodeType":"ExpressionStatement","src":"4584:3:28"},"nodeType":"ForStatement","src":"4540:208:28"},{"assignments":[9163],"declarations":[{"constant":false,"id":9163,"mutability":"mutable","name":"powHash","nameLocation":"4853:7:28","nodeType":"VariableDeclaration","scope":9221,"src":"4845:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9165,"initialValue":{"id":9164,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9134,"src":"4863:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4845:29:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":9167,"name":"pinnedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"4966:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_PinnedHash_$8932_storage_$","typeString":"mapping(bytes32 => struct Hashpin.PinnedHash storage ref)"}},"id":9169,"indexExpression":{"id":9168,"name":"powHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9163,"src":"4979:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4966:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage","typeString":"struct Hashpin.PinnedHash storage ref"}},"id":9170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4988:9:28","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":8931,"src":"4966:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5000:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4966:35:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"48617368206e6f7420666f756e64","id":9173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5003:16:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_913db5539dd5498f2d4f22507c7955fa40c01c4197f0a1928f9e953889ed79ff","typeString":"literal_string \"Hash not found\""},"value":"Hash not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_913db5539dd5498f2d4f22507c7955fa40c01c4197f0a1928f9e953889ed79ff","typeString":"literal_string \"Hash not found\""}],"id":9166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4958:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4958:62:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9175,"nodeType":"ExpressionStatement","src":"4958:62:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":9177,"name":"pinnedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"5038:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_PinnedHash_$8932_storage_$","typeString":"mapping(bytes32 => struct Hashpin.PinnedHash storage ref)"}},"id":9179,"indexExpression":{"id":9178,"name":"powHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9163,"src":"5051:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5038:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage","typeString":"struct Hashpin.PinnedHash storage ref"}},"id":9180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5060:6:28","memberName":"pinner","nodeType":"MemberAccess","referencedDeclaration":8927,"src":"5038:28:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9181,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5070:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5074:6:28","memberName":"sender","nodeType":"MemberAccess","src":"5070:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5038:42:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79207468652070696e6e65722063616e20636c61696d20746869732068617368","id":9184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5082:37:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_cd421abfd59df9c3fa903e2aac4e0be988669d73bafed047c6f76015bd921f05","typeString":"literal_string \"Only the pinner can claim this hash\""},"value":"Only the pinner can claim this hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cd421abfd59df9c3fa903e2aac4e0be988669d73bafed047c6f76015bd921f05","typeString":"literal_string \"Only the pinner can claim this hash\""}],"id":9176,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5030:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5030:90:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9186,"nodeType":"ExpressionStatement","src":"5030:90:28"},{"expression":{"arguments":[{"baseExpression":{"id":9188,"name":"whitelistedAdapters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8946,"src":"5138:19:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9190,"indexExpression":{"id":9189,"name":"adapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9118,"src":"5158:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5138:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646170746572206e6f742077686974656c6973746564","id":9191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5168:25:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_6fa4cf7bb67e3bd955752d16a090c56646edecbe4299946d78f53807128f8496","typeString":"literal_string \"Adapter not whitelisted\""},"value":"Adapter not whitelisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6fa4cf7bb67e3bd955752d16a090c56646edecbe4299946d78f53807128f8496","typeString":"literal_string \"Adapter not whitelisted\""}],"id":9187,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5130:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5130:64:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9193,"nodeType":"ExpressionStatement","src":"5130:64:28"},{"assignments":[9196],"declarations":[{"constant":false,"id":9196,"mutability":"mutable","name":"nftAdapter","nameLocation":"5290:10:28","nodeType":"VariableDeclaration","scope":9221,"src":"5278:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHashpinNFT_$9746","typeString":"contract IHashpinNFT"},"typeName":{"id":9195,"nodeType":"UserDefinedTypeName","pathNode":{"id":9194,"name":"IHashpinNFT","nameLocations":["5278:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":9746,"src":"5278:11:28"},"referencedDeclaration":9746,"src":"5278:11:28","typeDescriptions":{"typeIdentifier":"t_contract$_IHashpinNFT_$9746","typeString":"contract IHashpinNFT"}},"visibility":"internal"}],"id":9200,"initialValue":{"arguments":[{"id":9198,"name":"adapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9118,"src":"5315:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9197,"name":"IHashpinNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9746,"src":"5303:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHashpinNFT_$9746_$","typeString":"type(contract IHashpinNFT)"}},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5303:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IHashpinNFT_$9746","typeString":"contract IHashpinNFT"}},"nodeType":"VariableDeclarationStatement","src":"5278:45:28"},{"assignments":[9202],"declarations":[{"constant":false,"id":9202,"mutability":"mutable","name":"tokenId","nameLocation":"5341:7:28","nodeType":"VariableDeclaration","scope":9221,"src":"5333:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9201,"name":"uint256","nodeType":"ElementaryTypeName","src":"5333:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9210,"initialValue":{"arguments":[{"expression":{"id":9205,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5367:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5371:6:28","memberName":"sender","nodeType":"MemberAccess","src":"5367:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9207,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9113,"src":"5379:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9208,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9120,"src":"5385:8:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":9203,"name":"nftAdapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9196,"src":"5351:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IHashpinNFT_$9746","typeString":"contract IHashpinNFT"}},"id":9204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5362:4:28","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":9737,"src":"5351:15:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,bytes32,bytes memory) external returns (uint256)"}},"id":9209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5351:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5333:61:28"},{"eventCall":{"arguments":[{"expression":{"id":9212,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5452:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:6:28","memberName":"sender","nodeType":"MemberAccess","src":"5452:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9214,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9113,"src":"5464:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9215,"name":"adapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9118,"src":"5470:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9216,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9202,"src":"5479:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9211,"name":"HashClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8919,"src":"5440:11:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,address,uint256)"}},"id":9217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:47:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9218,"nodeType":"EmitStatement","src":"5435:52:28"},{"expression":{"id":9219,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9202,"src":"5513:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9124,"id":9220,"nodeType":"Return","src":"5506:14:28"}]},"documentation":{"id":9111,"nodeType":"StructuredDocumentation","src":"3717:365:28","text":" @dev Claim a hash as an NFT using the specified adapter\n @param hash The hash to claim\n @param merkleProof The merkle proof (including the nonce as the last element)\n @param adapter The address of the NFT adapter to use\n @param metadata Additional metadata for the NFT\n @return tokenId The ID of the newly minted NFT"},"functionSelector":"79381a97","id":9222,"implemented":true,"kind":"function","modifiers":[],"name":"claimHash","nameLocation":"4096:9:28","nodeType":"FunctionDefinition","parameters":{"id":9121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9113,"mutability":"mutable","name":"hash","nameLocation":"4123:4:28","nodeType":"VariableDeclaration","scope":9222,"src":"4115:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4115:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9116,"mutability":"mutable","name":"merkleProof","nameLocation":"4157:11:28","nodeType":"VariableDeclaration","scope":9222,"src":"4138:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4138:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9115,"nodeType":"ArrayTypeName","src":"4138:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":9118,"mutability":"mutable","name":"adapter","nameLocation":"4187:7:28","nodeType":"VariableDeclaration","scope":9222,"src":"4179:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9117,"name":"address","nodeType":"ElementaryTypeName","src":"4179:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9120,"mutability":"mutable","name":"metadata","nameLocation":"4220:8:28","nodeType":"VariableDeclaration","scope":9222,"src":"4205:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9119,"name":"bytes","nodeType":"ElementaryTypeName","src":"4205:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4105:129:28"},"returnParameters":{"id":9124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9222,"src":"4253:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9122,"name":"uint256","nodeType":"ElementaryTypeName","src":"4253:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4252:9:28"},"scope":9374,"src":"4087:1440:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9243,"nodeType":"Block","src":"5808:114:28","statements":[{"expression":{"id":9236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9232,"name":"whitelistedAdapters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8946,"src":"5818:19:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9234,"indexExpression":{"id":9233,"name":"adapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9225,"src":"5838:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5818:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9235,"name":"whitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9227,"src":"5849:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5818:42:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9237,"nodeType":"ExpressionStatement","src":"5818:42:28"},{"eventCall":{"arguments":[{"id":9239,"name":"adapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9225,"src":"5894:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9240,"name":"whitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9227,"src":"5903:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9238,"name":"AdapterWhitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"5875:18:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":9241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5875:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9242,"nodeType":"EmitStatement","src":"5870:45:28"}]},"documentation":{"id":9223,"nodeType":"StructuredDocumentation","src":"5537:181:28","text":" @dev Whitelist or de-whitelist an NFT adapter\n @param adapter The address of the adapter\n @param whitelisted Whether the adapter should be whitelisted"},"functionSelector":"ebdfd6ec","id":9244,"implemented":true,"kind":"function","modifiers":[{"id":9230,"kind":"modifierInvocation","modifierName":{"id":9229,"name":"onlyOwner","nameLocations":["5798:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5798:9:28"},"nodeType":"ModifierInvocation","src":"5798:9:28"}],"name":"setAdapterWhitelisted","nameLocation":"5732:21:28","nodeType":"FunctionDefinition","parameters":{"id":9228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9225,"mutability":"mutable","name":"adapter","nameLocation":"5762:7:28","nodeType":"VariableDeclaration","scope":9244,"src":"5754:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9224,"name":"address","nodeType":"ElementaryTypeName","src":"5754:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9227,"mutability":"mutable","name":"whitelisted","nameLocation":"5776:11:28","nodeType":"VariableDeclaration","scope":9244,"src":"5771:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9226,"name":"bool","nodeType":"ElementaryTypeName","src":"5771:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5753:35:28"},"returnParameters":{"id":9231,"nodeType":"ParameterList","parameters":[],"src":"5808:0:28"},"scope":9374,"src":"5723:199:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9301,"nodeType":"Block","src":"6290:674:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9256,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9250,"src":"6308:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":9257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:6:28","memberName":"length","nodeType":"MemberAccess","src":"6308:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6329:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6308:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c652070726f6f66206d75737420696e636c756465206174206c6561737420746865206e6f6e6365","id":9260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6332:46:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_f880b54ed3054d94e6d073c5cc65d4a58c8b3077b4a2ae74b173c261849a2379","typeString":"literal_string \"Merkle proof must include at least the nonce\""},"value":"Merkle proof must include at least the nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f880b54ed3054d94e6d073c5cc65d4a58c8b3077b4a2ae74b173c261849a2379","typeString":"literal_string \"Merkle proof must include at least the nonce\""}],"id":9255,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6300:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6300:79:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9262,"nodeType":"ExpressionStatement","src":"6300:79:28"},{"assignments":[9264],"declarations":[{"constant":false,"id":9264,"mutability":"mutable","name":"currentHash","nameLocation":"6447:11:28","nodeType":"VariableDeclaration","scope":9301,"src":"6439:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6439:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9266,"initialValue":{"id":9265,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9247,"src":"6461:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6439:26:28"},{"body":{"id":9290,"nodeType":"Block","src":"6618:159:28","statements":[{"expression":{"id":9288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9278,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9264,"src":"6696:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":9282,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9264,"src":"6737:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":9283,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9250,"src":"6750:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":9285,"indexExpression":{"id":9284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9268,"src":"6762:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6750:14:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":9280,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6720:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6724:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"6720:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6720:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9279,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6710:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6710:56:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6696:70:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9289,"nodeType":"ExpressionStatement","src":"6696:70:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9271,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9268,"src":"6589:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9272,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9250,"src":"6593:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":9273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6605:6:28","memberName":"length","nodeType":"MemberAccess","src":"6593:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9291,"initializationExpression":{"assignments":[9268],"declarations":[{"constant":false,"id":9268,"mutability":"mutable","name":"i","nameLocation":"6582:1:28","nodeType":"VariableDeclaration","scope":9291,"src":"6574:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9267,"name":"uint256","nodeType":"ElementaryTypeName","src":"6574:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9270,"initialValue":{"hexValue":"30","id":9269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6586:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6574:13:28"},"loopExpression":{"expression":{"id":9276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6613:3:28","subExpression":{"id":9275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9268,"src":"6613:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9277,"nodeType":"ExpressionStatement","src":"6613:3:28"},"nodeType":"ForStatement","src":"6569:208:28"},{"assignments":[9293],"declarations":[{"constant":false,"id":9293,"mutability":"mutable","name":"powHash","nameLocation":"6882:7:28","nodeType":"VariableDeclaration","scope":9301,"src":"6874:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6874:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9295,"initialValue":{"id":9294,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9264,"src":"6892:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6874:29:28"},{"expression":{"expression":{"baseExpression":{"id":9296,"name":"pinnedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"6929:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_PinnedHash_$8932_storage_$","typeString":"mapping(bytes32 => struct Hashpin.PinnedHash storage ref)"}},"id":9298,"indexExpression":{"id":9297,"name":"powHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9293,"src":"6942:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6929:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage","typeString":"struct Hashpin.PinnedHash storage ref"}},"id":9299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6951:6:28","memberName":"pinner","nodeType":"MemberAccess","referencedDeclaration":8927,"src":"6929:28:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9254,"id":9300,"nodeType":"Return","src":"6922:35:28"}]},"documentation":{"id":9245,"nodeType":"StructuredDocumentation","src":"5932:255:28","text":" @dev Verify if a hash has been pinned\n @param hash The hash to verify\n @param merkleProof The merkle proof (including the nonce as the last element)\n @return address The address that pinned the hash, null if not pinned"},"functionSelector":"060c0bfc","id":9302,"implemented":true,"kind":"function","modifiers":[],"name":"verifyHash","nameLocation":"6201:10:28","nodeType":"FunctionDefinition","parameters":{"id":9251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9247,"mutability":"mutable","name":"hash","nameLocation":"6220:4:28","nodeType":"VariableDeclaration","scope":9302,"src":"6212:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6212:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9250,"mutability":"mutable","name":"merkleProof","nameLocation":"6245:11:28","nodeType":"VariableDeclaration","scope":9302,"src":"6226:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6226:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9249,"nodeType":"ArrayTypeName","src":"6226:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6211:46:28"},"returnParameters":{"id":9254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9302,"src":"6281:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9252,"name":"address","nodeType":"ElementaryTypeName","src":"6281:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6280:9:28"},"scope":9374,"src":"6192:772:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9339,"nodeType":"Block","src":"7429:285:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":9315,"name":"pinnedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"7447:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_PinnedHash_$8932_storage_$","typeString":"mapping(bytes32 => struct Hashpin.PinnedHash storage ref)"}},"id":9317,"indexExpression":{"id":9316,"name":"powHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9305,"src":"7460:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7447:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage","typeString":"struct Hashpin.PinnedHash storage ref"}},"id":9318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7469:9:28","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":8931,"src":"7447:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7481:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7447:35:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"48617368206e6f7420666f756e64","id":9321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7484:16:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_913db5539dd5498f2d4f22507c7955fa40c01c4197f0a1928f9e953889ed79ff","typeString":"literal_string \"Hash not found\""},"value":"Hash not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_913db5539dd5498f2d4f22507c7955fa40c01c4197f0a1928f9e953889ed79ff","typeString":"literal_string \"Hash not found\""}],"id":9314,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7439:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:62:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9323,"nodeType":"ExpressionStatement","src":"7439:62:28"},{"assignments":[9326],"declarations":[{"constant":false,"id":9326,"mutability":"mutable","name":"pinnedHash","nameLocation":"7539:10:28","nodeType":"VariableDeclaration","scope":9339,"src":"7520:29:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage_ptr","typeString":"struct Hashpin.PinnedHash"},"typeName":{"id":9325,"nodeType":"UserDefinedTypeName","pathNode":{"id":9324,"name":"PinnedHash","nameLocations":["7520:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":8932,"src":"7520:10:28"},"referencedDeclaration":8932,"src":"7520:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage_ptr","typeString":"struct Hashpin.PinnedHash"}},"visibility":"internal"}],"id":9330,"initialValue":{"baseExpression":{"id":9327,"name":"pinnedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"7552:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_PinnedHash_$8932_storage_$","typeString":"mapping(bytes32 => struct Hashpin.PinnedHash storage ref)"}},"id":9329,"indexExpression":{"id":9328,"name":"powHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9305,"src":"7565:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7552:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage","typeString":"struct Hashpin.PinnedHash storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7520:53:28"},{"expression":{"components":[{"expression":{"id":9331,"name":"pinnedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9326,"src":"7613:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage_ptr","typeString":"struct Hashpin.PinnedHash storage pointer"}},"id":9332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7624:6:28","memberName":"pinner","nodeType":"MemberAccess","referencedDeclaration":8927,"src":"7613:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9333,"name":"pinnedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9326,"src":"7644:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage_ptr","typeString":"struct Hashpin.PinnedHash storage pointer"}},"id":9334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7655:8:28","memberName":"metadata","nodeType":"MemberAccess","referencedDeclaration":8929,"src":"7644:19:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":9335,"name":"pinnedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9326,"src":"7677:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_PinnedHash_$8932_storage_ptr","typeString":"struct Hashpin.PinnedHash storage pointer"}},"id":9336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7688:9:28","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":8931,"src":"7677:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7599:108:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_string_storage_$_t_uint256_$","typeString":"tuple(address,string storage ref,uint256)"}},"functionReturnParameters":9313,"id":9338,"nodeType":"Return","src":"7592:115:28"}]},"documentation":{"id":9303,"nodeType":"StructuredDocumentation","src":"6974:297:28","text":" @dev Get details of a pinned hash\n @param powHash The proof-of-work hash to get details for\n @return pinner The address that pinned the hash\n @return metadata The metadata associated with the hash\n @return timestamp The timestamp when the hash was pinned"},"functionSelector":"1758c77a","id":9340,"implemented":true,"kind":"function","modifiers":[],"name":"getHashDetails","nameLocation":"7285:14:28","nodeType":"FunctionDefinition","parameters":{"id":9306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9305,"mutability":"mutable","name":"powHash","nameLocation":"7308:7:28","nodeType":"VariableDeclaration","scope":9340,"src":"7300:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7300:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7299:17:28"},"returnParameters":{"id":9313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9308,"mutability":"mutable","name":"pinner","nameLocation":"7357:6:28","nodeType":"VariableDeclaration","scope":9340,"src":"7349:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9307,"name":"address","nodeType":"ElementaryTypeName","src":"7349:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9310,"mutability":"mutable","name":"metadata","nameLocation":"7387:8:28","nodeType":"VariableDeclaration","scope":9340,"src":"7373:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9309,"name":"string","nodeType":"ElementaryTypeName","src":"7373:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9312,"mutability":"mutable","name":"timestamp","nameLocation":"7413:9:28","nodeType":"VariableDeclaration","scope":9340,"src":"7405:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9311,"name":"uint256","nodeType":"ElementaryTypeName","src":"7405:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7339:89:28"},"scope":9374,"src":"7276:438:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9348,"nodeType":"Block","src":"7924:41:28","statements":[{"expression":{"id":9346,"name":"currentDifficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8939,"src":"7941:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9345,"id":9347,"nodeType":"Return","src":"7934:24:28"}]},"documentation":{"id":9341,"nodeType":"StructuredDocumentation","src":"7724:138:28","text":" @dev Get the current difficulty target\n @return uint256 The current difficulty (number of leading zeros required)"},"functionSelector":"b6baffe3","id":9349,"implemented":true,"kind":"function","modifiers":[],"name":"getDifficulty","nameLocation":"7876:13:28","nodeType":"FunctionDefinition","parameters":{"id":9342,"nodeType":"ParameterList","parameters":[],"src":"7889:2:28"},"returnParameters":{"id":9345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9349,"src":"7915:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9343,"name":"uint256","nodeType":"ElementaryTypeName","src":"7915:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7914:9:28"},"scope":9374,"src":"7867:98:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9372,"nodeType":"Block","src":"8209:173:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9358,"name":"newDifficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9352,"src":"8227:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"323536","id":9359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8244:3:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"8227:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446966666963756c74792063616e6e6f7420657863656564203235362062697473","id":9361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8249:35:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_f617e16a973f32406523e865d683237754ca887ff188c497562e759341ce05d3","typeString":"literal_string \"Difficulty cannot exceed 256 bits\""},"value":"Difficulty cannot exceed 256 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f617e16a973f32406523e865d683237754ca887ff188c497562e759341ce05d3","typeString":"literal_string \"Difficulty cannot exceed 256 bits\""}],"id":9357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8219:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8219:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9363,"nodeType":"ExpressionStatement","src":"8219:66:28"},{"expression":{"id":9366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9364,"name":"currentDifficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8939,"src":"8295:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9365,"name":"newDifficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9352,"src":"8315:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8295:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9367,"nodeType":"ExpressionStatement","src":"8295:33:28"},{"eventCall":{"arguments":[{"id":9369,"name":"newDifficulty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9352,"src":"8361:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9368,"name":"DifficultyUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8909,"src":"8343:17:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":9370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9371,"nodeType":"EmitStatement","src":"8338:37:28"}]},"documentation":{"id":9350,"nodeType":"StructuredDocumentation","src":"7971:168:28","text":" @dev Set the current difficulty target (for testing only)\n @param newDifficulty The new difficulty value (number of leading zero bits required)"},"functionSelector":"602512e1","id":9373,"implemented":true,"kind":"function","modifiers":[{"id":9355,"kind":"modifierInvocation","modifierName":{"id":9354,"name":"onlyOwner","nameLocations":["8199:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8199:9:28"},"nodeType":"ModifierInvocation","src":"8199:9:28"}],"name":"setDifficulty","nameLocation":"8153:13:28","nodeType":"FunctionDefinition","parameters":{"id":9353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9352,"mutability":"mutable","name":"newDifficulty","nameLocation":"8175:13:28","nodeType":"VariableDeclaration","scope":9373,"src":"8167:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9351,"name":"uint256","nodeType":"ElementaryTypeName","src":"8167:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8166:23:28"},"returnParameters":{"id":9356,"nodeType":"ParameterList","parameters":[],"src":"8209:0:28"},"scope":9374,"src":"8144:238:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9375,"src":"273:8111:28","usedErrors":[13,18],"usedEvents":[24,8905,8909,8919,8925]}],"src":"32:8703:28"},"id":28},"contracts/adapters/ERC1155HashpinAdapter.sol":{"ast":{"absolutePath":"contracts/adapters/ERC1155HashpinAdapter.sol","exportedSymbols":{"Arrays":[3769],"Context":[3831],"ERC1155":[1233],"ERC1155HashpinAdapter":[9509],"ERC1155Utils":[1568],"ERC165":[5361],"IERC1155":[1356],"IERC1155Errors":[316],"IERC1155MetadataURI":[1414],"IERC165":[5373],"IHashpinNFT":[9746],"Ownable":[147]},"id":9510,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9376,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:29"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":9377,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9510,"sourceUnit":1234,"src":"58:59:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9510,"sourceUnit":148,"src":"118:52:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IHashpinNFT.sol","file":"../interfaces/IHashpinNFT.sol","id":9379,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9510,"sourceUnit":9747,"src":"171:39:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9381,"name":"IHashpinNFT","nameLocations":["349:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":9746,"src":"349:11:29"},"id":9382,"nodeType":"InheritanceSpecifier","src":"349:11:29"},{"baseName":{"id":9383,"name":"ERC1155","nameLocations":["362:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":1233,"src":"362:7:29"},"id":9384,"nodeType":"InheritanceSpecifier","src":"362:7:29"},{"baseName":{"id":9385,"name":"Ownable","nameLocations":["371:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"371:7:29"},"id":9386,"nodeType":"InheritanceSpecifier","src":"371:7:29"}],"canonicalName":"ERC1155HashpinAdapter","contractDependencies":[],"contractKind":"contract","documentation":{"id":9380,"nodeType":"StructuredDocumentation","src":"212:102:29","text":" @title ERC1155HashpinAdapter\n @dev Adapter for minting ERC-1155 tokens for claimed hashes"},"fullyImplemented":true,"id":9509,"linearizedBaseContracts":[9509,147,1233,316,1414,1356,5361,5373,3831,9746],"name":"ERC1155HashpinAdapter","nameLocation":"324:21:29","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"f79ec5c3","id":9390,"mutability":"mutable","name":"hashMinted","nameLocation":"472:10:29","nodeType":"VariableDeclaration","scope":9509,"src":"440:42:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":9389,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"448:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"440:24:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9388,"name":"bool","nodeType":"ElementaryTypeName","src":"459:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"e9427cbb","id":9392,"mutability":"mutable","name":"hashpinContract","nameLocation":"573:15:29","nodeType":"VariableDeclaration","scope":9509,"src":"558:30:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9391,"name":"address","nodeType":"ElementaryTypeName","src":"558:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":9405,"nodeType":"Block","src":"779:2:29","statements":[]},"documentation":{"id":9393,"nodeType":"StructuredDocumentation","src":"599:86:29","text":" @dev Constructor\n @param uri_ The base URI for token metadata"},"id":9406,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9398,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9395,"src":"739:4:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":9399,"kind":"baseConstructorSpecifier","modifierName":{"id":9397,"name":"ERC1155","nameLocations":["731:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":1233,"src":"731:7:29"},"nodeType":"ModifierInvocation","src":"731:13:29"},{"arguments":[{"expression":{"id":9401,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"762:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"766:6:29","memberName":"sender","nodeType":"MemberAccess","src":"762:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9403,"kind":"baseConstructorSpecifier","modifierName":{"id":9400,"name":"Ownable","nameLocations":["754:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"754:7:29"},"nodeType":"ModifierInvocation","src":"754:19:29"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9395,"mutability":"mutable","name":"uri_","nameLocation":"716:4:29","nodeType":"VariableDeclaration","scope":9406,"src":"702:18:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9394,"name":"string","nodeType":"ElementaryTypeName","src":"702:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"701:20:29"},"returnParameters":{"id":9404,"nodeType":"ParameterList","parameters":[],"src":"779:0:29"},"scope":9509,"src":"690:91:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9418,"nodeType":"Block","src":"993:51:29","statements":[{"expression":{"id":9416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9414,"name":"hashpinContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9392,"src":"1003:15:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9415,"name":"_hashpinContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9409,"src":"1021:16:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1003:34:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9417,"nodeType":"ExpressionStatement","src":"1003:34:29"}]},"documentation":{"id":9407,"nodeType":"StructuredDocumentation","src":"791:124:29","text":" @dev Sets the Hashpin contract address\n @param _hashpinContract The address of the Hashpin contract"},"functionSelector":"8faa9edf","id":9419,"implemented":true,"kind":"function","modifiers":[{"id":9412,"kind":"modifierInvocation","modifierName":{"id":9411,"name":"onlyOwner","nameLocations":["983:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"983:9:29"},"nodeType":"ModifierInvocation","src":"983:9:29"}],"name":"setHashpinContract","nameLocation":"929:18:29","nodeType":"FunctionDefinition","parameters":{"id":9410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9409,"mutability":"mutable","name":"_hashpinContract","nameLocation":"956:16:29","nodeType":"VariableDeclaration","scope":9419,"src":"948:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9408,"name":"address","nodeType":"ElementaryTypeName","src":"948:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"947:26:29"},"returnParameters":{"id":9413,"nodeType":"ParameterList","parameters":[],"src":"993:0:29"},"scope":9509,"src":"920:124:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9737],"body":{"id":9470,"nodeType":"Block","src":"1472:461:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9433,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1490:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1494:6:29","memberName":"sender","nodeType":"MemberAccess","src":"1490:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9435,"name":"hashpinContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9392,"src":"1504:15:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1490:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79204861736870696e20636f6e74726163742063616e206d696e74","id":9437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1521:32:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_14ddb257f1ec202d0225b5cd7757b4632f49f22eaa94e372cab5340091be23ef","typeString":"literal_string \"Only Hashpin contract can mint\""},"value":"Only Hashpin contract can mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_14ddb257f1ec202d0225b5cd7757b4632f49f22eaa94e372cab5340091be23ef","typeString":"literal_string \"Only Hashpin contract can mint\""}],"id":9432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1482:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:72:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9439,"nodeType":"ExpressionStatement","src":"1482:72:29"},{"expression":{"arguments":[{"id":9444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1572:17:29","subExpression":{"baseExpression":{"id":9441,"name":"hashMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9390,"src":"1573:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":9443,"indexExpression":{"id":9442,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"1584:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1573:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4861736820616c7265616479206d696e746564","id":9445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1591:21:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_79d92d9ad9002a23620b92eabf862edbf431a7e5dac84191f4393e1413b6a6d0","typeString":"literal_string \"Hash already minted\""},"value":"Hash already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79d92d9ad9002a23620b92eabf862edbf431a7e5dac84191f4393e1413b6a6d0","typeString":"literal_string \"Hash already minted\""}],"id":9440,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1564:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:49:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9447,"nodeType":"ExpressionStatement","src":"1564:49:29"},{"assignments":[9449],"declarations":[{"constant":false,"id":9449,"mutability":"mutable","name":"tokenId","nameLocation":"1687:7:29","nodeType":"VariableDeclaration","scope":9470,"src":"1679:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1679:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9454,"initialValue":{"arguments":[{"id":9452,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"1705:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1697:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1697:7:29","typeDescriptions":{}}},"id":9453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1697:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1679:31:29"},{"expression":{"id":9459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9455,"name":"hashMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9390,"src":"1764:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":9457,"indexExpression":{"id":9456,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"1775:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1764:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1783:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1764:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9460,"nodeType":"ExpressionStatement","src":"1764:23:29"},{"expression":{"arguments":[{"id":9462,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9422,"src":"1868:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9463,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9449,"src":"1872:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":9464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1881:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":9465,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9426,"src":"1884:8:29","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":9461,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"1862:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":9466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9467,"nodeType":"ExpressionStatement","src":"1862:31:29"},{"expression":{"id":9468,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9449,"src":"1919:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9431,"id":9469,"nodeType":"Return","src":"1912:14:29"}]},"documentation":{"id":9420,"nodeType":"StructuredDocumentation","src":"1054:312:29","text":" @dev Mints an ERC-1155 token representing the claimed hash\n @param to The address that will receive the token\n @param hash The hash being claimed\n @param metadata Additional metadata for the token (ignored for ERC-1155)\n @return tokenId The ID of the newly minted token"},"functionSelector":"b6483bab","id":9471,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1380:4:29","nodeType":"FunctionDefinition","overrides":{"id":9428,"nodeType":"OverrideSpecifier","overrides":[],"src":"1445:8:29"},"parameters":{"id":9427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9422,"mutability":"mutable","name":"to","nameLocation":"1393:2:29","nodeType":"VariableDeclaration","scope":9471,"src":"1385:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9421,"name":"address","nodeType":"ElementaryTypeName","src":"1385:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9424,"mutability":"mutable","name":"hash","nameLocation":"1405:4:29","nodeType":"VariableDeclaration","scope":9471,"src":"1397:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1397:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9426,"mutability":"mutable","name":"metadata","nameLocation":"1426:8:29","nodeType":"VariableDeclaration","scope":9471,"src":"1411:23:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9425,"name":"bytes","nodeType":"ElementaryTypeName","src":"1411:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1384:51:29"},"returnParameters":{"id":9431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9471,"src":"1463:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1463:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1462:9:29"},"scope":9509,"src":"1371:562:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9483,"nodeType":"Block","src":"2158:40:29","statements":[{"expression":{"baseExpression":{"id":9479,"name":"hashMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9390,"src":"2175:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":9481,"indexExpression":{"id":9480,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"2186:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2175:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9478,"id":9482,"nodeType":"Return","src":"2168:23:29"}]},"documentation":{"id":9472,"nodeType":"StructuredDocumentation","src":"1943:145:29","text":" @dev Check if a hash has been minted\n @param hash The hash to check\n @return bool True if the hash has been minted"},"functionSelector":"129b3e27","id":9484,"implemented":true,"kind":"function","modifiers":[],"name":"isHashMinted","nameLocation":"2102:12:29","nodeType":"FunctionDefinition","parameters":{"id":9475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9474,"mutability":"mutable","name":"hash","nameLocation":"2123:4:29","nodeType":"VariableDeclaration","scope":9484,"src":"2115:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2115:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2114:14:29"},"returnParameters":{"id":9478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9484,"src":"2152:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9476,"name":"bool","nodeType":"ElementaryTypeName","src":"2152:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2151:6:29"},"scope":9509,"src":"2093:105:29","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[408,9745],"body":{"id":9507,"nodeType":"Block","src":"2506:134:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":9500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9495,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9487,"src":"2536:11:29","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":9497,"name":"IHashpinNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9746,"src":"2556:11:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHashpinNFT_$9746_$","typeString":"type(contract IHashpinNFT)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IHashpinNFT_$9746_$","typeString":"type(contract IHashpinNFT)"}],"id":9496,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2551:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IHashpinNFT_$9746","typeString":"type(contract IHashpinNFT)"}},"id":9499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2569:11:29","memberName":"interfaceId","nodeType":"MemberAccess","src":"2551:29:29","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2536:44:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":9503,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9487,"src":"2621:11:29","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":9501,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2597:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155HashpinAdapter_$9509_$","typeString":"type(contract super ERC1155HashpinAdapter)"}},"id":9502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2603:17:29","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":408,"src":"2597:23:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":9504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2597:36:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2536:97:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9494,"id":9506,"nodeType":"Return","src":"2516:117:29"}]},"documentation":{"id":9485,"nodeType":"StructuredDocumentation","src":"2208:188:29","text":" @dev Checks if the contract supports a given interface\n @param interfaceId The interface identifier\n @return bool True if the contract supports the interface"},"functionSelector":"01ffc9a7","id":9508,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2410:17:29","nodeType":"FunctionDefinition","overrides":{"id":9491,"nodeType":"OverrideSpecifier","overrides":[{"id":9489,"name":"ERC1155","nameLocations":["2469:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":1233,"src":"2469:7:29"},{"id":9490,"name":"IHashpinNFT","nameLocations":["2478:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":9746,"src":"2478:11:29"}],"src":"2460:30:29"},"parameters":{"id":9488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9487,"mutability":"mutable","name":"interfaceId","nameLocation":"2435:11:29","nodeType":"VariableDeclaration","scope":9508,"src":"2428:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9486,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2428:6:29","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2427:20:29"},"returnParameters":{"id":9494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9508,"src":"2500:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9492,"name":"bool","nodeType":"ElementaryTypeName","src":"2500:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2499:6:29"},"scope":9509,"src":"2401:239:29","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9510,"src":"315:2327:29","usedErrors":[13,18,281,286,291,298,303,308,315],"usedEvents":[24,1253,1268,1277,1284]}],"src":"32:2611:29"},"id":29},"contracts/adapters/ERC721HashpinAdapter.sol":{"ast":{"absolutePath":"contracts/adapters/ERC721HashpinAdapter.sol","exportedSymbols":{"Context":[3831],"ERC721":[2525],"ERC721HashpinAdapter":[9722],"ERC721URIStorage":[2786],"IERC165":[5373],"IERC4906":[175],"IHashpinNFT":[9746],"Ownable":[147],"Strings":[5337]},"id":9723,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9511,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:30"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":9512,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9723,"sourceUnit":2787,"src":"58:78:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9513,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9723,"sourceUnit":148,"src":"137:52:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IHashpinNFT.sol","file":"../interfaces/IHashpinNFT.sol","id":9514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9723,"sourceUnit":9747,"src":"190:39:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9516,"name":"IHashpinNFT","nameLocations":["365:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":9746,"src":"365:11:30"},"id":9517,"nodeType":"InheritanceSpecifier","src":"365:11:30"},{"baseName":{"id":9518,"name":"ERC721URIStorage","nameLocations":["378:16:30"],"nodeType":"IdentifierPath","referencedDeclaration":2786,"src":"378:16:30"},"id":9519,"nodeType":"InheritanceSpecifier","src":"378:16:30"},{"baseName":{"id":9520,"name":"Ownable","nameLocations":["396:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"396:7:30"},"id":9521,"nodeType":"InheritanceSpecifier","src":"396:7:30"}],"canonicalName":"ERC721HashpinAdapter","contractDependencies":[],"contractKind":"contract","documentation":{"id":9515,"nodeType":"StructuredDocumentation","src":"231:100:30","text":" @title ERC721HashpinAdapter\n @dev Adapter for minting ERC-721 tokens for claimed hashes"},"fullyImplemented":true,"id":9722,"linearizedBaseContracts":[9722,147,2786,2525,269,2814,175,2642,5361,5373,3831,9746],"name":"ERC721HashpinAdapter","nameLocation":"341:20:30","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"f79ec5c3","id":9525,"mutability":"mutable","name":"hashMinted","nameLocation":"496:10:30","nodeType":"VariableDeclaration","scope":9722,"src":"464:42:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":9524,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"472:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"464:24:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9523,"name":"bool","nodeType":"ElementaryTypeName","src":"483:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"e9427cbb","id":9527,"mutability":"mutable","name":"hashpinContract","nameLocation":"597:15:30","nodeType":"VariableDeclaration","scope":9722,"src":"582:30:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9526,"name":"address","nodeType":"ElementaryTypeName","src":"582:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":9543,"nodeType":"Block","src":"885:2:30","statements":[]},"documentation":{"id":9528,"nodeType":"StructuredDocumentation","src":"623:139:30","text":" @dev Constructor\n @param name The name of the NFT collection\n @param symbol The symbol of the NFT collection"},"id":9544,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9535,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9530,"src":"837:4:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9536,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9532,"src":"843:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":9537,"kind":"baseConstructorSpecifier","modifierName":{"id":9534,"name":"ERC721","nameLocations":["830:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":2525,"src":"830:6:30"},"nodeType":"ModifierInvocation","src":"830:20:30"},{"arguments":[{"expression":{"id":9539,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"868:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"872:6:30","memberName":"sender","nodeType":"MemberAccess","src":"868:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9541,"kind":"baseConstructorSpecifier","modifierName":{"id":9538,"name":"Ownable","nameLocations":["860:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"860:7:30"},"nodeType":"ModifierInvocation","src":"860:19:30"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9530,"mutability":"mutable","name":"name","nameLocation":"793:4:30","nodeType":"VariableDeclaration","scope":9544,"src":"779:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9529,"name":"string","nodeType":"ElementaryTypeName","src":"779:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9532,"mutability":"mutable","name":"symbol","nameLocation":"813:6:30","nodeType":"VariableDeclaration","scope":9544,"src":"799:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9531,"name":"string","nodeType":"ElementaryTypeName","src":"799:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"778:42:30"},"returnParameters":{"id":9542,"nodeType":"ParameterList","parameters":[],"src":"885:0:30"},"scope":9722,"src":"767:120:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9556,"nodeType":"Block","src":"1099:51:30","statements":[{"expression":{"id":9554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9552,"name":"hashpinContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9527,"src":"1109:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9553,"name":"_hashpinContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9547,"src":"1127:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1109:34:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9555,"nodeType":"ExpressionStatement","src":"1109:34:30"}]},"documentation":{"id":9545,"nodeType":"StructuredDocumentation","src":"897:124:30","text":" @dev Sets the Hashpin contract address\n @param _hashpinContract The address of the Hashpin contract"},"functionSelector":"8faa9edf","id":9557,"implemented":true,"kind":"function","modifiers":[{"id":9550,"kind":"modifierInvocation","modifierName":{"id":9549,"name":"onlyOwner","nameLocations":["1089:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1089:9:30"},"nodeType":"ModifierInvocation","src":"1089:9:30"}],"name":"setHashpinContract","nameLocation":"1035:18:30","nodeType":"FunctionDefinition","parameters":{"id":9548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9547,"mutability":"mutable","name":"_hashpinContract","nameLocation":"1062:16:30","nodeType":"VariableDeclaration","scope":9557,"src":"1054:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9546,"name":"address","nodeType":"ElementaryTypeName","src":"1054:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1053:26:30"},"returnParameters":{"id":9551,"nodeType":"ParameterList","parameters":[],"src":"1099:0:30"},"scope":9722,"src":"1026:124:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9570,"nodeType":"Block","src":"1385:37:30","statements":[{"expression":{"arguments":[{"id":9567,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9560,"src":"1410:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1402:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1402:7:30","typeDescriptions":{}}},"id":9568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1402:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9564,"id":9569,"nodeType":"Return","src":"1395:20:30"}]},"documentation":{"id":9558,"nodeType":"StructuredDocumentation","src":"1160:153:30","text":" @dev Convert a bytes32 hash to a uint256 token ID\n @param hash The hash to convert\n @return tokenId The resulting token ID"},"functionSelector":"59383991","id":9571,"implemented":true,"kind":"function","modifiers":[],"name":"hashToTokenID","nameLocation":"1327:13:30","nodeType":"FunctionDefinition","parameters":{"id":9561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9560,"mutability":"mutable","name":"hash","nameLocation":"1349:4:30","nodeType":"VariableDeclaration","scope":9571,"src":"1341:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1341:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1340:14:30"},"returnParameters":{"id":9564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9571,"src":"1376:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1376:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1375:9:30"},"scope":9722,"src":"1318:104:30","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":9584,"nodeType":"Block","src":"1660:40:30","statements":[{"expression":{"arguments":[{"id":9581,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9574,"src":"1685:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1677:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":9579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1677:7:30","typeDescriptions":{}}},"id":9582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1677:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9578,"id":9583,"nodeType":"Return","src":"1670:23:30"}]},"documentation":{"id":9572,"nodeType":"StructuredDocumentation","src":"1432:153:30","text":" @dev Convert a uint256 token ID to a bytes32 hash\n @param tokenId The token ID to convert\n @return hash The resulting hash"},"functionSelector":"80813288","id":9585,"implemented":true,"kind":"function","modifiers":[],"name":"tokenIDToHash","nameLocation":"1599:13:30","nodeType":"FunctionDefinition","parameters":{"id":9575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9574,"mutability":"mutable","name":"tokenId","nameLocation":"1621:7:30","nodeType":"VariableDeclaration","scope":9585,"src":"1613:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1613:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1612:17:30"},"returnParameters":{"id":9578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9585,"src":"1651:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1651:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1650:9:30"},"scope":9722,"src":"1590:110:30","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[9737],"body":{"id":9647,"nodeType":"Block","src":"2109:603:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9599,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2127:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:30","memberName":"sender","nodeType":"MemberAccess","src":"2127:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9601,"name":"hashpinContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9527,"src":"2141:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2127:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79204861736870696e20636f6e74726163742063616e206d696e74","id":9603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2158:32:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_14ddb257f1ec202d0225b5cd7757b4632f49f22eaa94e372cab5340091be23ef","typeString":"literal_string \"Only Hashpin contract can mint\""},"value":"Only Hashpin contract can mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_14ddb257f1ec202d0225b5cd7757b4632f49f22eaa94e372cab5340091be23ef","typeString":"literal_string \"Only Hashpin contract can mint\""}],"id":9598,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2119:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2119:72:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9605,"nodeType":"ExpressionStatement","src":"2119:72:30"},{"expression":{"arguments":[{"id":9610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2209:17:30","subExpression":{"baseExpression":{"id":9607,"name":"hashMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9525,"src":"2210:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":9609,"indexExpression":{"id":9608,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9590,"src":"2221:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2210:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4861736820616c7265616479206d696e746564","id":9611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2228:21:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_79d92d9ad9002a23620b92eabf862edbf431a7e5dac84191f4393e1413b6a6d0","typeString":"literal_string \"Hash already minted\""},"value":"Hash already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79d92d9ad9002a23620b92eabf862edbf431a7e5dac84191f4393e1413b6a6d0","typeString":"literal_string \"Hash already minted\""}],"id":9606,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2201:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2201:49:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9613,"nodeType":"ExpressionStatement","src":"2201:49:30"},{"assignments":[9615],"declarations":[{"constant":false,"id":9615,"mutability":"mutable","name":"tokenId","nameLocation":"2324:7:30","nodeType":"VariableDeclaration","scope":9647,"src":"2316:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2316:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9619,"initialValue":{"arguments":[{"id":9617,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9590,"src":"2348:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9616,"name":"hashToTokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"2334:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":9618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2316:37:30"},{"expression":{"id":9624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9620,"name":"hashMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9525,"src":"2407:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":9622,"indexExpression":{"id":9621,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9590,"src":"2418:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2407:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2426:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2407:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9625,"nodeType":"ExpressionStatement","src":"2407:23:30"},{"expression":{"arguments":[{"id":9627,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9588,"src":"2500:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9628,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9615,"src":"2504:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9626,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2203,2233],"referencedDeclaration":2203,"src":"2490:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2490:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9630,"nodeType":"ExpressionStatement","src":"2490:22:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9631,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9592,"src":"2588:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":9632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2597:6:30","memberName":"length","nodeType":"MemberAccess","src":"2588:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2606:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2588:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9644,"nodeType":"IfStatement","src":"2584:89:30","trueBody":{"id":9643,"nodeType":"Block","src":"2609:64:30","statements":[{"expression":{"arguments":[{"id":9636,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9615,"src":"2636:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":9639,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9592,"src":"2652:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":9638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2645:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":9637,"name":"string","nodeType":"ElementaryTypeName","src":"2645:6:30","typeDescriptions":{}}},"id":9640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2645:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":9635,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"2623:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":9641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2623:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9642,"nodeType":"ExpressionStatement","src":"2623:39:30"}]}},{"expression":{"id":9645,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9615,"src":"2698:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9597,"id":9646,"nodeType":"Return","src":"2691:14:30"}]},"documentation":{"id":9586,"nodeType":"StructuredDocumentation","src":"1710:293:30","text":" @dev Mints an NFT representing the claimed hash\n @param to The address that will receive the NFT\n @param hash The hash being claimed\n @param metadata Additional metadata for the NFT (token URI as bytes)\n @return tokenId The ID of the newly minted NFT"},"functionSelector":"b6483bab","id":9648,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2017:4:30","nodeType":"FunctionDefinition","overrides":{"id":9594,"nodeType":"OverrideSpecifier","overrides":[],"src":"2082:8:30"},"parameters":{"id":9593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9588,"mutability":"mutable","name":"to","nameLocation":"2030:2:30","nodeType":"VariableDeclaration","scope":9648,"src":"2022:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9587,"name":"address","nodeType":"ElementaryTypeName","src":"2022:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9590,"mutability":"mutable","name":"hash","nameLocation":"2042:4:30","nodeType":"VariableDeclaration","scope":9648,"src":"2034:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9592,"mutability":"mutable","name":"metadata","nameLocation":"2063:8:30","nodeType":"VariableDeclaration","scope":9648,"src":"2048:23:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9591,"name":"bytes","nodeType":"ElementaryTypeName","src":"2048:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2021:51:30"},"returnParameters":{"id":9597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9648,"src":"2100:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9595,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2099:9:30"},"scope":9722,"src":"2008:704:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9683,"nodeType":"Block","src":"2964:206:30","statements":[{"assignments":[9657],"declarations":[{"constant":false,"id":9657,"mutability":"mutable","name":"hash","nameLocation":"2982:4:30","nodeType":"VariableDeclaration","scope":9683,"src":"2974:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2974:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9661,"initialValue":{"arguments":[{"id":9659,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9651,"src":"3003:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9658,"name":"tokenIDToHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9585,"src":"2989:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) pure returns (bytes32)"}},"id":9660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2989:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2974:37:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9664,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9651,"src":"3038:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9663,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"3029:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":9665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3029:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3058:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3050:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9666,"name":"address","nodeType":"ElementaryTypeName","src":"3050:7:30","typeDescriptions":{}}},"id":9669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3029:31:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20494420646f6573206e6f74206578697374","id":9671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3062:25:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f","typeString":"literal_string \"Token ID does not exist\""},"value":"Token ID does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f","typeString":"literal_string \"Token ID does not exist\""}],"id":9662,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3021:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3021:67:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9673,"nodeType":"ExpressionStatement","src":"3021:67:30"},{"expression":{"arguments":[{"baseExpression":{"id":9675,"name":"hashMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9525,"src":"3106:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":9677,"indexExpression":{"id":9676,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9657,"src":"3117:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3106:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"48617368206e6f74206d696e746564","id":9678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3124:17:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_e240009b8d786292eb67999f675f816161279314f3e5b6c116ecef7638f59a91","typeString":"literal_string \"Hash not minted\""},"value":"Hash not minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e240009b8d786292eb67999f675f816161279314f3e5b6c116ecef7638f59a91","typeString":"literal_string \"Hash not minted\""}],"id":9674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3098:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3098:44:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9680,"nodeType":"ExpressionStatement","src":"3098:44:30"},{"expression":{"id":9681,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9657,"src":"3159:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9655,"id":9682,"nodeType":"Return","src":"3152:11:30"}]},"documentation":{"id":9649,"nodeType":"StructuredDocumentation","src":"2722:162:30","text":" @dev Get the hash associated with a token ID\n @param tokenId The token ID to query\n @return hash The hash associated with the token"},"functionSelector":"9456f7e9","id":9684,"implemented":true,"kind":"function","modifiers":[],"name":"getHashByTokenId","nameLocation":"2898:16:30","nodeType":"FunctionDefinition","parameters":{"id":9652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9651,"mutability":"mutable","name":"tokenId","nameLocation":"2923:7:30","nodeType":"VariableDeclaration","scope":9684,"src":"2915:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9650,"name":"uint256","nodeType":"ElementaryTypeName","src":"2915:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2914:17:30"},"returnParameters":{"id":9655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9684,"src":"2955:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2955:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2954:9:30"},"scope":9722,"src":"2889:281:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9696,"nodeType":"Block","src":"3405:40:30","statements":[{"expression":{"baseExpression":{"id":9692,"name":"hashMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9525,"src":"3422:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":9694,"indexExpression":{"id":9693,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9687,"src":"3433:4:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3422:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9691,"id":9695,"nodeType":"Return","src":"3415:23:30"}]},"documentation":{"id":9685,"nodeType":"StructuredDocumentation","src":"3180:155:30","text":" @dev Check if a hash has been minted as an NFT\n @param hash The hash to check\n @return bool True if the hash has been minted"},"functionSelector":"129b3e27","id":9697,"implemented":true,"kind":"function","modifiers":[],"name":"isHashMinted","nameLocation":"3349:12:30","nodeType":"FunctionDefinition","parameters":{"id":9688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9687,"mutability":"mutable","name":"hash","nameLocation":"3370:4:30","nodeType":"VariableDeclaration","scope":9697,"src":"3362:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9686,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3362:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3361:14:30"},"returnParameters":{"id":9691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9697,"src":"3399:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9689,"name":"bool","nodeType":"ElementaryTypeName","src":"3399:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3398:6:30"},"scope":9722,"src":"3340:105:30","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2709,9745],"body":{"id":9720,"nodeType":"Block","src":"3762:134:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":9713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9708,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9700,"src":"3792:11:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":9710,"name":"IHashpinNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9746,"src":"3812:11:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHashpinNFT_$9746_$","typeString":"type(contract IHashpinNFT)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IHashpinNFT_$9746_$","typeString":"type(contract IHashpinNFT)"}],"id":9709,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3807:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IHashpinNFT_$9746","typeString":"type(contract IHashpinNFT)"}},"id":9712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3825:11:30","memberName":"interfaceId","nodeType":"MemberAccess","src":"3807:29:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3792:44:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":9716,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9700,"src":"3877:11:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":9714,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3853:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721HashpinAdapter_$9722_$","typeString":"type(contract super ERC721HashpinAdapter)"}},"id":9715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3859:17:30","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2709,"src":"3853:23:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":9717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3853:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3792:97:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9707,"id":9719,"nodeType":"Return","src":"3772:117:30"}]},"documentation":{"id":9698,"nodeType":"StructuredDocumentation","src":"3455:188:30","text":" @dev Checks if the contract supports a given interface\n @param interfaceId The interface identifier\n @return bool True if the contract supports the interface"},"functionSelector":"01ffc9a7","id":9721,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3657:17:30","nodeType":"FunctionDefinition","overrides":{"id":9704,"nodeType":"OverrideSpecifier","overrides":[{"id":9702,"name":"ERC721URIStorage","nameLocations":["3716:16:30"],"nodeType":"IdentifierPath","referencedDeclaration":2786,"src":"3716:16:30"},{"id":9703,"name":"IHashpinNFT","nameLocations":["3734:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":9746,"src":"3734:11:30"}],"src":"3707:39:30"},"parameters":{"id":9701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9700,"mutability":"mutable","name":"interfaceId","nameLocation":"3682:11:30","nodeType":"VariableDeclaration","scope":9721,"src":"3675:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9699,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3675:6:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3674:20:30"},"returnParameters":{"id":9707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9721,"src":"3756:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9705,"name":"bool","nodeType":"ElementaryTypeName","src":"3756:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3755:6:30"},"scope":9722,"src":"3648:248:30","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9723,"src":"332:3566:30","usedErrors":[13,18,227,232,241,246,251,258,263,268],"usedEvents":[24,167,174,2541,2550,2559]}],"src":"32:3867:30"},"id":30},"contracts/interfaces/IHashpinNFT.sol":{"ast":{"absolutePath":"contracts/interfaces/IHashpinNFT.sol","exportedSymbols":{"IHashpinNFT":[9746]},"id":9747,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9724,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:31"},{"abstract":false,"baseContracts":[],"canonicalName":"IHashpinNFT","contractDependencies":[],"contractKind":"interface","documentation":{"id":9725,"nodeType":"StructuredDocumentation","src":"58:104:31","text":" @title IHashpinNFT\n @dev Interface for NFT adapters that can mint tokens for claimed hashes"},"fullyImplemented":false,"id":9746,"linearizedBaseContracts":[9746],"name":"IHashpinNFT","nameLocation":"173:11:31","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":9726,"nodeType":"StructuredDocumentation","src":"191:302:31","text":" @dev Mints an NFT representing the claimed hash\n @param to The address that will receive the NFT\n @param hash The hash being claimed\n @param metadata Additional metadata for the NFT (e.g., token URI for ERC-721)\n @return tokenId The ID of the newly minted NFT"},"functionSelector":"b6483bab","id":9737,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"507:4:31","nodeType":"FunctionDefinition","parameters":{"id":9733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9728,"mutability":"mutable","name":"to","nameLocation":"520:2:31","nodeType":"VariableDeclaration","scope":9737,"src":"512:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9727,"name":"address","nodeType":"ElementaryTypeName","src":"512:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9730,"mutability":"mutable","name":"hash","nameLocation":"532:4:31","nodeType":"VariableDeclaration","scope":9737,"src":"524:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"524:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9732,"mutability":"mutable","name":"metadata","nameLocation":"553:8:31","nodeType":"VariableDeclaration","scope":9737,"src":"538:23:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9731,"name":"bytes","nodeType":"ElementaryTypeName","src":"538:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"511:51:31"},"returnParameters":{"id":9736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9735,"mutability":"mutable","name":"tokenId","nameLocation":"589:7:31","nodeType":"VariableDeclaration","scope":9737,"src":"581:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9734,"name":"uint256","nodeType":"ElementaryTypeName","src":"581:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"580:17:31"},"scope":9746,"src":"498:100:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9738,"nodeType":"StructuredDocumentation","src":"608:188:31","text":" @dev Checks if the contract supports a given interface\n @param interfaceId The interface identifier\n @return bool True if the contract supports the interface"},"functionSelector":"01ffc9a7","id":9745,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"810:17:31","nodeType":"FunctionDefinition","parameters":{"id":9741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9740,"mutability":"mutable","name":"interfaceId","nameLocation":"835:11:31","nodeType":"VariableDeclaration","scope":9745,"src":"828:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9739,"name":"bytes4","nodeType":"ElementaryTypeName","src":"828:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"827:20:31"},"returnParameters":{"id":9744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9745,"src":"871:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9742,"name":"bool","nodeType":"ElementaryTypeName","src":"871:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"870:6:31"},"scope":9746,"src":"801:76:31","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9747,"src":"163:716:31","usedErrors":[],"usedEvents":[]}],"src":"32:848:31"},"id":31},"contracts/test/MockHashpinNFT.sol":{"ast":{"absolutePath":"contracts/test/MockHashpinNFT.sol","exportedSymbols":{"IHashpinNFT":[9746],"MockHashpinNFT":[9809]},"id":9810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9748,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:32"},{"absolutePath":"contracts/interfaces/IHashpinNFT.sol","file":"../interfaces/IHashpinNFT.sol","id":9749,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9810,"sourceUnit":9747,"src":"58:39:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9751,"name":"IHashpinNFT","nameLocations":["225:11:32"],"nodeType":"IdentifierPath","referencedDeclaration":9746,"src":"225:11:32"},"id":9752,"nodeType":"InheritanceSpecifier","src":"225:11:32"}],"canonicalName":"MockHashpinNFT","contractDependencies":[],"contractKind":"contract","documentation":{"id":9750,"nodeType":"StructuredDocumentation","src":"99:98:32","text":" @title MockHashpinNFT\n @dev A mock implementation of IHashpinNFT for testing purposes"},"fullyImplemented":true,"id":9809,"linearizedBaseContracts":[9809,9746],"name":"MockHashpinNFT","nameLocation":"207:14:32","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8ccc5f80","id":9756,"mutability":"mutable","name":"minted","nameLocation":"275:6:32","nodeType":"VariableDeclaration","scope":9809,"src":"243:38:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":9755,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"251:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"243:24:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9754,"name":"bool","nodeType":"ElementaryTypeName","src":"262:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"f76c9394","id":9760,"mutability":"mutable","name":"hashOwners","nameLocation":"322:10:32","nodeType":"VariableDeclaration","scope":9809,"src":"287:45:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":9759,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"295:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"287:27:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9758,"name":"address","nodeType":"ElementaryTypeName","src":"306:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"baseFunctions":[9737],"body":{"id":9790,"nodeType":"Block","src":"500:164:32","statements":[{"expression":{"id":9777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9773,"name":"minted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9756,"src":"510:6:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":9775,"indexExpression":{"id":9774,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9765,"src":"517:4:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"510:12:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"525:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"510:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9778,"nodeType":"ExpressionStatement","src":"510:19:32"},{"expression":{"id":9783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9779,"name":"hashOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9760,"src":"539:10:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":9781,"indexExpression":{"id":9780,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9765,"src":"550:4:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"539:16:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9782,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9763,"src":"558:2:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"539:21:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9784,"nodeType":"ExpressionStatement","src":"539:21:32"},{"expression":{"arguments":[{"id":9787,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9765,"src":"652:4:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"644:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9785,"name":"uint256","nodeType":"ElementaryTypeName","src":"644:7:32","typeDescriptions":{}}},"id":9788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"644:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9772,"id":9789,"nodeType":"Return","src":"637:20:32"}]},"documentation":{"id":9761,"nodeType":"StructuredDocumentation","src":"343:60:32","text":" @dev Mock implementation of mint function"},"functionSelector":"b6483bab","id":9791,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"417:4:32","nodeType":"FunctionDefinition","overrides":{"id":9769,"nodeType":"OverrideSpecifier","overrides":[],"src":"473:8:32"},"parameters":{"id":9768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9763,"mutability":"mutable","name":"to","nameLocation":"430:2:32","nodeType":"VariableDeclaration","scope":9791,"src":"422:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9762,"name":"address","nodeType":"ElementaryTypeName","src":"422:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9765,"mutability":"mutable","name":"hash","nameLocation":"442:4:32","nodeType":"VariableDeclaration","scope":9791,"src":"434:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"434:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9791,"src":"448:14:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9766,"name":"bytes","nodeType":"ElementaryTypeName","src":"448:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"421:42:32"},"returnParameters":{"id":9772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9791,"src":"491:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9770,"name":"uint256","nodeType":"ElementaryTypeName","src":"491:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"490:9:32"},"scope":9809,"src":"408:256:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9745],"body":{"id":9807,"nodeType":"Block","src":"828:68:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":9805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9800,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9794,"src":"845:11:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":9802,"name":"IHashpinNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9746,"src":"865:11:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHashpinNFT_$9746_$","typeString":"type(contract IHashpinNFT)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IHashpinNFT_$9746_$","typeString":"type(contract IHashpinNFT)"}],"id":9801,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"860:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"860:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IHashpinNFT_$9746","typeString":"type(contract IHashpinNFT)"}},"id":9804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"878:11:32","memberName":"interfaceId","nodeType":"MemberAccess","src":"860:29:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"845:44:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9799,"id":9806,"nodeType":"Return","src":"838:51:32"}]},"documentation":{"id":9792,"nodeType":"StructuredDocumentation","src":"674:64:32","text":" @dev Mock implementation of supportsInterface"},"functionSelector":"01ffc9a7","id":9808,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"752:17:32","nodeType":"FunctionDefinition","overrides":{"id":9796,"nodeType":"OverrideSpecifier","overrides":[],"src":"804:8:32"},"parameters":{"id":9795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9794,"mutability":"mutable","name":"interfaceId","nameLocation":"777:11:32","nodeType":"VariableDeclaration","scope":9808,"src":"770:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9793,"name":"bytes4","nodeType":"ElementaryTypeName","src":"770:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"769:20:32"},"returnParameters":{"id":9799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9808,"src":"822:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9797,"name":"bool","nodeType":"ElementaryTypeName","src":"822:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"821:6:32"},"scope":9809,"src":"743:153:32","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9810,"src":"198:700:32","usedErrors":[],"usedEvents":[]}],"src":"32:867:32"},"id":32}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e96896abd975dfbdebfbe3fa561d3605a442518e71352b4050f19903b29b83164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x96896ABD975DFBDEBFBE3FA561D360 GAS PREVRANDAO 0x25 XOR 0xE7 SGT MSTORE 0xB4 SDIV 0xF NOT SWAP1 EXTCODESIZE 0x29 0xB8 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3094:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;439:3094:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e96896abd975dfbdebfbe3fa561d3605a442518e71352b4050f19903b29b83164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x96896ABD975DFBDEBFBE3FA561D360 GAS PREVRANDAO 0x25 XOR 0xE7 SGT MSTORE 0xB4 SDIV 0xF NOT SWAP1 EXTCODESIZE 0x29 0xB8 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3094:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6043237e30ca05729991fed710097937894b17d4c39837f4910edc10366336664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 DIV ORIGIN CALLDATACOPY 0xE3 0xC LOG0 JUMPI 0x29 SWAP10 0x1F 0xED PUSH18 0x97937894B17D4C39837F4910EDC1036633 PUSH7 0x64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"431:1480:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1480:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6043237e30ca05729991fed710097937894b17d4c39837f4910edc10366336664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 DIV ORIGIN CALLDATACOPY 0xE3 0xC LOG0 JUMPI 0x29 SWAP10 0x1F 0xED PUSH18 0x97937894B17D4C39837F4910EDC1036633 PUSH7 0x64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"431:1480:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f7c0949677b95b4acb67215f72a5eb1d205f6985ed0671fed2eb9f5ffd3ea4d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH29 0x949677B95B4ACB67215F72A5EB1D205F6985ED0671FED2EB9F5FFD3EA 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"459:17881:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;459:17881:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f7c0949677b95b4acb67215f72a5eb1d205f6985ed0671fed2eb9f5ffd3ea4d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH29 0x949677B95B4ACB67215F72A5EB1D205F6985ED0671FED2EB9F5FFD3EA 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"459:17881:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220355a992060b23def967700d94c54a3d95f9c9066d8dd63e7f4c61ecda011343664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD GAS SWAP10 KECCAK256 PUSH1 0xB2 RETURNDATASIZE 0xEF SWAP7 PUSH24 0xD94C54A3D95F9C9066D8DD63E7F4C61ECDA01134366473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"224:218:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;224:218:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220355a992060b23def967700d94c54a3d95f9c9066d8dd63e7f4c61ecda011343664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD GAS SWAP10 KECCAK256 PUSH1 0xB2 RETURNDATASIZE 0xEF SWAP7 PUSH24 0xD94C54A3D95F9C9066D8DD63E7F4C61ECDA01134366473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"224:218:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099ac7f14c7ad2a2d33621d8d22955aa36395ed76f285c61a85d5008088a6ea8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xAC PUSH32 0x14C7AD2A2D33621D8D22955AA36395ED76F285C61A85D5008088A6EA8764736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1598:3723:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1598:3723:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099ac7f14c7ad2a2d33621d8d22955aa36395ed76f285c61a85d5008088a6ea8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xAC PUSH32 0x14C7AD2A2D33621D8D22955AA36395ED76F285C61A85D5008088A6EA8764736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1598:3723:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e418efcf027178c24969ef9cce14fe62f83bae952917381bb412a374c5fe008f64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 XOR 0xEF 0xCF MUL PUSH18 0x78C24969EF9CCE14FE62F83BAE952917381B 0xB4 SLT LOG3 PUSH21 0xC5FE008F64736F6C63430008140033000000000000 ","sourceMap":"297:16541:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:16541:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e418efcf027178c24969ef9cce14fe62f83bae952917381bb412a374c5fe008f64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 XOR 0xEF 0xCF MUL PUSH18 0x78C24969EF9CCE14FE62F83BAE952917381B 0xB4 SLT LOG3 PUSH21 0xC5FE008F64736F6C63430008140033000000000000 ","sourceMap":"297:16541:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209544771c102b4030bce79c3ee7998a21bfbdfbef060da8efbbf2e9592019a69764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PREVRANDAO PUSH24 0x1C102B4030BCE79C3EE7998A21BFBDFBEF060DA8EFBBF2E9 MSIZE KECCAK256 NOT 0xA6 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209544771c102b4030bce79c3ee7998a21bfbdfbef060da8efbbf2e9592019a69764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PREVRANDAO PUSH24 0x1C102B4030BCE79C3EE7998A21BFBDFBEF060DA8EFBBF2E9 MSIZE KECCAK256 NOT 0xA6 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:27:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:27;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/Hashpin.sol":{"Hashpin":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"adapter","type":"address"},{"indexed":false,"internalType":"bool","name":"whitelisted","type":"bool"}],"name":"AdapterWhitelisted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"name":"DifficultyUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"claimer","type":"address"},{"indexed":true,"internalType":"bytes32","name":"hash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"adapter","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"HashClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pinner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"powHash","type":"bytes32"},{"indexed":false,"internalType":"string","name":"metadata","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"HashPinned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"INITIAL_DIFFICULTY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"},{"internalType":"address","name":"adapter","type":"address"},{"internalType":"bytes","name":"metadata","type":"bytes"}],"name":"claimHash","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"currentDifficulty","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDifficulty","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"powHash","type":"bytes32"}],"name":"getHashDetails","outputs":[{"internalType":"address","name":"pinner","type":"address"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"meetsDifficulty","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"string","name":"metadata","type":"string"}],"name":"pinHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"pinnedHashes","outputs":[{"internalType":"address","name":"pinner","type":"address"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"adapter","type":"address"},{"internalType":"bool","name":"whitelisted","type":"bool"}],"name":"setAdapterWhitelisted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"name":"setDifficulty","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"verifyHash","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"whitelistedAdapters","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8958":{"entryPoint":null,"id":8958,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":75,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:219:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:33","statements":[{"nodeType":"YulAssignment","src":"125:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:33"},"nodeType":"YulFunctionCall","src":"133:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:33"},"nodeType":"YulFunctionCall","src":"194:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:33"},"nodeType":"YulFunctionCall","src":"190:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:33"},"nodeType":"YulFunctionCall","src":"178:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:33"},"nodeType":"YulFunctionCall","src":"160:51:33"},"nodeType":"YulExpressionStatement","src":"160:51:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:33","type":""}],"src":"14:203:33"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100408161004b565b50600460025561009b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111be806100aa6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806380a25abc11610097578063b893cce211610066578063b893cce2146101f5578063d3ed240914610218578063ebdfd6ec14610220578063f2fde38b1461023357600080fd5b806380a25abc146101a65780638da5cb5b146101c957806395314d51146101da578063b6baffe3146101ed57600080fd5b80635c062d6c116100d35780635c062d6c1461016d578063602512e114610176578063715018a61461018b57806379381a971461019357600080fd5b8063060c0bfc146100fa5780631758c77a1461012a5780634c8460a11461014c575b600080fd5b61010d610108366004610c43565b610246565b6040516001600160a01b0390911681526020015b60405180910390f35b61013d610138366004610c8f565b6102fa565b60405161012193929190610ca8565b61015f61015a366004610d4f565b610415565b604051908152602001610121565b61015f60025481565b610189610184366004610c8f565b610629565b005b6101896106c8565b61015f6101a1366004610dbe565b6106dc565b6101b96101b4366004610c8f565b61096a565b6040519015158152602001610121565b6000546001600160a01b031661010d565b61013d6101e8366004610c8f565b610a1f565b60025461015f565b6101b9610203366004610e4b565b60036020526000908152604090205460ff1681565b61015f600481565b61018961022e366004610e6d565b610ad5565b610189610241366004610e4b565b610b3c565b60008161026e5760405162461bcd60e51b815260040161026590610ea9565b60405180910390fd5b8360005b838110156102d9578185858381811061028d5761028d610ef5565b905060200201356040516020016102ae929190918252602082015260400190565b60405160208183030381529060405280519060200120915080806102d190610f21565b915050610272565b506000908152600160205260409020546001600160a01b0316949350505050565b600081815260016020526040812060020154606090829061034e5760405162461bcd60e51b815260206004820152600e60248201526d12185cda081b9bdd08199bdd5b9960921b6044820152606401610265565b600084815260016020819052604090912080546002820154928201805492936001600160a01b0390921692909190829061038790610f3a565b80601f01602080910402602001604051908101604052809291908181526020018280546103b390610f3a565b80156104005780601f106103d557610100808354040283529160200191610400565b820191906000526020600020905b8154815290600101906020018083116103e357829003601f168201915b50505050509150935093509350509193909250565b60008461045b5760405162461bcd60e51b8152602060048201526014602482015273486173682063616e6e6f7420626520656d70747960601b6044820152606401610265565b604080516020808201889052818301879052825180830384018152606090920183528151918101919091206000818152600190925291902060020154156104da5760405162461bcd60e51b815260206004820152601360248201527212185cda08185b1c9958591e481c1a5b9b9959606a1b6044820152606401610265565b6104e38161096a565b6105415760405162461bcd60e51b815260206004820152602960248201527f4861736820646f6573206e6f74206d65657420646966666963756c74792072656044820152681c5d5a5c995b595b9d60ba1b6064820152608401610265565b6040518060600160405280336001600160a01b0316815260200185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050426020938401525083815260018083526040909120835181546001600160a01b0319166001600160a01b0390911617815591830151908201906105d59082610fd9565b5060409182015160029091015551819033907fe4bba2d0223259da1a7581431df71e45609917cfb573b4d2c434499441f23ea190610618908890889042906110c2565b60405180910390a395945050505050565b610631610b7a565b61010081111561068d5760405162461bcd60e51b815260206004820152602160248201527f446966666963756c74792063616e6e6f742065786365656420323536206269746044820152607360f81b6064820152608401610265565b60028190556040518181527f5a790c48cbebdceff3f1fcd445afd12d57302b7196738d61c60dcd491bf3efba9060200160405180910390a150565b6106d0610b7a565b6106da6000610ba7565b565b6000846106fb5760405162461bcd60e51b815260040161026590610ea9565b8660005b86811015610766578188888381811061071a5761071a610ef5565b9050602002013560405160200161073b929190918252602082015260400190565b604051602081830303815290604052805190602001209150808061075e90610f21565b9150506106ff565b5060008181526001602052604090206002015481906107b85760405162461bcd60e51b815260206004820152600e60248201526d12185cda081b9bdd08199bdd5b9960921b6044820152606401610265565b6000818152600160205260409020546001600160a01b0316331461082a5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79207468652070696e6e65722063616e20636c61696d207468697320686044820152620c2e6d60eb1b6064820152608401610265565b6001600160a01b03861660009081526003602052604090205460ff166108925760405162461bcd60e51b815260206004820152601760248201527f41646170746572206e6f742077686974656c69737465640000000000000000006044820152606401610265565b60405163b6483bab60e01b815286906000906001600160a01b0383169063b6483bab906108c99033908f908c908c906004016110e6565b6020604051808303816000875af11580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c9190611118565b9050876001600160a01b03168b336001600160a01b03167f3d095c3b92d17d84e3cd9810eb5ad0a1e7e5934d567f1cb32e60c78596368c778460405161095491815260200190565b60405180910390a49a9950505050505050505050565b600080600860025461097c9190611147565b90506000600860025461098f919061115b565b905060005b828110156109d1578481602081106109ae576109ae610ef5565b1a156109bf57506000949350505050565b806109c981610f21565b915050610994565b508015610a155760006109e582600861116f565b60ff901b9050808584602081106109fe576109fe610ef5565b1a1660ff1615610a1357506000949350505050565b505b5060019392505050565b6001602081905260009182526040909120805491810180546001600160a01b0390931692610a4c90610f3a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7890610f3a565b8015610ac55780601f10610a9a57610100808354040283529160200191610ac5565b820191906000526020600020905b815481529060010190602001808311610aa857829003601f168201915b5050505050908060020154905083565b610add610b7a565b6001600160a01b038216600081815260036020908152604091829020805460ff191685151590811790915591519182527f3cece36ac6216147f57b10bb30975f82b18b8b290a7925c322277e684afcce4a910160405180910390a25050565b610b44610b7a565b6001600160a01b038116610b6e57604051631e4fbdf760e01b815260006004820152602401610265565b610b7781610ba7565b50565b6000546001600160a01b031633146106da5760405163118cdaa760e01b8152336004820152602401610265565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f840112610c0957600080fd5b50813567ffffffffffffffff811115610c2157600080fd5b6020830191508360208260051b8501011115610c3c57600080fd5b9250929050565b600080600060408486031215610c5857600080fd5b83359250602084013567ffffffffffffffff811115610c7657600080fd5b610c8286828701610bf7565b9497909650939450505050565b600060208284031215610ca157600080fd5b5035919050565b60018060a01b038416815260006020606081840152845180606085015260005b81811015610ce457868101830151858201608001528201610cc8565b506000608082860101526080601f19601f83011685010192505050826040830152949350505050565b60008083601f840112610d1f57600080fd5b50813567ffffffffffffffff811115610d3757600080fd5b602083019150836020828501011115610c3c57600080fd5b60008060008060608587031215610d6557600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610d8a57600080fd5b610d9687828801610d0d565b95989497509550505050565b80356001600160a01b0381168114610db957600080fd5b919050565b60008060008060008060808789031215610dd757600080fd5b86359550602087013567ffffffffffffffff80821115610df657600080fd5b610e028a838b01610bf7565b9097509550859150610e1660408a01610da2565b94506060890135915080821115610e2c57600080fd5b50610e3989828a01610d0d565b979a9699509497509295939492505050565b600060208284031215610e5d57600080fd5b610e6682610da2565b9392505050565b60008060408385031215610e8057600080fd5b610e8983610da2565b915060208301358015158114610e9e57600080fd5b809150509250929050565b6020808252602c908201527f4d65726b6c652070726f6f66206d75737420696e636c756465206174206c656160408201526b737420746865206e6f6e636560a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610f3357610f33610f0b565b5060010190565b600181811c90821680610f4e57607f821691505b602082108103610f6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610fd457600081815260208120601f850160051c81016020861015610fb15750805b601f850160051c820191505b81811015610fd057828155600101610fbd565b5050505b505050565b815167ffffffffffffffff811115610ff357610ff3610f74565b611007816110018454610f3a565b84610f8a565b602080601f83116001811461103c57600084156110245750858301515b600019600386901b1c1916600185901b178555610fd0565b600085815260208120601f198616915b8281101561106b5788860151825594840194600190910190840161104c565b50858210156110895787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6040815260006110d6604083018587611099565b9050826020830152949350505050565b60018060a01b038516815283602082015260606040820152600061110e606083018486611099565b9695505050505050565b60006020828403121561112a57600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b60008261115657611156611131565b500490565b60008261116a5761116a611131565b500690565b8181038181111561118257611182610f0b565b9291505056fea26469706673582212205b5556de0d9b8fbdf56c842435164f38dd9e554079e0bff17bb3bec4d9e6992464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH2 0x37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40 DUP2 PUSH2 0x4B JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0x2 SSTORE PUSH2 0x9B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x11BE DUP1 PUSH2 0xAA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80A25ABC GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB893CCE2 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB893CCE2 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xD3ED2409 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xEBDFD6EC EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80A25ABC EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95314D51 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xB6BAFFE3 EQ PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C062D6C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5C062D6C EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x602512E1 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x79381A97 EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60C0BFC EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x1758C77A EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x4C8460A1 EQ PUSH2 0x14C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xD4F JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x15F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x96A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10D JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x15F JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x26E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x265 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D9 JUMPI DUP2 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x28D JUMPI PUSH2 0x28D PUSH2 0xEF5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2AE SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP DUP1 DUP1 PUSH2 0x2D1 SWAP1 PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x272 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x60 SWAP1 DUP3 SWAP1 PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x12185CDA081B9BDD08199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP3 ADD DUP1 SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH2 0x387 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B3 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x400 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x400 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x486173682063616E6E6F7420626520656D707479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD DUP4 MSTORE DUP2 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x12185CDA08185B1C9958591E481C1A5B9B9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x265 JUMP JUMPDEST PUSH2 0x4E3 DUP2 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4861736820646F6573206E6F74206D65657420646966666963756C7479207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1C5D5A5C995B595B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP TIMESTAMP PUSH1 0x20 SWAP4 DUP5 ADD MSTORE POP DUP4 DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP2 DUP4 ADD MLOAD SWAP1 DUP3 ADD SWAP1 PUSH2 0x5D5 SWAP1 DUP3 PUSH2 0xFD9 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0xE4BBA2D0223259DA1A7581431DF71E45609917CFB573B4D2C434499441F23EA1 SWAP1 PUSH2 0x618 SWAP1 DUP9 SWAP1 DUP9 SWAP1 TIMESTAMP SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x631 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x100 DUP2 GT ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446966666963756C74792063616E6E6F74206578636565642032353620626974 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x5A790C48CBEBDCEFF3F1FCD445AFD12D57302B7196738D61C60DCD491BF3EFBA SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6D0 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x6DA PUSH1 0x0 PUSH2 0xBA7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x265 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST DUP7 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x766 JUMPI DUP2 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x71A JUMPI PUSH2 0x71A PUSH2 0xEF5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x73B SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP DUP1 DUP1 PUSH2 0x75E SWAP1 PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6FF JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 SWAP1 PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x12185CDA081B9BDD08199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652070696E6E65722063616E20636C61696D20746869732068 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xC2E6D PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646170746572206E6F742077686974656C6973746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB6483BAB PUSH1 0xE0 SHL DUP2 MSTORE DUP7 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xB6483BAB SWAP1 PUSH2 0x8C9 SWAP1 CALLER SWAP1 DUP16 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90C SWAP2 SWAP1 PUSH2 0x1118 JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3D095C3B92D17D84E3CD9810EB5AD0A1E7E5934D567F1CB32E60C78596368C77 DUP5 PUSH1 0x40 MLOAD PUSH2 0x954 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x2 SLOAD PUSH2 0x97C SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x2 SLOAD PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x115B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9D1 JUMPI DUP5 DUP2 PUSH1 0x20 DUP2 LT PUSH2 0x9AE JUMPI PUSH2 0x9AE PUSH2 0xEF5 JUMP JUMPDEST BYTE ISZERO PUSH2 0x9BF JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x9C9 DUP2 PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x994 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xA15 JUMPI PUSH1 0x0 PUSH2 0x9E5 DUP3 PUSH1 0x8 PUSH2 0x116F JUMP JUMPDEST PUSH1 0xFF SWAP1 SHL SWAP1 POP DUP1 DUP6 DUP5 PUSH1 0x20 DUP2 LT PUSH2 0x9FE JUMPI PUSH2 0x9FE PUSH2 0xEF5 JUMP JUMPDEST BYTE AND PUSH1 0xFF AND ISZERO PUSH2 0xA13 JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH2 0xA4C SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA78 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAC5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA9A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAC5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAA8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x3CECE36AC6216147F57B10BB30975F82B18B8B290A7925C322277E684AFCCE4A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xB44 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB6E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x265 JUMP JUMPDEST PUSH2 0xB77 DUP2 PUSH2 0xBA7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xC09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC82 DUP7 DUP3 DUP8 ADD PUSH2 0xBF7 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x60 DUP2 DUP5 ADD MSTORE DUP5 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCE4 JUMPI DUP7 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0xCC8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x80 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x80 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xD1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD96 DUP8 DUP3 DUP9 ADD PUSH2 0xD0D JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE02 DUP11 DUP4 DUP12 ADD PUSH2 0xBF7 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0xE16 PUSH1 0x40 DUP11 ADD PUSH2 0xDA2 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE39 DUP10 DUP3 DUP11 ADD PUSH2 0xD0D JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE66 DUP3 PUSH2 0xDA2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE89 DUP4 PUSH2 0xDA2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4D65726B6C652070726F6F66206D75737420696E636C756465206174206C6561 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x737420746865206E6F6E6365 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xF33 JUMPI PUSH2 0xF33 PUSH2 0xF0B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF4E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF6E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xFD4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xFB1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFD0 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFBD JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF3 JUMPI PUSH2 0xFF3 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x1007 DUP2 PUSH2 0x1001 DUP5 SLOAD PUSH2 0xF3A JUMP JUMPDEST DUP5 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x103C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1024 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x106B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x104C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1089 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x10D6 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x1099 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x110E PUSH1 0x60 DUP4 ADD DUP5 DUP7 PUSH2 0x1099 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1156 JUMPI PUSH2 0x1156 PUSH2 0x1131 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x116A JUMPI PUSH2 0x116A PUSH2 0x1131 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1182 JUMPI PUSH2 0x1182 PUSH2 0xF0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST SSTORE JUMP 0xDE 0xD SWAP12 DUP16 0xBD CREATE2 PUSH13 0x842435164F38DD9E554079E0BF CALL PUSH28 0xB3BEC4D9E6992464736F6C6343000814003300000000000000000000 ","sourceMap":"273:8111:28:-:0;;;1169:89;;;;;;;;;-1:-1:-1;1191:10:28;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:33;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1032:1:28::1;1213:17;:38:::0;273:8111;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:33:-;273:8111:28;;;;;;"},"deployedBytecode":{"functionDebugData":{"@INITIAL_DIFFICULTY_8942":{"entryPoint":null,"id":8942,"parameterSlots":0,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2938,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_3813":{"entryPoint":null,"id":3813,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":2983,"id":146,"parameterSlots":1,"returnSlots":0},"@claimHash_9222":{"entryPoint":1756,"id":9222,"parameterSlots":6,"returnSlots":1},"@currentDifficulty_8939":{"entryPoint":null,"id":8939,"parameterSlots":0,"returnSlots":0},"@getDifficulty_9349":{"entryPoint":null,"id":9349,"parameterSlots":0,"returnSlots":1},"@getHashDetails_9340":{"entryPoint":762,"id":9340,"parameterSlots":1,"returnSlots":3},"@meetsDifficulty_9037":{"entryPoint":2410,"id":9037,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@pinHash_9110":{"entryPoint":1045,"id":9110,"parameterSlots":4,"returnSlots":1},"@pinnedHashes_8937":{"entryPoint":2591,"id":8937,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1736,"id":98,"parameterSlots":0,"returnSlots":0},"@setAdapterWhitelisted_9244":{"entryPoint":2773,"id":9244,"parameterSlots":2,"returnSlots":0},"@setDifficulty_9373":{"entryPoint":1577,"id":9373,"parameterSlots":1,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2876,"id":126,"parameterSlots":1,"returnSlots":0},"@verifyHash_9302":{"entryPoint":582,"id":9302,"parameterSlots":3,"returnSlots":1},"@whitelistedAdapters_8946":{"entryPoint":null,"id":8946,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":3490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":3063,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_string_calldata":{"entryPoint":3341,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":3659,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bool":{"entryPoint":3693,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":3215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":3139,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_array$_t_bytes32_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr":{"entryPoint":3518,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bytes32t_uint256t_string_calldata_ptr":{"entryPoint":3407,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":4376,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":4249,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4326,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":3240,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":4290,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5014a9a8ebb91f3f7d1f9c8268519c975f146564f008dddc6722ad0689be85d7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_598457107a7abae200ae7e953bc41c27a5b232e6eebc911f8bf716d6a0b11258__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6fa4cf7bb67e3bd955752d16a090c56646edecbe4299946d78f53807128f8496__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_913db5539dd5498f2d4f22507c7955fa40c01c4197f0a1928f9e953889ed79ff__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cd421abfd59df9c3fa903e2aac4e0be988669d73bafed047c6f76015bd921f05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e392b938160012a83dd91d0d152871d87bf802079f71bc28e807a2d5a3c01b3f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f617e16a973f32406523e865d683237754ca887ff188c497562e759341ce05d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f880b54ed3054d94e6d073c5cc65d4a58c8b3077b4a2ae74b173c261849a2379__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3753,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4423,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4463,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":3978,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4057,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3898,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":3873,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":4443,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3851,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4401,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3829,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3956,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13630:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"98:283:33","statements":[{"body":{"nodeType":"YulBlock","src":"147:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"149:6:33"},"nodeType":"YulFunctionCall","src":"149:12:33"},"nodeType":"YulExpressionStatement","src":"149:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"126:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"134:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"122:3:33"},"nodeType":"YulFunctionCall","src":"122:17:33"},{"name":"end","nodeType":"YulIdentifier","src":"141:3:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"118:3:33"},"nodeType":"YulFunctionCall","src":"118:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"111:6:33"},"nodeType":"YulFunctionCall","src":"111:35:33"},"nodeType":"YulIf","src":"108:55:33"},{"nodeType":"YulAssignment","src":"172:30:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"195:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"182:12:33"},"nodeType":"YulFunctionCall","src":"182:20:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"172:6:33"}]},{"body":{"nodeType":"YulBlock","src":"245:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"257:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"247:6:33"},"nodeType":"YulFunctionCall","src":"247:12:33"},"nodeType":"YulExpressionStatement","src":"247:12:33"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"217:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"225:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"214:2:33"},"nodeType":"YulFunctionCall","src":"214:30:33"},"nodeType":"YulIf","src":"211:50:33"},{"nodeType":"YulAssignment","src":"270:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"286:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"294:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"282:3:33"},"nodeType":"YulFunctionCall","src":"282:17:33"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"270:8:33"}]},{"body":{"nodeType":"YulBlock","src":"359:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"368:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"371:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"361:6:33"},"nodeType":"YulFunctionCall","src":"361:12:33"},"nodeType":"YulExpressionStatement","src":"361:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"322:6:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:33","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"337:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:33"},"nodeType":"YulFunctionCall","src":"330:14:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"318:3:33"},"nodeType":"YulFunctionCall","src":"318:27:33"},{"kind":"number","nodeType":"YulLiteral","src":"347:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"314:3:33"},"nodeType":"YulFunctionCall","src":"314:38:33"},{"name":"end","nodeType":"YulIdentifier","src":"354:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"311:2:33"},"nodeType":"YulFunctionCall","src":"311:47:33"},"nodeType":"YulIf","src":"308:67:33"}]},"name":"abi_decode_array_bytes32_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"61:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"69:3:33","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"77:8:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"87:6:33","type":""}],"src":"14:367:33"},{"body":{"nodeType":"YulBlock","src":"508:383:33","statements":[{"body":{"nodeType":"YulBlock","src":"554:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:33"},"nodeType":"YulFunctionCall","src":"556:12:33"},"nodeType":"YulExpressionStatement","src":"556:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"529:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"538:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"525:3:33"},"nodeType":"YulFunctionCall","src":"525:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"550:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"521:3:33"},"nodeType":"YulFunctionCall","src":"521:32:33"},"nodeType":"YulIf","src":"518:52:33"},{"nodeType":"YulAssignment","src":"579:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"602:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"589:12:33"},"nodeType":"YulFunctionCall","src":"589:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"579:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"621:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"652:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"648:3:33"},"nodeType":"YulFunctionCall","src":"648:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:33"},"nodeType":"YulFunctionCall","src":"635:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"625:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"710:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"719:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"722:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"712:6:33"},"nodeType":"YulFunctionCall","src":"712:12:33"},"nodeType":"YulExpressionStatement","src":"712:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"682:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"690:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"679:2:33"},"nodeType":"YulFunctionCall","src":"679:30:33"},"nodeType":"YulIf","src":"676:50:33"},{"nodeType":"YulVariableDeclaration","src":"735:96:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"803:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"814:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"799:3:33"},"nodeType":"YulFunctionCall","src":"799:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"823:7:33"}],"functionName":{"name":"abi_decode_array_bytes32_dyn_calldata","nodeType":"YulIdentifier","src":"761:37:33"},"nodeType":"YulFunctionCall","src":"761:70:33"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"739:8:33","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"749:8:33","type":""}]},{"nodeType":"YulAssignment","src":"840:18:33","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"850:8:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"840:6:33"}]},{"nodeType":"YulAssignment","src":"867:18:33","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"877:8:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"867:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"458:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"469:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"481:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"489:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"497:6:33","type":""}],"src":"386:505:33"},{"body":{"nodeType":"YulBlock","src":"997:102:33","statements":[{"nodeType":"YulAssignment","src":"1007:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1019:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1030:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1015:3:33"},"nodeType":"YulFunctionCall","src":"1015:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1007:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1049:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1064:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1080:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1085:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1076:3:33"},"nodeType":"YulFunctionCall","src":"1076:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"1089:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1072:3:33"},"nodeType":"YulFunctionCall","src":"1072:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1060:3:33"},"nodeType":"YulFunctionCall","src":"1060:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1042:6:33"},"nodeType":"YulFunctionCall","src":"1042:51:33"},"nodeType":"YulExpressionStatement","src":"1042:51:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"966:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"977:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"988:4:33","type":""}],"src":"896:203:33"},{"body":{"nodeType":"YulBlock","src":"1174:110:33","statements":[{"body":{"nodeType":"YulBlock","src":"1220:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1229:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1232:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1222:6:33"},"nodeType":"YulFunctionCall","src":"1222:12:33"},"nodeType":"YulExpressionStatement","src":"1222:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1195:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"1204:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1191:3:33"},"nodeType":"YulFunctionCall","src":"1191:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"1216:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1187:3:33"},"nodeType":"YulFunctionCall","src":"1187:32:33"},"nodeType":"YulIf","src":"1184:52:33"},{"nodeType":"YulAssignment","src":"1245:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1268:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1255:12:33"},"nodeType":"YulFunctionCall","src":"1255:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1245:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1140:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1151:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1163:6:33","type":""}],"src":"1104:180:33"},{"body":{"nodeType":"YulBlock","src":"1466:542:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1483:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1498:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1514:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1519:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1510:3:33"},"nodeType":"YulFunctionCall","src":"1510:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"1523:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1506:3:33"},"nodeType":"YulFunctionCall","src":"1506:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1494:3:33"},"nodeType":"YulFunctionCall","src":"1494:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1476:6:33"},"nodeType":"YulFunctionCall","src":"1476:51:33"},"nodeType":"YulExpressionStatement","src":"1476:51:33"},{"nodeType":"YulVariableDeclaration","src":"1536:12:33","value":{"kind":"number","nodeType":"YulLiteral","src":"1546:2:33","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1540:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1568:9:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1579:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1564:3:33"},"nodeType":"YulFunctionCall","src":"1564:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"1584:2:33","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1557:6:33"},"nodeType":"YulFunctionCall","src":"1557:30:33"},"nodeType":"YulExpressionStatement","src":"1557:30:33"},{"nodeType":"YulVariableDeclaration","src":"1596:27:33","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1616:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1610:5:33"},"nodeType":"YulFunctionCall","src":"1610:13:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1600:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1643:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1654:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1639:3:33"},"nodeType":"YulFunctionCall","src":"1639:18:33"},{"name":"length","nodeType":"YulIdentifier","src":"1659:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1632:6:33"},"nodeType":"YulFunctionCall","src":"1632:34:33"},"nodeType":"YulExpressionStatement","src":"1632:34:33"},{"nodeType":"YulVariableDeclaration","src":"1675:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"1684:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1679:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1744:91:33","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1773:9:33"},{"name":"i","nodeType":"YulIdentifier","src":"1784:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1769:3:33"},"nodeType":"YulFunctionCall","src":"1769:17:33"},{"kind":"number","nodeType":"YulLiteral","src":"1788:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1765:3:33"},"nodeType":"YulFunctionCall","src":"1765:27:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1808:6:33"},{"name":"i","nodeType":"YulIdentifier","src":"1816:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1804:3:33"},"nodeType":"YulFunctionCall","src":"1804:14:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1820:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1800:3:33"},"nodeType":"YulFunctionCall","src":"1800:23:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1794:5:33"},"nodeType":"YulFunctionCall","src":"1794:30:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1758:6:33"},"nodeType":"YulFunctionCall","src":"1758:67:33"},"nodeType":"YulExpressionStatement","src":"1758:67:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1705:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"1708:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1702:2:33"},"nodeType":"YulFunctionCall","src":"1702:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1716:19:33","statements":[{"nodeType":"YulAssignment","src":"1718:15:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1727:1:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1730:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1723:3:33"},"nodeType":"YulFunctionCall","src":"1723:10:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1718:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"1698:3:33","statements":[]},"src":"1694:141:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1859:9:33"},{"name":"length","nodeType":"YulIdentifier","src":"1870:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1855:3:33"},"nodeType":"YulFunctionCall","src":"1855:22:33"},{"kind":"number","nodeType":"YulLiteral","src":"1879:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1851:3:33"},"nodeType":"YulFunctionCall","src":"1851:32:33"},{"kind":"number","nodeType":"YulLiteral","src":"1885:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1844:6:33"},"nodeType":"YulFunctionCall","src":"1844:43:33"},"nodeType":"YulExpressionStatement","src":"1844:43:33"},{"nodeType":"YulAssignment","src":"1896:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1912:9:33"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1931:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"1939:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1927:3:33"},"nodeType":"YulFunctionCall","src":"1927:15:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1948:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1944:3:33"},"nodeType":"YulFunctionCall","src":"1944:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1923:3:33"},"nodeType":"YulFunctionCall","src":"1923:29:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1908:3:33"},"nodeType":"YulFunctionCall","src":"1908:45:33"},{"kind":"number","nodeType":"YulLiteral","src":"1955:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1904:3:33"},"nodeType":"YulFunctionCall","src":"1904:55:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1896:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1979:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1990:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1975:3:33"},"nodeType":"YulFunctionCall","src":"1975:18:33"},{"name":"value2","nodeType":"YulIdentifier","src":"1995:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1968:6:33"},"nodeType":"YulFunctionCall","src":"1968:34:33"},"nodeType":"YulExpressionStatement","src":"1968:34:33"}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1419:9:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1430:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1438:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1446:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1457:4:33","type":""}],"src":"1289:719:33"},{"body":{"nodeType":"YulBlock","src":"2086:275:33","statements":[{"body":{"nodeType":"YulBlock","src":"2135:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2144:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2147:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2137:6:33"},"nodeType":"YulFunctionCall","src":"2137:12:33"},"nodeType":"YulExpressionStatement","src":"2137:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2114:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"2122:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2110:3:33"},"nodeType":"YulFunctionCall","src":"2110:17:33"},{"name":"end","nodeType":"YulIdentifier","src":"2129:3:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2106:3:33"},"nodeType":"YulFunctionCall","src":"2106:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2099:6:33"},"nodeType":"YulFunctionCall","src":"2099:35:33"},"nodeType":"YulIf","src":"2096:55:33"},{"nodeType":"YulAssignment","src":"2160:30:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2183:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2170:12:33"},"nodeType":"YulFunctionCall","src":"2170:20:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2160:6:33"}]},{"body":{"nodeType":"YulBlock","src":"2233:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2242:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2245:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2235:6:33"},"nodeType":"YulFunctionCall","src":"2235:12:33"},"nodeType":"YulExpressionStatement","src":"2235:12:33"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2205:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"2213:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2202:2:33"},"nodeType":"YulFunctionCall","src":"2202:30:33"},"nodeType":"YulIf","src":"2199:50:33"},{"nodeType":"YulAssignment","src":"2258:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2274:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"2282:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2270:3:33"},"nodeType":"YulFunctionCall","src":"2270:17:33"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2258:8:33"}]},{"body":{"nodeType":"YulBlock","src":"2339:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2348:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2351:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2341:6:33"},"nodeType":"YulFunctionCall","src":"2341:12:33"},"nodeType":"YulExpressionStatement","src":"2341:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2310:6:33"},{"name":"length","nodeType":"YulIdentifier","src":"2318:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2306:3:33"},"nodeType":"YulFunctionCall","src":"2306:19:33"},{"kind":"number","nodeType":"YulLiteral","src":"2327:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2302:3:33"},"nodeType":"YulFunctionCall","src":"2302:30:33"},{"name":"end","nodeType":"YulIdentifier","src":"2334:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2299:2:33"},"nodeType":"YulFunctionCall","src":"2299:39:33"},"nodeType":"YulIf","src":"2296:59:33"}]},"name":"abi_decode_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2049:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"2057:3:33","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2065:8:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"2075:6:33","type":""}],"src":"2013:348:33"},{"body":{"nodeType":"YulBlock","src":"2490:423:33","statements":[{"body":{"nodeType":"YulBlock","src":"2536:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2545:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2548:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2538:6:33"},"nodeType":"YulFunctionCall","src":"2538:12:33"},"nodeType":"YulExpressionStatement","src":"2538:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2511:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2520:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2507:3:33"},"nodeType":"YulFunctionCall","src":"2507:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2532:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2503:3:33"},"nodeType":"YulFunctionCall","src":"2503:32:33"},"nodeType":"YulIf","src":"2500:52:33"},{"nodeType":"YulAssignment","src":"2561:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2584:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2571:12:33"},"nodeType":"YulFunctionCall","src":"2571:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2561:6:33"}]},{"nodeType":"YulAssignment","src":"2603:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2630:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2641:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:33"},"nodeType":"YulFunctionCall","src":"2626:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2613:12:33"},"nodeType":"YulFunctionCall","src":"2613:32:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2603:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"2654:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2685:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2696:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2681:3:33"},"nodeType":"YulFunctionCall","src":"2681:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2668:12:33"},"nodeType":"YulFunctionCall","src":"2668:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2658:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"2743:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2752:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2755:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2745:6:33"},"nodeType":"YulFunctionCall","src":"2745:12:33"},"nodeType":"YulExpressionStatement","src":"2745:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2715:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"2723:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2712:2:33"},"nodeType":"YulFunctionCall","src":"2712:30:33"},"nodeType":"YulIf","src":"2709:50:33"},{"nodeType":"YulVariableDeclaration","src":"2768:85:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2825:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"2836:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2821:3:33"},"nodeType":"YulFunctionCall","src":"2821:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2845:7:33"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"2794:26:33"},"nodeType":"YulFunctionCall","src":"2794:59:33"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"2772:8:33","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"2782:8:33","type":""}]},{"nodeType":"YulAssignment","src":"2862:18:33","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"2872:8:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2862:6:33"}]},{"nodeType":"YulAssignment","src":"2889:18:33","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"2899:8:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2889:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2432:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2443:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2455:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2463:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2471:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2479:6:33","type":""}],"src":"2366:547:33"},{"body":{"nodeType":"YulBlock","src":"3019:76:33","statements":[{"nodeType":"YulAssignment","src":"3029:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3041:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3052:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3037:3:33"},"nodeType":"YulFunctionCall","src":"3037:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3029:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3071:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"3082:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3064:6:33"},"nodeType":"YulFunctionCall","src":"3064:25:33"},"nodeType":"YulExpressionStatement","src":"3064:25:33"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2988:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2999:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3010:4:33","type":""}],"src":"2918:177:33"},{"body":{"nodeType":"YulBlock","src":"3201:76:33","statements":[{"nodeType":"YulAssignment","src":"3211:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3223:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3234:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3219:3:33"},"nodeType":"YulFunctionCall","src":"3219:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3211:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3253:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"3264:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3246:6:33"},"nodeType":"YulFunctionCall","src":"3246:25:33"},"nodeType":"YulExpressionStatement","src":"3246:25:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3170:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3181:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3192:4:33","type":""}],"src":"3100:177:33"},{"body":{"nodeType":"YulBlock","src":"3352:110:33","statements":[{"body":{"nodeType":"YulBlock","src":"3398:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3407:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3410:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3400:6:33"},"nodeType":"YulFunctionCall","src":"3400:12:33"},"nodeType":"YulExpressionStatement","src":"3400:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3373:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"3382:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3369:3:33"},"nodeType":"YulFunctionCall","src":"3369:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"3394:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3365:3:33"},"nodeType":"YulFunctionCall","src":"3365:32:33"},"nodeType":"YulIf","src":"3362:52:33"},{"nodeType":"YulAssignment","src":"3423:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3446:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3433:12:33"},"nodeType":"YulFunctionCall","src":"3433:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3423:6:33"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3318:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3329:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3341:6:33","type":""}],"src":"3282:180:33"},{"body":{"nodeType":"YulBlock","src":"3516:124:33","statements":[{"nodeType":"YulAssignment","src":"3526:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3548:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3535:12:33"},"nodeType":"YulFunctionCall","src":"3535:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3526:5:33"}]},{"body":{"nodeType":"YulBlock","src":"3618:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3627:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3630:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3620:6:33"},"nodeType":"YulFunctionCall","src":"3620:12:33"},"nodeType":"YulExpressionStatement","src":"3620:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3577:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3588:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3603:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3608:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3599:3:33"},"nodeType":"YulFunctionCall","src":"3599:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"3612:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3595:3:33"},"nodeType":"YulFunctionCall","src":"3595:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3584:3:33"},"nodeType":"YulFunctionCall","src":"3584:31:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3574:2:33"},"nodeType":"YulFunctionCall","src":"3574:42:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3567:6:33"},"nodeType":"YulFunctionCall","src":"3567:50:33"},"nodeType":"YulIf","src":"3564:70:33"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3495:6:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3506:5:33","type":""}],"src":"3467:173:33"},{"body":{"nodeType":"YulBlock","src":"3820:714:33","statements":[{"body":{"nodeType":"YulBlock","src":"3867:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3876:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3879:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3869:6:33"},"nodeType":"YulFunctionCall","src":"3869:12:33"},"nodeType":"YulExpressionStatement","src":"3869:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3841:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"3850:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3837:3:33"},"nodeType":"YulFunctionCall","src":"3837:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"3862:3:33","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3833:3:33"},"nodeType":"YulFunctionCall","src":"3833:33:33"},"nodeType":"YulIf","src":"3830:53:33"},{"nodeType":"YulAssignment","src":"3892:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3915:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3902:12:33"},"nodeType":"YulFunctionCall","src":"3902:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3892:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"3934:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3965:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3976:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3961:3:33"},"nodeType":"YulFunctionCall","src":"3961:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3948:12:33"},"nodeType":"YulFunctionCall","src":"3948:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3938:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3989:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3999:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3993:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4044:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4053:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4056:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4046:6:33"},"nodeType":"YulFunctionCall","src":"4046:12:33"},"nodeType":"YulExpressionStatement","src":"4046:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4032:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4040:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4029:2:33"},"nodeType":"YulFunctionCall","src":"4029:14:33"},"nodeType":"YulIf","src":"4026:34:33"},{"nodeType":"YulVariableDeclaration","src":"4069:96:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4137:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"4148:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4133:3:33"},"nodeType":"YulFunctionCall","src":"4133:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4157:7:33"}],"functionName":{"name":"abi_decode_array_bytes32_dyn_calldata","nodeType":"YulIdentifier","src":"4095:37:33"},"nodeType":"YulFunctionCall","src":"4095:70:33"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"4073:8:33","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"4083:8:33","type":""}]},{"nodeType":"YulAssignment","src":"4174:18:33","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"4184:8:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4174:6:33"}]},{"nodeType":"YulAssignment","src":"4201:18:33","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"4211:8:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4201:6:33"}]},{"nodeType":"YulAssignment","src":"4228:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4261:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4272:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4257:3:33"},"nodeType":"YulFunctionCall","src":"4257:18:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4238:18:33"},"nodeType":"YulFunctionCall","src":"4238:38:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4228:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"4285:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4318:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4329:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4314:3:33"},"nodeType":"YulFunctionCall","src":"4314:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4301:12:33"},"nodeType":"YulFunctionCall","src":"4301:32:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4289:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4362:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4371:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4374:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4364:6:33"},"nodeType":"YulFunctionCall","src":"4364:12:33"},"nodeType":"YulExpressionStatement","src":"4364:12:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4348:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4358:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4345:2:33"},"nodeType":"YulFunctionCall","src":"4345:16:33"},"nodeType":"YulIf","src":"4342:36:33"},{"nodeType":"YulVariableDeclaration","src":"4387:87:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4444:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4455:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4440:3:33"},"nodeType":"YulFunctionCall","src":"4440:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4466:7:33"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"4413:26:33"},"nodeType":"YulFunctionCall","src":"4413:61:33"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"4391:8:33","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"4401:8:33","type":""}]},{"nodeType":"YulAssignment","src":"4483:18:33","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"4493:8:33"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4483:6:33"}]},{"nodeType":"YulAssignment","src":"4510:18:33","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"4520:8:33"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4510:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32t_array$_t_bytes32_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3746:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3757:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3769:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3777:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3785:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3793:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3801:6:33","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3809:6:33","type":""}],"src":"3645:889:33"},{"body":{"nodeType":"YulBlock","src":"4634:92:33","statements":[{"nodeType":"YulAssignment","src":"4644:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4656:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4667:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4652:3:33"},"nodeType":"YulFunctionCall","src":"4652:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4644:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4686:9:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4711:6:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4704:6:33"},"nodeType":"YulFunctionCall","src":"4704:14:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4697:6:33"},"nodeType":"YulFunctionCall","src":"4697:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4679:6:33"},"nodeType":"YulFunctionCall","src":"4679:41:33"},"nodeType":"YulExpressionStatement","src":"4679:41:33"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4603:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4614:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4625:4:33","type":""}],"src":"4539:187:33"},{"body":{"nodeType":"YulBlock","src":"4801:116:33","statements":[{"body":{"nodeType":"YulBlock","src":"4847:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4856:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4859:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4849:6:33"},"nodeType":"YulFunctionCall","src":"4849:12:33"},"nodeType":"YulExpressionStatement","src":"4849:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4822:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"4831:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4818:3:33"},"nodeType":"YulFunctionCall","src":"4818:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"4843:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4814:3:33"},"nodeType":"YulFunctionCall","src":"4814:32:33"},"nodeType":"YulIf","src":"4811:52:33"},{"nodeType":"YulAssignment","src":"4872:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4901:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4882:18:33"},"nodeType":"YulFunctionCall","src":"4882:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4872:6:33"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4767:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4778:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4790:6:33","type":""}],"src":"4731:186:33"},{"body":{"nodeType":"YulBlock","src":"5006:263:33","statements":[{"body":{"nodeType":"YulBlock","src":"5052:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5061:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5064:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5054:6:33"},"nodeType":"YulFunctionCall","src":"5054:12:33"},"nodeType":"YulExpressionStatement","src":"5054:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5027:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"5036:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5023:3:33"},"nodeType":"YulFunctionCall","src":"5023:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"5048:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5019:3:33"},"nodeType":"YulFunctionCall","src":"5019:32:33"},"nodeType":"YulIf","src":"5016:52:33"},{"nodeType":"YulAssignment","src":"5077:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5106:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5087:18:33"},"nodeType":"YulFunctionCall","src":"5087:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5077:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"5125:45:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5155:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5166:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5151:3:33"},"nodeType":"YulFunctionCall","src":"5151:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5138:12:33"},"nodeType":"YulFunctionCall","src":"5138:32:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5129:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5223:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5232:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5235:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5225:6:33"},"nodeType":"YulFunctionCall","src":"5225:12:33"},"nodeType":"YulExpressionStatement","src":"5225:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5192:5:33"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5213:5:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5206:6:33"},"nodeType":"YulFunctionCall","src":"5206:13:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5199:6:33"},"nodeType":"YulFunctionCall","src":"5199:21:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5189:2:33"},"nodeType":"YulFunctionCall","src":"5189:32:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5182:6:33"},"nodeType":"YulFunctionCall","src":"5182:40:33"},"nodeType":"YulIf","src":"5179:60:33"},{"nodeType":"YulAssignment","src":"5248:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"5258:5:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5248:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4964:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4975:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4987:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4995:6:33","type":""}],"src":"4922:347:33"},{"body":{"nodeType":"YulBlock","src":"5448:234:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5465:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5476:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5458:6:33"},"nodeType":"YulFunctionCall","src":"5458:21:33"},"nodeType":"YulExpressionStatement","src":"5458:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5499:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5510:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5495:3:33"},"nodeType":"YulFunctionCall","src":"5495:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"5515:2:33","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5488:6:33"},"nodeType":"YulFunctionCall","src":"5488:30:33"},"nodeType":"YulExpressionStatement","src":"5488:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5538:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5549:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5534:3:33"},"nodeType":"YulFunctionCall","src":"5534:18:33"},{"hexValue":"4d65726b6c652070726f6f66206d75737420696e636c756465206174206c6561","kind":"string","nodeType":"YulLiteral","src":"5554:34:33","type":"","value":"Merkle proof must include at lea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5527:6:33"},"nodeType":"YulFunctionCall","src":"5527:62:33"},"nodeType":"YulExpressionStatement","src":"5527:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5609:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5620:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5605:3:33"},"nodeType":"YulFunctionCall","src":"5605:18:33"},{"hexValue":"737420746865206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"5625:14:33","type":"","value":"st the nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5598:6:33"},"nodeType":"YulFunctionCall","src":"5598:42:33"},"nodeType":"YulExpressionStatement","src":"5598:42:33"},{"nodeType":"YulAssignment","src":"5649:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5661:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5672:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5657:3:33"},"nodeType":"YulFunctionCall","src":"5657:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5649:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_f880b54ed3054d94e6d073c5cc65d4a58c8b3077b4a2ae74b173c261849a2379__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5425:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5439:4:33","type":""}],"src":"5274:408:33"},{"body":{"nodeType":"YulBlock","src":"5719:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5736:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5743:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5748:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5739:3:33"},"nodeType":"YulFunctionCall","src":"5739:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5729:6:33"},"nodeType":"YulFunctionCall","src":"5729:31:33"},"nodeType":"YulExpressionStatement","src":"5729:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5776:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5779:4:33","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5769:6:33"},"nodeType":"YulFunctionCall","src":"5769:15:33"},"nodeType":"YulExpressionStatement","src":"5769:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5800:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5803:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5793:6:33"},"nodeType":"YulFunctionCall","src":"5793:15:33"},"nodeType":"YulExpressionStatement","src":"5793:15:33"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5687:127:33"},{"body":{"nodeType":"YulBlock","src":"5966:100:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5983:3:33"},{"name":"value0","nodeType":"YulIdentifier","src":"5988:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5976:6:33"},"nodeType":"YulFunctionCall","src":"5976:19:33"},"nodeType":"YulExpressionStatement","src":"5976:19:33"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6015:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"6020:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6011:3:33"},"nodeType":"YulFunctionCall","src":"6011:12:33"},{"name":"value1","nodeType":"YulIdentifier","src":"6025:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6004:6:33"},"nodeType":"YulFunctionCall","src":"6004:28:33"},"nodeType":"YulExpressionStatement","src":"6004:28:33"},{"nodeType":"YulAssignment","src":"6041:19:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6052:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"6057:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6048:3:33"},"nodeType":"YulFunctionCall","src":"6048:12:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6041:3:33"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5934:3:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5939:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5947:6:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5958:3:33","type":""}],"src":"5819:247:33"},{"body":{"nodeType":"YulBlock","src":"6103:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6120:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6127:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6132:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6123:3:33"},"nodeType":"YulFunctionCall","src":"6123:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6113:6:33"},"nodeType":"YulFunctionCall","src":"6113:31:33"},"nodeType":"YulExpressionStatement","src":"6113:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6160:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6163:4:33","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6153:6:33"},"nodeType":"YulFunctionCall","src":"6153:15:33"},"nodeType":"YulExpressionStatement","src":"6153:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6184:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6187:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6177:6:33"},"nodeType":"YulFunctionCall","src":"6177:15:33"},"nodeType":"YulExpressionStatement","src":"6177:15:33"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6071:127:33"},{"body":{"nodeType":"YulBlock","src":"6250:88:33","statements":[{"body":{"nodeType":"YulBlock","src":"6281:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6283:16:33"},"nodeType":"YulFunctionCall","src":"6283:18:33"},"nodeType":"YulExpressionStatement","src":"6283:18:33"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6266:5:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6277:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6273:3:33"},"nodeType":"YulFunctionCall","src":"6273:6:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6263:2:33"},"nodeType":"YulFunctionCall","src":"6263:17:33"},"nodeType":"YulIf","src":"6260:43:33"},{"nodeType":"YulAssignment","src":"6312:20:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6323:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"6330:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6319:3:33"},"nodeType":"YulFunctionCall","src":"6319:13:33"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6312:3:33"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6232:5:33","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6242:3:33","type":""}],"src":"6203:135:33"},{"body":{"nodeType":"YulBlock","src":"6517:164:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6534:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6545:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6527:6:33"},"nodeType":"YulFunctionCall","src":"6527:21:33"},"nodeType":"YulExpressionStatement","src":"6527:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6568:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6579:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6564:3:33"},"nodeType":"YulFunctionCall","src":"6564:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"6584:2:33","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6557:6:33"},"nodeType":"YulFunctionCall","src":"6557:30:33"},"nodeType":"YulExpressionStatement","src":"6557:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6607:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6618:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6603:3:33"},"nodeType":"YulFunctionCall","src":"6603:18:33"},{"hexValue":"48617368206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"6623:16:33","type":"","value":"Hash not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6596:6:33"},"nodeType":"YulFunctionCall","src":"6596:44:33"},"nodeType":"YulExpressionStatement","src":"6596:44:33"},{"nodeType":"YulAssignment","src":"6649:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6661:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6672:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6657:3:33"},"nodeType":"YulFunctionCall","src":"6657:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6649:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_913db5539dd5498f2d4f22507c7955fa40c01c4197f0a1928f9e953889ed79ff__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6494:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6508:4:33","type":""}],"src":"6343:338:33"},{"body":{"nodeType":"YulBlock","src":"6741:325:33","statements":[{"nodeType":"YulAssignment","src":"6751:22:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6765:1:33","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"6768:4:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6761:3:33"},"nodeType":"YulFunctionCall","src":"6761:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6751:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"6782:38:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6812:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"6818:1:33","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6808:3:33"},"nodeType":"YulFunctionCall","src":"6808:12:33"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6786:18:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6859:31:33","statements":[{"nodeType":"YulAssignment","src":"6861:27:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6875:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"6883:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6871:3:33"},"nodeType":"YulFunctionCall","src":"6871:17:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6861:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6839:18:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6832:6:33"},"nodeType":"YulFunctionCall","src":"6832:26:33"},"nodeType":"YulIf","src":"6829:61:33"},{"body":{"nodeType":"YulBlock","src":"6949:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6970:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6977:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6982:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6973:3:33"},"nodeType":"YulFunctionCall","src":"6973:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6963:6:33"},"nodeType":"YulFunctionCall","src":"6963:31:33"},"nodeType":"YulExpressionStatement","src":"6963:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7014:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7017:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7007:6:33"},"nodeType":"YulFunctionCall","src":"7007:15:33"},"nodeType":"YulExpressionStatement","src":"7007:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7042:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7045:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7035:6:33"},"nodeType":"YulFunctionCall","src":"7035:15:33"},"nodeType":"YulExpressionStatement","src":"7035:15:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6905:18:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6928:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"6936:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6925:2:33"},"nodeType":"YulFunctionCall","src":"6925:14:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6902:2:33"},"nodeType":"YulFunctionCall","src":"6902:38:33"},"nodeType":"YulIf","src":"6899:161:33"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6721:4:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6730:6:33","type":""}],"src":"6686:380:33"},{"body":{"nodeType":"YulBlock","src":"7245:170:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7262:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7273:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7255:6:33"},"nodeType":"YulFunctionCall","src":"7255:21:33"},"nodeType":"YulExpressionStatement","src":"7255:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7296:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7307:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7292:3:33"},"nodeType":"YulFunctionCall","src":"7292:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"7312:2:33","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7285:6:33"},"nodeType":"YulFunctionCall","src":"7285:30:33"},"nodeType":"YulExpressionStatement","src":"7285:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7335:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7346:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7331:3:33"},"nodeType":"YulFunctionCall","src":"7331:18:33"},{"hexValue":"486173682063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"7351:22:33","type":"","value":"Hash cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7324:6:33"},"nodeType":"YulFunctionCall","src":"7324:50:33"},"nodeType":"YulExpressionStatement","src":"7324:50:33"},{"nodeType":"YulAssignment","src":"7383:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7395:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7406:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7391:3:33"},"nodeType":"YulFunctionCall","src":"7391:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7383:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_598457107a7abae200ae7e953bc41c27a5b232e6eebc911f8bf716d6a0b11258__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7222:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7236:4:33","type":""}],"src":"7071:344:33"},{"body":{"nodeType":"YulBlock","src":"7567:100:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7584:3:33"},{"name":"value0","nodeType":"YulIdentifier","src":"7589:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7577:6:33"},"nodeType":"YulFunctionCall","src":"7577:19:33"},"nodeType":"YulExpressionStatement","src":"7577:19:33"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7616:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"7621:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7612:3:33"},"nodeType":"YulFunctionCall","src":"7612:12:33"},{"name":"value1","nodeType":"YulIdentifier","src":"7626:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7605:6:33"},"nodeType":"YulFunctionCall","src":"7605:28:33"},"nodeType":"YulExpressionStatement","src":"7605:28:33"},{"nodeType":"YulAssignment","src":"7642:19:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7653:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"7658:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7649:3:33"},"nodeType":"YulFunctionCall","src":"7649:12:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7642:3:33"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7535:3:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7540:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7548:6:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7559:3:33","type":""}],"src":"7420:247:33"},{"body":{"nodeType":"YulBlock","src":"7846:169:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7863:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7874:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7856:6:33"},"nodeType":"YulFunctionCall","src":"7856:21:33"},"nodeType":"YulExpressionStatement","src":"7856:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7897:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7908:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7893:3:33"},"nodeType":"YulFunctionCall","src":"7893:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"7913:2:33","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7886:6:33"},"nodeType":"YulFunctionCall","src":"7886:30:33"},"nodeType":"YulExpressionStatement","src":"7886:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7936:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7947:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7932:3:33"},"nodeType":"YulFunctionCall","src":"7932:18:33"},{"hexValue":"4861736820616c72656164792070696e6e6564","kind":"string","nodeType":"YulLiteral","src":"7952:21:33","type":"","value":"Hash already pinned"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7925:6:33"},"nodeType":"YulFunctionCall","src":"7925:49:33"},"nodeType":"YulExpressionStatement","src":"7925:49:33"},{"nodeType":"YulAssignment","src":"7983:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7995:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8006:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7991:3:33"},"nodeType":"YulFunctionCall","src":"7991:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7983:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_5014a9a8ebb91f3f7d1f9c8268519c975f146564f008dddc6722ad0689be85d7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7823:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7837:4:33","type":""}],"src":"7672:343:33"},{"body":{"nodeType":"YulBlock","src":"8194:231:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8211:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8222:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8204:6:33"},"nodeType":"YulFunctionCall","src":"8204:21:33"},"nodeType":"YulExpressionStatement","src":"8204:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8245:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8256:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8241:3:33"},"nodeType":"YulFunctionCall","src":"8241:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"8261:2:33","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8234:6:33"},"nodeType":"YulFunctionCall","src":"8234:30:33"},"nodeType":"YulExpressionStatement","src":"8234:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8284:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8295:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8280:3:33"},"nodeType":"YulFunctionCall","src":"8280:18:33"},{"hexValue":"4861736820646f6573206e6f74206d65657420646966666963756c7479207265","kind":"string","nodeType":"YulLiteral","src":"8300:34:33","type":"","value":"Hash does not meet difficulty re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:33"},"nodeType":"YulFunctionCall","src":"8273:62:33"},"nodeType":"YulExpressionStatement","src":"8273:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8355:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8366:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8351:3:33"},"nodeType":"YulFunctionCall","src":"8351:18:33"},{"hexValue":"71756972656d656e74","kind":"string","nodeType":"YulLiteral","src":"8371:11:33","type":"","value":"quirement"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8344:6:33"},"nodeType":"YulFunctionCall","src":"8344:39:33"},"nodeType":"YulExpressionStatement","src":"8344:39:33"},{"nodeType":"YulAssignment","src":"8392:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8404:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8415:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8400:3:33"},"nodeType":"YulFunctionCall","src":"8400:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8392:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_e392b938160012a83dd91d0d152871d87bf802079f71bc28e807a2d5a3c01b3f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8171:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8185:4:33","type":""}],"src":"8020:405:33"},{"body":{"nodeType":"YulBlock","src":"8462:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8479:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8486:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8491:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8482:3:33"},"nodeType":"YulFunctionCall","src":"8482:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8472:6:33"},"nodeType":"YulFunctionCall","src":"8472:31:33"},"nodeType":"YulExpressionStatement","src":"8472:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8519:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8522:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8512:6:33"},"nodeType":"YulFunctionCall","src":"8512:15:33"},"nodeType":"YulExpressionStatement","src":"8512:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8543:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8546:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8536:6:33"},"nodeType":"YulFunctionCall","src":"8536:15:33"},"nodeType":"YulExpressionStatement","src":"8536:15:33"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8430:127:33"},{"body":{"nodeType":"YulBlock","src":"8618:65:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8635:1:33","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"8638:3:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8628:6:33"},"nodeType":"YulFunctionCall","src":"8628:14:33"},"nodeType":"YulExpressionStatement","src":"8628:14:33"},{"nodeType":"YulAssignment","src":"8651:26:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8669:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8672:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8659:9:33"},"nodeType":"YulFunctionCall","src":"8659:18:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8651:4:33"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8601:3:33","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8609:4:33","type":""}],"src":"8562:121:33"},{"body":{"nodeType":"YulBlock","src":"8769:464:33","statements":[{"body":{"nodeType":"YulBlock","src":"8802:425:33","statements":[{"nodeType":"YulVariableDeclaration","src":"8816:11:33","value":{"kind":"number","nodeType":"YulLiteral","src":"8826:1:33","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8820:2:33","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8847:2:33"},{"name":"array","nodeType":"YulIdentifier","src":"8851:5:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8840:6:33"},"nodeType":"YulFunctionCall","src":"8840:17:33"},"nodeType":"YulExpressionStatement","src":"8840:17:33"},{"nodeType":"YulVariableDeclaration","src":"8870:31:33","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8892:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"8896:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8882:9:33"},"nodeType":"YulFunctionCall","src":"8882:19:33"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"8874:4:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8914:57:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8937:4:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8947:1:33","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8954:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"8966:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8950:3:33"},"nodeType":"YulFunctionCall","src":"8950:19:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8943:3:33"},"nodeType":"YulFunctionCall","src":"8943:27:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8933:3:33"},"nodeType":"YulFunctionCall","src":"8933:38:33"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8918:11:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9008:23:33","statements":[{"nodeType":"YulAssignment","src":"9010:19:33","value":{"name":"data","nodeType":"YulIdentifier","src":"9025:4:33"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"9010:11:33"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8990:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"9002:4:33","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8987:2:33"},"nodeType":"YulFunctionCall","src":"8987:20:33"},"nodeType":"YulIf","src":"8984:47:33"},{"nodeType":"YulVariableDeclaration","src":"9044:41:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9058:4:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9068:1:33","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"9075:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"9080:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9071:3:33"},"nodeType":"YulFunctionCall","src":"9071:12:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9064:3:33"},"nodeType":"YulFunctionCall","src":"9064:20:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9054:3:33"},"nodeType":"YulFunctionCall","src":"9054:31:33"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9048:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9098:24:33","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"9111:11:33"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"9102:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9196:21:33","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9205:5:33"},{"name":"_1","nodeType":"YulIdentifier","src":"9212:2:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9198:6:33"},"nodeType":"YulFunctionCall","src":"9198:17:33"},"nodeType":"YulExpressionStatement","src":"9198:17:33"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9146:5:33"},{"name":"_2","nodeType":"YulIdentifier","src":"9153:2:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9143:2:33"},"nodeType":"YulFunctionCall","src":"9143:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9157:26:33","statements":[{"nodeType":"YulAssignment","src":"9159:22:33","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9172:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"9179:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9168:3:33"},"nodeType":"YulFunctionCall","src":"9168:13:33"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"9159:5:33"}]}]},"pre":{"nodeType":"YulBlock","src":"9139:3:33","statements":[]},"src":"9135:82:33"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8785:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"8790:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8782:2:33"},"nodeType":"YulFunctionCall","src":"8782:11:33"},"nodeType":"YulIf","src":"8779:448:33"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8741:5:33","type":""},{"name":"len","nodeType":"YulTypedName","src":"8748:3:33","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8753:10:33","type":""}],"src":"8688:545:33"},{"body":{"nodeType":"YulBlock","src":"9323:81:33","statements":[{"nodeType":"YulAssignment","src":"9333:65:33","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9348:4:33"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9366:1:33","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"9369:3:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9362:3:33"},"nodeType":"YulFunctionCall","src":"9362:11:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9379:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9375:3:33"},"nodeType":"YulFunctionCall","src":"9375:6:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9358:3:33"},"nodeType":"YulFunctionCall","src":"9358:24:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9354:3:33"},"nodeType":"YulFunctionCall","src":"9354:29:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9344:3:33"},"nodeType":"YulFunctionCall","src":"9344:40:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9390:1:33","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"9393:3:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9386:3:33"},"nodeType":"YulFunctionCall","src":"9386:11:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9341:2:33"},"nodeType":"YulFunctionCall","src":"9341:57:33"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"9333:4:33"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9300:4:33","type":""},{"name":"len","nodeType":"YulTypedName","src":"9306:3:33","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"9314:4:33","type":""}],"src":"9238:166:33"},{"body":{"nodeType":"YulBlock","src":"9505:1256:33","statements":[{"nodeType":"YulVariableDeclaration","src":"9515:24:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9535:3:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9529:5:33"},"nodeType":"YulFunctionCall","src":"9529:10:33"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"9519:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9582:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9584:16:33"},"nodeType":"YulFunctionCall","src":"9584:18:33"},"nodeType":"YulExpressionStatement","src":"9584:18:33"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9554:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"9562:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9551:2:33"},"nodeType":"YulFunctionCall","src":"9551:30:33"},"nodeType":"YulIf","src":"9548:56:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9657:4:33"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9695:4:33"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9689:5:33"},"nodeType":"YulFunctionCall","src":"9689:11:33"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"9663:25:33"},"nodeType":"YulFunctionCall","src":"9663:38:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"9703:6:33"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"9613:43:33"},"nodeType":"YulFunctionCall","src":"9613:97:33"},"nodeType":"YulExpressionStatement","src":"9613:97:33"},{"nodeType":"YulVariableDeclaration","src":"9719:18:33","value":{"kind":"number","nodeType":"YulLiteral","src":"9736:1:33","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"9723:9:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9746:23:33","value":{"kind":"number","nodeType":"YulLiteral","src":"9765:4:33","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"9750:11:33","type":""}]},{"nodeType":"YulAssignment","src":"9778:24:33","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9791:11:33"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9778:9:33"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9848:656:33","statements":[{"nodeType":"YulVariableDeclaration","src":"9862:35:33","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9881:6:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9893:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9889:3:33"},"nodeType":"YulFunctionCall","src":"9889:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9877:3:33"},"nodeType":"YulFunctionCall","src":"9877:20:33"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"9866:7:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9910:49:33","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9954:4:33"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"9924:29:33"},"nodeType":"YulFunctionCall","src":"9924:35:33"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"9914:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9972:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"9981:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9976:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"10059:172:33","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10084:6:33"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10102:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10107:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10098:3:33"},"nodeType":"YulFunctionCall","src":"10098:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10092:5:33"},"nodeType":"YulFunctionCall","src":"10092:26:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10077:6:33"},"nodeType":"YulFunctionCall","src":"10077:42:33"},"nodeType":"YulExpressionStatement","src":"10077:42:33"},{"nodeType":"YulAssignment","src":"10136:24:33","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10150:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"10158:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10146:3:33"},"nodeType":"YulFunctionCall","src":"10146:14:33"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10136:6:33"}]},{"nodeType":"YulAssignment","src":"10177:40:33","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10194:9:33"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"10205:11:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10190:3:33"},"nodeType":"YulFunctionCall","src":"10190:27:33"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10177:9:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10006:1:33"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"10009:7:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10003:2:33"},"nodeType":"YulFunctionCall","src":"10003:14:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10018:28:33","statements":[{"nodeType":"YulAssignment","src":"10020:24:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10029:1:33"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"10032:11:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10025:3:33"},"nodeType":"YulFunctionCall","src":"10025:19:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10020:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"9999:3:33","statements":[]},"src":"9995:236:33"},{"body":{"nodeType":"YulBlock","src":"10279:166:33","statements":[{"nodeType":"YulVariableDeclaration","src":"10297:43:33","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10324:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10329:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10320:3:33"},"nodeType":"YulFunctionCall","src":"10320:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10314:5:33"},"nodeType":"YulFunctionCall","src":"10314:26:33"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"10301:9:33","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10364:6:33"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"10376:9:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10403:1:33","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"10406:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10399:3:33"},"nodeType":"YulFunctionCall","src":"10399:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"10415:3:33","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10395:3:33"},"nodeType":"YulFunctionCall","src":"10395:24:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10425:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10421:3:33"},"nodeType":"YulFunctionCall","src":"10421:6:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10391:3:33"},"nodeType":"YulFunctionCall","src":"10391:37:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10387:3:33"},"nodeType":"YulFunctionCall","src":"10387:42:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10372:3:33"},"nodeType":"YulFunctionCall","src":"10372:58:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10357:6:33"},"nodeType":"YulFunctionCall","src":"10357:74:33"},"nodeType":"YulExpressionStatement","src":"10357:74:33"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"10250:7:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"10259:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10247:2:33"},"nodeType":"YulFunctionCall","src":"10247:19:33"},"nodeType":"YulIf","src":"10244:201:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10465:4:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10479:1:33","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"10482:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10475:3:33"},"nodeType":"YulFunctionCall","src":"10475:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"10491:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10471:3:33"},"nodeType":"YulFunctionCall","src":"10471:22:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10458:6:33"},"nodeType":"YulFunctionCall","src":"10458:36:33"},"nodeType":"YulExpressionStatement","src":"10458:36:33"}]},"nodeType":"YulCase","src":"9841:663:33","value":{"kind":"number","nodeType":"YulLiteral","src":"9846:1:33","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10521:234:33","statements":[{"nodeType":"YulVariableDeclaration","src":"10535:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"10548:1:33","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10539:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"10584:67:33","statements":[{"nodeType":"YulAssignment","src":"10602:35:33","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10621:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10626:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10617:3:33"},"nodeType":"YulFunctionCall","src":"10617:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10611:5:33"},"nodeType":"YulFunctionCall","src":"10611:26:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10602:5:33"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"10565:6:33"},"nodeType":"YulIf","src":"10562:89:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10671:4:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10730:5:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"10737:6:33"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"10677:52:33"},"nodeType":"YulFunctionCall","src":"10677:67:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10664:6:33"},"nodeType":"YulFunctionCall","src":"10664:81:33"},"nodeType":"YulExpressionStatement","src":"10664:81:33"}]},"nodeType":"YulCase","src":"10513:242:33","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9821:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"9829:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9818:2:33"},"nodeType":"YulFunctionCall","src":"9818:14:33"},"nodeType":"YulSwitch","src":"9811:944:33"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9490:4:33","type":""},{"name":"src","nodeType":"YulTypedName","src":"9496:3:33","type":""}],"src":"9409:1352:33"},{"body":{"nodeType":"YulBlock","src":"10833:200:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10850:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"10855:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10843:6:33"},"nodeType":"YulFunctionCall","src":"10843:19:33"},"nodeType":"YulExpressionStatement","src":"10843:19:33"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10888:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"10893:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10884:3:33"},"nodeType":"YulFunctionCall","src":"10884:14:33"},{"name":"start","nodeType":"YulIdentifier","src":"10900:5:33"},{"name":"length","nodeType":"YulIdentifier","src":"10907:6:33"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"10871:12:33"},"nodeType":"YulFunctionCall","src":"10871:43:33"},"nodeType":"YulExpressionStatement","src":"10871:43:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10938:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"10943:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10934:3:33"},"nodeType":"YulFunctionCall","src":"10934:16:33"},{"kind":"number","nodeType":"YulLiteral","src":"10952:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10930:3:33"},"nodeType":"YulFunctionCall","src":"10930:27:33"},{"kind":"number","nodeType":"YulLiteral","src":"10959:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10923:6:33"},"nodeType":"YulFunctionCall","src":"10923:38:33"},"nodeType":"YulExpressionStatement","src":"10923:38:33"},{"nodeType":"YulAssignment","src":"10970:57:33","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10985:3:33"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10998:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"11006:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10994:3:33"},"nodeType":"YulFunctionCall","src":"10994:15:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11015:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11011:3:33"},"nodeType":"YulFunctionCall","src":"11011:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10990:3:33"},"nodeType":"YulFunctionCall","src":"10990:29:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10981:3:33"},"nodeType":"YulFunctionCall","src":"10981:39:33"},{"kind":"number","nodeType":"YulLiteral","src":"11022:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10977:3:33"},"nodeType":"YulFunctionCall","src":"10977:50:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10970:3:33"}]}]},"name":"abi_encode_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"10802:5:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"10809:6:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10817:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10825:3:33","type":""}],"src":"10766:267:33"},{"body":{"nodeType":"YulBlock","src":"11197:159:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11214:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11225:2:33","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11207:6:33"},"nodeType":"YulFunctionCall","src":"11207:21:33"},"nodeType":"YulExpressionStatement","src":"11207:21:33"},{"nodeType":"YulAssignment","src":"11237:70:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11272:6:33"},{"name":"value1","nodeType":"YulIdentifier","src":"11280:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11292:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11303:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11288:3:33"},"nodeType":"YulFunctionCall","src":"11288:18:33"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"11245:26:33"},"nodeType":"YulFunctionCall","src":"11245:62:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11237:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11327:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11338:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11323:3:33"},"nodeType":"YulFunctionCall","src":"11323:18:33"},{"name":"value2","nodeType":"YulIdentifier","src":"11343:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11316:6:33"},"nodeType":"YulFunctionCall","src":"11316:34:33"},"nodeType":"YulExpressionStatement","src":"11316:34:33"}]},"name":"abi_encode_tuple_t_string_calldata_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11150:9:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11161:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11169:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11177:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11188:4:33","type":""}],"src":"11038:318:33"},{"body":{"nodeType":"YulBlock","src":"11535:223:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11552:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11563:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11545:6:33"},"nodeType":"YulFunctionCall","src":"11545:21:33"},"nodeType":"YulExpressionStatement","src":"11545:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11586:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11597:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11582:3:33"},"nodeType":"YulFunctionCall","src":"11582:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"11602:2:33","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11575:6:33"},"nodeType":"YulFunctionCall","src":"11575:30:33"},"nodeType":"YulExpressionStatement","src":"11575:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11625:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11636:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11621:3:33"},"nodeType":"YulFunctionCall","src":"11621:18:33"},{"hexValue":"446966666963756c74792063616e6e6f74206578636565642032353620626974","kind":"string","nodeType":"YulLiteral","src":"11641:34:33","type":"","value":"Difficulty cannot exceed 256 bit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11614:6:33"},"nodeType":"YulFunctionCall","src":"11614:62:33"},"nodeType":"YulExpressionStatement","src":"11614:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11696:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11707:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11692:3:33"},"nodeType":"YulFunctionCall","src":"11692:18:33"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"11712:3:33","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11685:6:33"},"nodeType":"YulFunctionCall","src":"11685:31:33"},"nodeType":"YulExpressionStatement","src":"11685:31:33"},{"nodeType":"YulAssignment","src":"11725:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11737:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11748:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11733:3:33"},"nodeType":"YulFunctionCall","src":"11733:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11725:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_f617e16a973f32406523e865d683237754ca887ff188c497562e759341ce05d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11512:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11526:4:33","type":""}],"src":"11361:397:33"},{"body":{"nodeType":"YulBlock","src":"11937:225:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11954:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11965:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11947:6:33"},"nodeType":"YulFunctionCall","src":"11947:21:33"},"nodeType":"YulExpressionStatement","src":"11947:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11988:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11999:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11984:3:33"},"nodeType":"YulFunctionCall","src":"11984:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"12004:2:33","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11977:6:33"},"nodeType":"YulFunctionCall","src":"11977:30:33"},"nodeType":"YulExpressionStatement","src":"11977:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12027:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12038:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12023:3:33"},"nodeType":"YulFunctionCall","src":"12023:18:33"},{"hexValue":"4f6e6c79207468652070696e6e65722063616e20636c61696d20746869732068","kind":"string","nodeType":"YulLiteral","src":"12043:34:33","type":"","value":"Only the pinner can claim this h"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12016:6:33"},"nodeType":"YulFunctionCall","src":"12016:62:33"},"nodeType":"YulExpressionStatement","src":"12016:62:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12098:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12109:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12094:3:33"},"nodeType":"YulFunctionCall","src":"12094:18:33"},{"hexValue":"617368","kind":"string","nodeType":"YulLiteral","src":"12114:5:33","type":"","value":"ash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12087:6:33"},"nodeType":"YulFunctionCall","src":"12087:33:33"},"nodeType":"YulExpressionStatement","src":"12087:33:33"},{"nodeType":"YulAssignment","src":"12129:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12141:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12152:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12137:3:33"},"nodeType":"YulFunctionCall","src":"12137:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12129:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_cd421abfd59df9c3fa903e2aac4e0be988669d73bafed047c6f76015bd921f05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11914:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11928:4:33","type":""}],"src":"11763:399:33"},{"body":{"nodeType":"YulBlock","src":"12341:173:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12358:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12369:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12351:6:33"},"nodeType":"YulFunctionCall","src":"12351:21:33"},"nodeType":"YulExpressionStatement","src":"12351:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12392:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12403:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12388:3:33"},"nodeType":"YulFunctionCall","src":"12388:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"12408:2:33","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12381:6:33"},"nodeType":"YulFunctionCall","src":"12381:30:33"},"nodeType":"YulExpressionStatement","src":"12381:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12431:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12442:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12427:3:33"},"nodeType":"YulFunctionCall","src":"12427:18:33"},{"hexValue":"41646170746572206e6f742077686974656c6973746564","kind":"string","nodeType":"YulLiteral","src":"12447:25:33","type":"","value":"Adapter not whitelisted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12420:6:33"},"nodeType":"YulFunctionCall","src":"12420:53:33"},"nodeType":"YulExpressionStatement","src":"12420:53:33"},{"nodeType":"YulAssignment","src":"12482:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12494:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12505:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12490:3:33"},"nodeType":"YulFunctionCall","src":"12490:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12482:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_6fa4cf7bb67e3bd955752d16a090c56646edecbe4299946d78f53807128f8496__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12318:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12332:4:33","type":""}],"src":"12167:347:33"},{"body":{"nodeType":"YulBlock","src":"12704:228:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12721:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12736:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12752:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12757:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12748:3:33"},"nodeType":"YulFunctionCall","src":"12748:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"12761:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12744:3:33"},"nodeType":"YulFunctionCall","src":"12744:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12732:3:33"},"nodeType":"YulFunctionCall","src":"12732:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12714:6:33"},"nodeType":"YulFunctionCall","src":"12714:51:33"},"nodeType":"YulExpressionStatement","src":"12714:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12785:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12796:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12781:3:33"},"nodeType":"YulFunctionCall","src":"12781:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"12801:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12774:6:33"},"nodeType":"YulFunctionCall","src":"12774:34:33"},"nodeType":"YulExpressionStatement","src":"12774:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12828:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12839:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12824:3:33"},"nodeType":"YulFunctionCall","src":"12824:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"12844:2:33","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12817:6:33"},"nodeType":"YulFunctionCall","src":"12817:30:33"},"nodeType":"YulExpressionStatement","src":"12817:30:33"},{"nodeType":"YulAssignment","src":"12856:70:33","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12891:6:33"},{"name":"value3","nodeType":"YulIdentifier","src":"12899:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12911:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12922:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12907:3:33"},"nodeType":"YulFunctionCall","src":"12907:18:33"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"12864:26:33"},"nodeType":"YulFunctionCall","src":"12864:62:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12856:4:33"}]}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12649:9:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12660:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12668:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12676:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12684:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12695:4:33","type":""}],"src":"12519:413:33"},{"body":{"nodeType":"YulBlock","src":"13018:103:33","statements":[{"body":{"nodeType":"YulBlock","src":"13064:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13073:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13076:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13066:6:33"},"nodeType":"YulFunctionCall","src":"13066:12:33"},"nodeType":"YulExpressionStatement","src":"13066:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13039:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"13048:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13035:3:33"},"nodeType":"YulFunctionCall","src":"13035:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"13060:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13031:3:33"},"nodeType":"YulFunctionCall","src":"13031:32:33"},"nodeType":"YulIf","src":"13028:52:33"},{"nodeType":"YulAssignment","src":"13089:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13105:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13099:5:33"},"nodeType":"YulFunctionCall","src":"13099:16:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13089:6:33"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12984:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12995:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13007:6:33","type":""}],"src":"12937:184:33"},{"body":{"nodeType":"YulBlock","src":"13158:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13175:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13182:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13187:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13178:3:33"},"nodeType":"YulFunctionCall","src":"13178:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13168:6:33"},"nodeType":"YulFunctionCall","src":"13168:31:33"},"nodeType":"YulExpressionStatement","src":"13168:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13215:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13218:4:33","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13208:6:33"},"nodeType":"YulFunctionCall","src":"13208:15:33"},"nodeType":"YulExpressionStatement","src":"13208:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13239:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13242:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13232:6:33"},"nodeType":"YulFunctionCall","src":"13232:15:33"},"nodeType":"YulExpressionStatement","src":"13232:15:33"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"13126:127:33"},{"body":{"nodeType":"YulBlock","src":"13304:74:33","statements":[{"body":{"nodeType":"YulBlock","src":"13327:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"13329:16:33"},"nodeType":"YulFunctionCall","src":"13329:18:33"},"nodeType":"YulExpressionStatement","src":"13329:18:33"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13324:1:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13317:6:33"},"nodeType":"YulFunctionCall","src":"13317:9:33"},"nodeType":"YulIf","src":"13314:35:33"},{"nodeType":"YulAssignment","src":"13358:14:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13367:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"13370:1:33"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13363:3:33"},"nodeType":"YulFunctionCall","src":"13363:9:33"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"13358:1:33"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13289:1:33","type":""},{"name":"y","nodeType":"YulTypedName","src":"13292:1:33","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"13298:1:33","type":""}],"src":"13258:120:33"},{"body":{"nodeType":"YulBlock","src":"13421:74:33","statements":[{"body":{"nodeType":"YulBlock","src":"13444:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"13446:16:33"},"nodeType":"YulFunctionCall","src":"13446:18:33"},"nodeType":"YulExpressionStatement","src":"13446:18:33"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13441:1:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13434:6:33"},"nodeType":"YulFunctionCall","src":"13434:9:33"},"nodeType":"YulIf","src":"13431:35:33"},{"nodeType":"YulAssignment","src":"13475:14:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13484:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"13487:1:33"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"13480:3:33"},"nodeType":"YulFunctionCall","src":"13480:9:33"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"13475:1:33"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13406:1:33","type":""},{"name":"y","nodeType":"YulTypedName","src":"13409:1:33","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"13415:1:33","type":""}],"src":"13383:112:33"},{"body":{"nodeType":"YulBlock","src":"13549:79:33","statements":[{"nodeType":"YulAssignment","src":"13559:17:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13571:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"13574:1:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13567:3:33"},"nodeType":"YulFunctionCall","src":"13567:9:33"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"13559:4:33"}]},{"body":{"nodeType":"YulBlock","src":"13600:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13602:16:33"},"nodeType":"YulFunctionCall","src":"13602:18:33"},"nodeType":"YulExpressionStatement","src":"13602:18:33"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"13591:4:33"},{"name":"x","nodeType":"YulIdentifier","src":"13597:1:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13588:2:33"},"nodeType":"YulFunctionCall","src":"13588:11:33"},"nodeType":"YulIf","src":"13585:37:33"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13531:1:33","type":""},{"name":"y","nodeType":"YulTypedName","src":"13534:1:33","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"13540:4:33","type":""}],"src":"13500:128:33"}]},"contents":"{\n    { }\n    function abi_decode_array_bytes32_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        let _1 := 32\n        mstore(add(headStart, _1), 96)\n        let length := mload(value1)\n        mstore(add(headStart, 96), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 128), mload(add(add(value1, i), _1)))\n        }\n        mstore(add(add(headStart, length), 128), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 128)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_array$_t_bytes32_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        value3 := abi_decode_address(add(headStart, 64))\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f880b54ed3054d94e6d073c5cc65d4a58c8b3077b4a2ae74b173c261849a2379__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Merkle proof must include at lea\")\n        mstore(add(headStart, 96), \"st the nonce\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_913db5539dd5498f2d4f22507c7955fa40c01c4197f0a1928f9e953889ed79ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Hash not found\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_598457107a7abae200ae7e953bc41c27a5b232e6eebc911f8bf716d6a0b11258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Hash cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_t_stringliteral_5014a9a8ebb91f3f7d1f9c8268519c975f146564f008dddc6722ad0689be85d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Hash already pinned\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e392b938160012a83dd91d0d152871d87bf802079f71bc28e807a2d5a3c01b3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Hash does not meet difficulty re\")\n        mstore(add(headStart, 96), \"quirement\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_f617e16a973f32406523e865d683237754ca887ff188c497562e759341ce05d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Difficulty cannot exceed 256 bit\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cd421abfd59df9c3fa903e2aac4e0be988669d73bafed047c6f76015bd921f05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Only the pinner can claim this h\")\n        mstore(add(headStart, 96), \"ash\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6fa4cf7bb67e3bd955752d16a090c56646edecbe4299946d78f53807128f8496__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Adapter not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_bytes_calldata_ptr__to_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_string_calldata(value2, value3, add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c806380a25abc11610097578063b893cce211610066578063b893cce2146101f5578063d3ed240914610218578063ebdfd6ec14610220578063f2fde38b1461023357600080fd5b806380a25abc146101a65780638da5cb5b146101c957806395314d51146101da578063b6baffe3146101ed57600080fd5b80635c062d6c116100d35780635c062d6c1461016d578063602512e114610176578063715018a61461018b57806379381a971461019357600080fd5b8063060c0bfc146100fa5780631758c77a1461012a5780634c8460a11461014c575b600080fd5b61010d610108366004610c43565b610246565b6040516001600160a01b0390911681526020015b60405180910390f35b61013d610138366004610c8f565b6102fa565b60405161012193929190610ca8565b61015f61015a366004610d4f565b610415565b604051908152602001610121565b61015f60025481565b610189610184366004610c8f565b610629565b005b6101896106c8565b61015f6101a1366004610dbe565b6106dc565b6101b96101b4366004610c8f565b61096a565b6040519015158152602001610121565b6000546001600160a01b031661010d565b61013d6101e8366004610c8f565b610a1f565b60025461015f565b6101b9610203366004610e4b565b60036020526000908152604090205460ff1681565b61015f600481565b61018961022e366004610e6d565b610ad5565b610189610241366004610e4b565b610b3c565b60008161026e5760405162461bcd60e51b815260040161026590610ea9565b60405180910390fd5b8360005b838110156102d9578185858381811061028d5761028d610ef5565b905060200201356040516020016102ae929190918252602082015260400190565b60405160208183030381529060405280519060200120915080806102d190610f21565b915050610272565b506000908152600160205260409020546001600160a01b0316949350505050565b600081815260016020526040812060020154606090829061034e5760405162461bcd60e51b815260206004820152600e60248201526d12185cda081b9bdd08199bdd5b9960921b6044820152606401610265565b600084815260016020819052604090912080546002820154928201805492936001600160a01b0390921692909190829061038790610f3a565b80601f01602080910402602001604051908101604052809291908181526020018280546103b390610f3a565b80156104005780601f106103d557610100808354040283529160200191610400565b820191906000526020600020905b8154815290600101906020018083116103e357829003601f168201915b50505050509150935093509350509193909250565b60008461045b5760405162461bcd60e51b8152602060048201526014602482015273486173682063616e6e6f7420626520656d70747960601b6044820152606401610265565b604080516020808201889052818301879052825180830384018152606090920183528151918101919091206000818152600190925291902060020154156104da5760405162461bcd60e51b815260206004820152601360248201527212185cda08185b1c9958591e481c1a5b9b9959606a1b6044820152606401610265565b6104e38161096a565b6105415760405162461bcd60e51b815260206004820152602960248201527f4861736820646f6573206e6f74206d65657420646966666963756c74792072656044820152681c5d5a5c995b595b9d60ba1b6064820152608401610265565b6040518060600160405280336001600160a01b0316815260200185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050426020938401525083815260018083526040909120835181546001600160a01b0319166001600160a01b0390911617815591830151908201906105d59082610fd9565b5060409182015160029091015551819033907fe4bba2d0223259da1a7581431df71e45609917cfb573b4d2c434499441f23ea190610618908890889042906110c2565b60405180910390a395945050505050565b610631610b7a565b61010081111561068d5760405162461bcd60e51b815260206004820152602160248201527f446966666963756c74792063616e6e6f742065786365656420323536206269746044820152607360f81b6064820152608401610265565b60028190556040518181527f5a790c48cbebdceff3f1fcd445afd12d57302b7196738d61c60dcd491bf3efba9060200160405180910390a150565b6106d0610b7a565b6106da6000610ba7565b565b6000846106fb5760405162461bcd60e51b815260040161026590610ea9565b8660005b86811015610766578188888381811061071a5761071a610ef5565b9050602002013560405160200161073b929190918252602082015260400190565b604051602081830303815290604052805190602001209150808061075e90610f21565b9150506106ff565b5060008181526001602052604090206002015481906107b85760405162461bcd60e51b815260206004820152600e60248201526d12185cda081b9bdd08199bdd5b9960921b6044820152606401610265565b6000818152600160205260409020546001600160a01b0316331461082a5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79207468652070696e6e65722063616e20636c61696d207468697320686044820152620c2e6d60eb1b6064820152608401610265565b6001600160a01b03861660009081526003602052604090205460ff166108925760405162461bcd60e51b815260206004820152601760248201527f41646170746572206e6f742077686974656c69737465640000000000000000006044820152606401610265565b60405163b6483bab60e01b815286906000906001600160a01b0383169063b6483bab906108c99033908f908c908c906004016110e6565b6020604051808303816000875af11580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c9190611118565b9050876001600160a01b03168b336001600160a01b03167f3d095c3b92d17d84e3cd9810eb5ad0a1e7e5934d567f1cb32e60c78596368c778460405161095491815260200190565b60405180910390a49a9950505050505050505050565b600080600860025461097c9190611147565b90506000600860025461098f919061115b565b905060005b828110156109d1578481602081106109ae576109ae610ef5565b1a156109bf57506000949350505050565b806109c981610f21565b915050610994565b508015610a155760006109e582600861116f565b60ff901b9050808584602081106109fe576109fe610ef5565b1a1660ff1615610a1357506000949350505050565b505b5060019392505050565b6001602081905260009182526040909120805491810180546001600160a01b0390931692610a4c90610f3a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7890610f3a565b8015610ac55780601f10610a9a57610100808354040283529160200191610ac5565b820191906000526020600020905b815481529060010190602001808311610aa857829003601f168201915b5050505050908060020154905083565b610add610b7a565b6001600160a01b038216600081815260036020908152604091829020805460ff191685151590811790915591519182527f3cece36ac6216147f57b10bb30975f82b18b8b290a7925c322277e684afcce4a910160405180910390a25050565b610b44610b7a565b6001600160a01b038116610b6e57604051631e4fbdf760e01b815260006004820152602401610265565b610b7781610ba7565b50565b6000546001600160a01b031633146106da5760405163118cdaa760e01b8152336004820152602401610265565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f840112610c0957600080fd5b50813567ffffffffffffffff811115610c2157600080fd5b6020830191508360208260051b8501011115610c3c57600080fd5b9250929050565b600080600060408486031215610c5857600080fd5b83359250602084013567ffffffffffffffff811115610c7657600080fd5b610c8286828701610bf7565b9497909650939450505050565b600060208284031215610ca157600080fd5b5035919050565b60018060a01b038416815260006020606081840152845180606085015260005b81811015610ce457868101830151858201608001528201610cc8565b506000608082860101526080601f19601f83011685010192505050826040830152949350505050565b60008083601f840112610d1f57600080fd5b50813567ffffffffffffffff811115610d3757600080fd5b602083019150836020828501011115610c3c57600080fd5b60008060008060608587031215610d6557600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610d8a57600080fd5b610d9687828801610d0d565b95989497509550505050565b80356001600160a01b0381168114610db957600080fd5b919050565b60008060008060008060808789031215610dd757600080fd5b86359550602087013567ffffffffffffffff80821115610df657600080fd5b610e028a838b01610bf7565b9097509550859150610e1660408a01610da2565b94506060890135915080821115610e2c57600080fd5b50610e3989828a01610d0d565b979a9699509497509295939492505050565b600060208284031215610e5d57600080fd5b610e6682610da2565b9392505050565b60008060408385031215610e8057600080fd5b610e8983610da2565b915060208301358015158114610e9e57600080fd5b809150509250929050565b6020808252602c908201527f4d65726b6c652070726f6f66206d75737420696e636c756465206174206c656160408201526b737420746865206e6f6e636560a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610f3357610f33610f0b565b5060010190565b600181811c90821680610f4e57607f821691505b602082108103610f6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610fd457600081815260208120601f850160051c81016020861015610fb15750805b601f850160051c820191505b81811015610fd057828155600101610fbd565b5050505b505050565b815167ffffffffffffffff811115610ff357610ff3610f74565b611007816110018454610f3a565b84610f8a565b602080601f83116001811461103c57600084156110245750858301515b600019600386901b1c1916600185901b178555610fd0565b600085815260208120601f198616915b8281101561106b5788860151825594840194600190910190840161104c565b50858210156110895787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6040815260006110d6604083018587611099565b9050826020830152949350505050565b60018060a01b038516815283602082015260606040820152600061110e606083018486611099565b9695505050505050565b60006020828403121561112a57600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b60008261115657611156611131565b500490565b60008261116a5761116a611131565b500690565b8181038181111561118257611182610f0b565b9291505056fea26469706673582212205b5556de0d9b8fbdf56c842435164f38dd9e554079e0bff17bb3bec4d9e6992464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80A25ABC GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB893CCE2 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB893CCE2 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xD3ED2409 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xEBDFD6EC EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80A25ABC EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95314D51 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xB6BAFFE3 EQ PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C062D6C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5C062D6C EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x602512E1 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x79381A97 EQ PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60C0BFC EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x1758C77A EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x4C8460A1 EQ PUSH2 0x14C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xD4F JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x15F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x96A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10D JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x15F JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x26E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x265 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D9 JUMPI DUP2 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x28D JUMPI PUSH2 0x28D PUSH2 0xEF5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2AE SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP DUP1 DUP1 PUSH2 0x2D1 SWAP1 PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x272 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x60 SWAP1 DUP3 SWAP1 PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x12185CDA081B9BDD08199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP3 ADD DUP1 SLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH2 0x387 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B3 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x400 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x400 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x486173682063616E6E6F7420626520656D707479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD DUP4 MSTORE DUP2 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x12185CDA08185B1C9958591E481C1A5B9B9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x265 JUMP JUMPDEST PUSH2 0x4E3 DUP2 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4861736820646F6573206E6F74206D65657420646966666963756C7479207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1C5D5A5C995B595B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP TIMESTAMP PUSH1 0x20 SWAP4 DUP5 ADD MSTORE POP DUP4 DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP2 DUP4 ADD MLOAD SWAP1 DUP3 ADD SWAP1 PUSH2 0x5D5 SWAP1 DUP3 PUSH2 0xFD9 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 DUP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0xE4BBA2D0223259DA1A7581431DF71E45609917CFB573B4D2C434499441F23EA1 SWAP1 PUSH2 0x618 SWAP1 DUP9 SWAP1 DUP9 SWAP1 TIMESTAMP SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x631 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x100 DUP2 GT ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446966666963756C74792063616E6E6F74206578636565642032353620626974 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x5A790C48CBEBDCEFF3F1FCD445AFD12D57302B7196738D61C60DCD491BF3EFBA SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6D0 PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x6DA PUSH1 0x0 PUSH2 0xBA7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x265 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST DUP7 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x766 JUMPI DUP2 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x71A JUMPI PUSH2 0x71A PUSH2 0xEF5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x73B SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP DUP1 DUP1 PUSH2 0x75E SWAP1 PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6FF JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 SWAP1 PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x12185CDA081B9BDD08199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652070696E6E65722063616E20636C61696D20746869732068 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0xC2E6D PUSH1 0xEB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646170746572206E6F742077686974656C6973746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB6483BAB PUSH1 0xE0 SHL DUP2 MSTORE DUP7 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xB6483BAB SWAP1 PUSH2 0x8C9 SWAP1 CALLER SWAP1 DUP16 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90C SWAP2 SWAP1 PUSH2 0x1118 JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3D095C3B92D17D84E3CD9810EB5AD0A1E7E5934D567F1CB32E60C78596368C77 DUP5 PUSH1 0x40 MLOAD PUSH2 0x954 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x2 SLOAD PUSH2 0x97C SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x2 SLOAD PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x115B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9D1 JUMPI DUP5 DUP2 PUSH1 0x20 DUP2 LT PUSH2 0x9AE JUMPI PUSH2 0x9AE PUSH2 0xEF5 JUMP JUMPDEST BYTE ISZERO PUSH2 0x9BF JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x9C9 DUP2 PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x994 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xA15 JUMPI PUSH1 0x0 PUSH2 0x9E5 DUP3 PUSH1 0x8 PUSH2 0x116F JUMP JUMPDEST PUSH1 0xFF SWAP1 SHL SWAP1 POP DUP1 DUP6 DUP5 PUSH1 0x20 DUP2 LT PUSH2 0x9FE JUMPI PUSH2 0x9FE PUSH2 0xEF5 JUMP JUMPDEST BYTE AND PUSH1 0xFF AND ISZERO PUSH2 0xA13 JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH2 0xA4C SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA78 SWAP1 PUSH2 0xF3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAC5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA9A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAC5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAA8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x3CECE36AC6216147F57B10BB30975F82B18B8B290A7925C322277E684AFCCE4A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xB44 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB6E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x265 JUMP JUMPDEST PUSH2 0xB77 DUP2 PUSH2 0xBA7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x265 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xC09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC82 DUP7 DUP3 DUP8 ADD PUSH2 0xBF7 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x60 DUP2 DUP5 ADD MSTORE DUP5 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCE4 JUMPI DUP7 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0xCC8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x80 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x80 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xD1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD96 DUP8 DUP3 DUP9 ADD PUSH2 0xD0D JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE02 DUP11 DUP4 DUP12 ADD PUSH2 0xBF7 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0xE16 PUSH1 0x40 DUP11 ADD PUSH2 0xDA2 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE39 DUP10 DUP3 DUP11 ADD PUSH2 0xD0D JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE66 DUP3 PUSH2 0xDA2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE89 DUP4 PUSH2 0xDA2 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4D65726B6C652070726F6F66206D75737420696E636C756465206174206C6561 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x737420746865206E6F6E6365 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xF33 JUMPI PUSH2 0xF33 PUSH2 0xF0B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF4E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF6E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xFD4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xFB1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFD0 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFBD JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF3 JUMPI PUSH2 0xFF3 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x1007 DUP2 PUSH2 0x1001 DUP5 SLOAD PUSH2 0xF3A JUMP JUMPDEST DUP5 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x103C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1024 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x106B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x104C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1089 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x10D6 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x1099 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x110E PUSH1 0x60 DUP4 ADD DUP5 DUP7 PUSH2 0x1099 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1156 JUMPI PUSH2 0x1156 PUSH2 0x1131 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x116A JUMPI PUSH2 0x116A PUSH2 0x1131 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1182 JUMPI PUSH2 0x1182 PUSH2 0xF0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST SSTORE JUMP 0xDE 0xD SWAP12 DUP16 0xBD CREATE2 PUSH13 0x842435164F38DD9E554079E0BF CALL PUSH28 0xB3BEC4D9E6992464736F6C6343000814003300000000000000000000 ","sourceMap":"273:8111:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6192:772;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1060:32:33;;;1042:51;;1030:2;1015:18;6192:772:28;;;;;;;;7276:438;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2805:902::-;;;;;;:::i;:::-;;:::i;:::-;;;3064:25:33;;;3052:2;3037:18;2805:902:28;2918:177:33;912:32:28;;;;;;8144:238;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;4087:1440:28:-;;;;;;:::i;:::-;;:::i;1547:890::-;;;;;;:::i;:::-;;:::i;:::-;;;4704:14:33;;4697:22;4679:41;;4667:2;4652:18;1547:890:28;4539:187:33;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;819:50:28;;;;;;:::i;:::-;;:::i;7867:98::-;7941:17;;7867:98;;1107:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;987:46;;1032:1;987:46;;5723:199;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;6192:772:28:-;6281:7;6308:22;6300:79;;;;-1:-1:-1;;;6300:79:28;;;;;;;:::i;:::-;;;;;;;;;6461:4;6439:19;6569:208;6589:22;;;6569:208;;;6737:11;6750;;6762:1;6750:14;;;;;;;:::i;:::-;;;;;;;6720:45;;;;;;;;5976:19:33;;;6020:2;6011:12;;6004:28;6057:2;6048:12;;5819:247;6720:45:28;;;;;;;;;;;;;6710:56;;;;;;6696:70;;6613:3;;;;;:::i;:::-;;;;6569:208;;;-1:-1:-1;6874:15:28;6929:21;;;:12;:21;;;;;:28;-1:-1:-1;;;;;6929:28:28;;6192:772;-1:-1:-1;;;;6192:772:28:o;7276:438::-;7349:14;7447:21;;;:12;:21;;;;;:31;;;7373:22;;7349:14;;7439:62;;;;-1:-1:-1;;;7439:62:28;;6545:2:33;7439:62:28;;;6527:21:33;6584:2;6564:18;;;6557:30;-1:-1:-1;;;6603:18:33;;;6596:44;6657:18;;7439:62:28;6343:338:33;7439:62:28;7520:29;7552:21;;;:12;:21;;;;;;;;7613:17;;7677:20;;;;7644:19;;;7592:115;;7552:21;;-1:-1:-1;;;;;7613:17:28;;;;7644:19;;7677:20;7644:19;;7592:115;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7276:438;;;;;:::o;2805:902::-;2895:7;2922:4;2914:51;;;;-1:-1:-1;;;2914:51:28;;7273:2:33;2914:51:28;;;7255:21:33;7312:2;7292:18;;;7285:30;-1:-1:-1;;;7331:18:33;;;7324:50;7391:18;;2914:51:28;7071:344:33;2914:51:28;3056:29;;;;;;;5976:19:33;;;6011:12;;;6004:28;;;3056:29:28;;;;;;;;;6048:12:33;;;;3056:29:28;;3046:40;;;;;;;;;-1:-1:-1;3164:21:28;;;:12;:21;;;;;;:31;;;:36;3156:68;;;;-1:-1:-1;;;3156:68:28;;7874:2:33;3156:68:28;;;7856:21:33;7913:2;7893:18;;;7886:30;-1:-1:-1;;;7932:18:33;;;7925:49;7991:18;;3156:68:28;7672:343:33;3156:68:28;3283:24;3299:7;3283:15;:24::i;:::-;3275:78;;;;-1:-1:-1;;;3275:78:28;;8222:2:33;3275:78:28;;;8204:21:33;8261:2;8241:18;;;8234:30;8300:34;8280:18;;;8273:62;-1:-1:-1;;;8351:18:33;;;8344:39;8400:19;;3275:78:28;8020:405:33;3275:78:28;3437:126;;;;;;;;3470:10;-1:-1:-1;;;;;3437:126:28;;;;;3504:8;;3437:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3437:126:28;;;-1:-1:-1;;3537:15:28;3437:126;;;;;-1:-1:-1;3413:21:28;;;:12;:21;;;;;;;:150;;;;-1:-1:-1;;;;;;3413:150:28;-1:-1:-1;;;;;3413:150:28;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3413:150:28;;;;;;;;;;3609:58;3632:7;;3620:10;;3609:58;;;;3641:8;;;;3651:15;;3609:58;:::i;:::-;;;;;;;;3693:7;2805:902;-1:-1:-1;;;;;2805:902:28:o;8144:238::-;1531:13:0;:11;:13::i;:::-;8244:3:28::1;8227:13;:20;;8219:66;;;::::0;-1:-1:-1;;;8219:66:28;;11563:2:33;8219:66:28::1;::::0;::::1;11545:21:33::0;11602:2;11582:18;;;11575:30;11641:34;11621:18;;;11614:62;-1:-1:-1;;;11692:18:33;;;11685:31;11733:19;;8219:66:28::1;11361:397:33::0;8219:66:28::1;8295:17;:33:::0;;;8343:32:::1;::::0;3064:25:33;;;8343:32:28::1;::::0;3052:2:33;3037:18;8343:32:28::1;;;;;;;8144:238:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4087:1440:28:-;4253:7;4280:22;4272:79;;;;-1:-1:-1;;;4272:79:28;;;;;;;:::i;:::-;4432:4;4410:19;4540:208;4560:22;;;4540:208;;;4708:11;4721;;4733:1;4721:14;;;;;;;:::i;:::-;;;;;;;4691:45;;;;;;;;5976:19:33;;;6020:2;6011:12;;6004:28;6057:2;6048:12;;5819:247;4691:45:28;;;;;;;;;;;;;4681:56;;;;;;4667:70;;4584:3;;;;;:::i;:::-;;;;4540:208;;;-1:-1:-1;4845:15:28;4966:21;;;:12;:21;;;;;:31;;;4863:11;;4958:62;;;;-1:-1:-1;;;4958:62:28;;6545:2:33;4958:62:28;;;6527:21:33;6584:2;6564:18;;;6557:30;-1:-1:-1;;;6603:18:33;;;6596:44;6657:18;;4958:62:28;6343:338:33;4958:62:28;5038:21;;;;:12;:21;;;;;:28;-1:-1:-1;;;;;5038:28:28;5070:10;5038:42;5030:90;;;;-1:-1:-1;;;5030:90:28;;11965:2:33;5030:90:28;;;11947:21:33;12004:2;11984:18;;;11977:30;12043:34;12023:18;;;12016:62;-1:-1:-1;;;12094:18:33;;;12087:33;12137:19;;5030:90:28;11763:399:33;5030:90:28;-1:-1:-1;;;;;5138:28:28;;;;;;:19;:28;;;;;;;;5130:64;;;;-1:-1:-1;;;5130:64:28;;12369:2:33;5130:64:28;;;12351:21:33;12408:2;12388:18;;;12381:30;12447:25;12427:18;;;12420:53;12490:18;;5130:64:28;12167:347:33;5130:64:28;5351:43;;-1:-1:-1;;;5351:43:28;;5315:7;;5278:22;;-1:-1:-1;;;;;5351:15:28;;;;;:43;;5367:10;;5379:4;;5385:8;;;;5351:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5333:61;;5470:7;-1:-1:-1;;;;;5440:47:28;5464:4;5452:10;-1:-1:-1;;;;;5440:47:28;;5479:7;5440:47;;;;3064:25:33;;3052:2;3037:18;;2918:177;5440:47:28;;;;;;;;5513:7;4087:1440;-1:-1:-1;;;;;;;;;;4087:1440:28:o;1547:890::-;1607:4;1690:17;1730:1;1710:17;;:21;;;;:::i;:::-;1690:41;;1741:21;1785:1;1765:17;;:21;;;;:::i;:::-;1741:45;;1861:9;1856:134;1880:9;1876:1;:13;1856:134;;;1920:4;1925:1;1920:7;;;;;;;:::i;:::-;;1914:19;1910:70;;-1:-1:-1;1960:5:28;;1547:890;-1:-1:-1;;;;1547:890:28:o;1910:70::-;1891:3;;;;:::i;:::-;;;;1856:134;;;-1:-1:-1;2051:17:28;;2047:354;;2179:10;2208:17;2212:13;2208:1;:17;:::i;:::-;2198:4;2192:34;;;-1:-1:-1;2192:34:28;2315:4;2320:9;2315:15;;;;;;;:::i;:::-;;2309:29;:22;2308:36;;2304:87;;-1:-1:-1;2371:5:28;;1547:890;-1:-1:-1;;;;1547:890:28:o;2304:87::-;2070:331;2047:354;-1:-1:-1;2426:4:28;;1547:890;-1:-1:-1;;;1547:890:28:o;819:50::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;819:50:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5723:199::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;5818:28:28;::::1;;::::0;;;:19:::1;:28;::::0;;;;;;;;:42;;-1:-1:-1;;5818:42:28::1;::::0;::::1;;::::0;;::::1;::::0;;;5875:40;;4679:41:33;;;5875:40:28::1;::::0;4652:18:33;5875:40:28::1;;;;;;;5723:199:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1042:51:33::0;1015:18;;2672:31:0::1;896:203:33::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:18;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:18;1901:40:0;;;1042:51:33;1015:18;;1901:40:0;896:203:33;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:367:33:-;77:8;87:6;141:3;134:4;126:6;122:17;118:27;108:55;;159:1;156;149:12;108:55;-1:-1:-1;182:20:33;;225:18;214:30;;211:50;;;257:1;254;247:12;211:50;294:4;286:6;282:17;270:29;;354:3;347:4;337:6;334:1;330:14;322:6;318:27;314:38;311:47;308:67;;;371:1;368;361:12;308:67;14:367;;;;;:::o;386:505::-;481:6;489;497;550:2;538:9;529:7;525:23;521:32;518:52;;;566:1;563;556:12;518:52;602:9;589:23;579:33;;663:2;652:9;648:18;635:32;690:18;682:6;679:30;676:50;;;722:1;719;712:12;676:50;761:70;823:7;814:6;803:9;799:22;761:70;:::i;:::-;386:505;;850:8;;-1:-1:-1;735:96:33;;-1:-1:-1;;;;386:505:33:o;1104:180::-;1163:6;1216:2;1204:9;1195:7;1191:23;1187:32;1184:52;;;1232:1;1229;1222:12;1184:52;-1:-1:-1;1255:23:33;;1104:180;-1:-1:-1;1104:180:33:o;1289:719::-;1523:1;1519;1514:3;1510:11;1506:19;1498:6;1494:32;1483:9;1476:51;1457:4;1546:2;1584;1579;1568:9;1564:18;1557:30;1616:6;1610:13;1659:6;1654:2;1643:9;1639:18;1632:34;1684:1;1694:141;1708:6;1705:1;1702:13;1694:141;;;1804:14;;;1800:23;;1794:30;1769:17;;;1788:3;1765:27;1758:67;1723:10;;1694:141;;;1698:3;1885:1;1879:3;1870:6;1859:9;1855:22;1851:32;1844:43;1955:3;1948:2;1944:7;1939:2;1931:6;1927:15;1923:29;1912:9;1908:45;1904:55;1896:63;;;;1995:6;1990:2;1979:9;1975:18;1968:34;1289:719;;;;;;:::o;2013:348::-;2065:8;2075:6;2129:3;2122:4;2114:6;2110:17;2106:27;2096:55;;2147:1;2144;2137:12;2096:55;-1:-1:-1;2170:20:33;;2213:18;2202:30;;2199:50;;;2245:1;2242;2235:12;2199:50;2282:4;2274:6;2270:17;2258:29;;2334:3;2327:4;2318:6;2310;2306:19;2302:30;2299:39;2296:59;;;2351:1;2348;2341:12;2366:547;2455:6;2463;2471;2479;2532:2;2520:9;2511:7;2507:23;2503:32;2500:52;;;2548:1;2545;2538:12;2500:52;2584:9;2571:23;2561:33;;2641:2;2630:9;2626:18;2613:32;2603:42;;2696:2;2685:9;2681:18;2668:32;2723:18;2715:6;2712:30;2709:50;;;2755:1;2752;2745:12;2709:50;2794:59;2845:7;2836:6;2825:9;2821:22;2794:59;:::i;:::-;2366:547;;;;-1:-1:-1;2872:8:33;-1:-1:-1;;;;2366:547:33:o;3467:173::-;3535:20;;-1:-1:-1;;;;;3584:31:33;;3574:42;;3564:70;;3630:1;3627;3620:12;3564:70;3467:173;;;:::o;3645:889::-;3769:6;3777;3785;3793;3801;3809;3862:3;3850:9;3841:7;3837:23;3833:33;3830:53;;;3879:1;3876;3869:12;3830:53;3915:9;3902:23;3892:33;;3976:2;3965:9;3961:18;3948:32;3999:18;4040:2;4032:6;4029:14;4026:34;;;4056:1;4053;4046:12;4026:34;4095:70;4157:7;4148:6;4137:9;4133:22;4095:70;:::i;:::-;4184:8;;-1:-1:-1;4069:96:33;-1:-1:-1;4069:96:33;;-1:-1:-1;4238:38:33;4272:2;4257:18;;4238:38;:::i;:::-;4228:48;;4329:2;4318:9;4314:18;4301:32;4285:48;;4358:2;4348:8;4345:16;4342:36;;;4374:1;4371;4364:12;4342:36;;4413:61;4466:7;4455:8;4444:9;4440:24;4413:61;:::i;:::-;3645:889;;;;-1:-1:-1;3645:889:33;;-1:-1:-1;3645:889:33;;4493:8;;3645:889;-1:-1:-1;;;3645:889:33:o;4731:186::-;4790:6;4843:2;4831:9;4822:7;4818:23;4814:32;4811:52;;;4859:1;4856;4849:12;4811:52;4882:29;4901:9;4882:29;:::i;:::-;4872:39;4731:186;-1:-1:-1;;;4731:186:33:o;4922:347::-;4987:6;4995;5048:2;5036:9;5027:7;5023:23;5019:32;5016:52;;;5064:1;5061;5054:12;5016:52;5087:29;5106:9;5087:29;:::i;:::-;5077:39;;5166:2;5155:9;5151:18;5138:32;5213:5;5206:13;5199:21;5192:5;5189:32;5179:60;;5235:1;5232;5225:12;5179:60;5258:5;5248:15;;;4922:347;;;;;:::o;5274:408::-;5476:2;5458:21;;;5515:2;5495:18;;;5488:30;5554:34;5549:2;5534:18;;5527:62;-1:-1:-1;;;5620:2:33;5605:18;;5598:42;5672:3;5657:19;;5274:408::o;5687:127::-;5748:10;5743:3;5739:20;5736:1;5729:31;5779:4;5776:1;5769:15;5803:4;5800:1;5793:15;6071:127;6132:10;6127:3;6123:20;6120:1;6113:31;6163:4;6160:1;6153:15;6187:4;6184:1;6177:15;6203:135;6242:3;6263:17;;;6260:43;;6283:18;;:::i;:::-;-1:-1:-1;6330:1:33;6319:13;;6203:135::o;6686:380::-;6765:1;6761:12;;;;6808;;;6829:61;;6883:4;6875:6;6871:17;6861:27;;6829:61;6936:2;6928:6;6925:14;6905:18;6902:38;6899:161;;6982:10;6977:3;6973:20;6970:1;6963:31;7017:4;7014:1;7007:15;7045:4;7042:1;7035:15;6899:161;;6686:380;;;:::o;8430:127::-;8491:10;8486:3;8482:20;8479:1;8472:31;8522:4;8519:1;8512:15;8546:4;8543:1;8536:15;8688:545;8790:2;8785:3;8782:11;8779:448;;;8826:1;8851:5;8847:2;8840:17;8896:4;8892:2;8882:19;8966:2;8954:10;8950:19;8947:1;8943:27;8937:4;8933:38;9002:4;8990:10;8987:20;8984:47;;;-1:-1:-1;9025:4:33;8984:47;9080:2;9075:3;9071:12;9068:1;9064:20;9058:4;9054:31;9044:41;;9135:82;9153:2;9146:5;9143:13;9135:82;;;9198:17;;;9179:1;9168:13;9135:82;;;9139:3;;;8779:448;8688:545;;;:::o;9409:1352::-;9535:3;9529:10;9562:18;9554:6;9551:30;9548:56;;;9584:18;;:::i;:::-;9613:97;9703:6;9663:38;9695:4;9689:11;9663:38;:::i;:::-;9657:4;9613:97;:::i;:::-;9765:4;;9829:2;9818:14;;9846:1;9841:663;;;;10548:1;10565:6;10562:89;;;-1:-1:-1;10617:19:33;;;10611:26;10562:89;-1:-1:-1;;9366:1:33;9362:11;;;9358:24;9354:29;9344:40;9390:1;9386:11;;;9341:57;10664:81;;9811:944;;9841:663;8635:1;8628:14;;;8672:4;8659:18;;-1:-1:-1;;9877:20:33;;;9995:236;10009:7;10006:1;10003:14;9995:236;;;10098:19;;;10092:26;10077:42;;10190:27;;;;10158:1;10146:14;;;;10025:19;;9995:236;;;9999:3;10259:6;10250:7;10247:19;10244:201;;;10320:19;;;10314:26;-1:-1:-1;;10403:1:33;10399:14;;;10415:3;10395:24;10391:37;10387:42;10372:58;10357:74;;10244:201;-1:-1:-1;;;;;10491:1:33;10475:14;;;10471:22;10458:36;;-1:-1:-1;9409:1352:33:o;10766:267::-;10855:6;10850:3;10843:19;10907:6;10900:5;10893:4;10888:3;10884:14;10871:43;-1:-1:-1;10959:1:33;10934:16;;;10952:4;10930:27;;;10923:38;;;;11015:2;10994:15;;;-1:-1:-1;;10990:29:33;10981:39;;;10977:50;;10766:267::o;11038:318::-;11225:2;11214:9;11207:21;11188:4;11245:62;11303:2;11292:9;11288:18;11280:6;11272;11245:62;:::i;:::-;11237:70;;11343:6;11338:2;11327:9;11323:18;11316:34;11038:318;;;;;;:::o;12519:413::-;12761:1;12757;12752:3;12748:11;12744:19;12736:6;12732:32;12721:9;12714:51;12801:6;12796:2;12785:9;12781:18;12774:34;12844:2;12839;12828:9;12824:18;12817:30;12695:4;12864:62;12922:2;12911:9;12907:18;12899:6;12891;12864:62;:::i;:::-;12856:70;12519:413;-1:-1:-1;;;;;;12519:413:33:o;12937:184::-;13007:6;13060:2;13048:9;13039:7;13035:23;13031:32;13028:52;;;13076:1;13073;13066:12;13028:52;-1:-1:-1;13099:16:33;;12937:184;-1:-1:-1;12937:184:33:o;13126:127::-;13187:10;13182:3;13178:20;13175:1;13168:31;13218:4;13215:1;13208:15;13242:4;13239:1;13232:15;13258:120;13298:1;13324;13314:35;;13329:18;;:::i;:::-;-1:-1:-1;13363:9:33;;13258:120::o;13383:112::-;13415:1;13441;13431:35;;13446:18;;:::i;:::-;-1:-1:-1;13480:9:33;;13383:112::o;13500:128::-;13567:9;;;13588:11;;;13585:37;;;13602:18;;:::i;:::-;13500:128;;;;:::o"},"methodIdentifiers":{"INITIAL_DIFFICULTY()":"d3ed2409","claimHash(bytes32,bytes32[],address,bytes)":"79381a97","currentDifficulty()":"5c062d6c","getDifficulty()":"b6baffe3","getHashDetails(bytes32)":"1758c77a","meetsDifficulty(bytes32)":"80a25abc","owner()":"8da5cb5b","pinHash(bytes32,uint256,string)":"4c8460a1","pinnedHashes(bytes32)":"95314d51","renounceOwnership()":"715018a6","setAdapterWhitelisted(address,bool)":"ebdfd6ec","setDifficulty(uint256)":"602512e1","transferOwnership(address)":"f2fde38b","verifyHash(bytes32,bytes32[])":"060c0bfc","whitelistedAdapters(address)":"b893cce2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"AdapterWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"DifficultyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"HashClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pinner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"powHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"HashPinned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_DIFFICULTY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"claimHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"powHash\",\"type\":\"bytes32\"}],\"name\":\"getHashDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pinner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"meetsDifficulty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"pinHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pinnedHashes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pinner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"setAdapterWhitelisted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"setDifficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedAdapters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A protocol for pinning cryptographic hashes to the blockchain and claiming them as NFTs\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"claimHash(bytes32,bytes32[],address,bytes)\":{\"details\":\"Claim a hash as an NFT using the specified adapter\",\"params\":{\"adapter\":\"The address of the NFT adapter to use\",\"hash\":\"The hash to claim\",\"merkleProof\":\"The merkle proof (including the nonce as the last element)\",\"metadata\":\"Additional metadata for the NFT\"},\"returns\":{\"_0\":\"tokenId The ID of the newly minted NFT\"}},\"getDifficulty()\":{\"details\":\"Get the current difficulty target\",\"returns\":{\"_0\":\"uint256 The current difficulty (number of leading zeros required)\"}},\"getHashDetails(bytes32)\":{\"details\":\"Get details of a pinned hash\",\"params\":{\"powHash\":\"The proof-of-work hash to get details for\"},\"returns\":{\"metadata\":\"The metadata associated with the hash\",\"pinner\":\"The address that pinned the hash\",\"timestamp\":\"The timestamp when the hash was pinned\"}},\"meetsDifficulty(bytes32)\":{\"details\":\"Difficulty is represented by the number of leading zero bits required\",\"params\":{\"hash\":\"The hash to verify\"},\"returns\":{\"_0\":\"bool True if the hash meets the difficulty requirement\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pinHash(bytes32,uint256,string)\":{\"details\":\"Pin a hash to the blockchain with proof of work\",\"params\":{\"hash\":\"The hash to pin (could be a single hash or a merkle root)\",\"metadata\":\"Optional metadata associated with the hash\",\"nonce\":\"The nonce used to meet the difficulty requirement\"},\"returns\":{\"_0\":\"powHash The proof-of-work hash that was generated\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAdapterWhitelisted(address,bool)\":{\"details\":\"Whitelist or de-whitelist an NFT adapter\",\"params\":{\"adapter\":\"The address of the adapter\",\"whitelisted\":\"Whether the adapter should be whitelisted\"}},\"setDifficulty(uint256)\":{\"details\":\"Set the current difficulty target (for testing only)\",\"params\":{\"newDifficulty\":\"The new difficulty value (number of leading zero bits required)\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"verifyHash(bytes32,bytes32[])\":{\"details\":\"Verify if a hash has been pinned\",\"params\":{\"hash\":\"The hash to verify\",\"merkleProof\":\"The merkle proof (including the nonce as the last element)\"},\"returns\":{\"_0\":\"address The address that pinned the hash, null if not pinned\"}}},\"title\":\"Hashpin\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"meetsDifficulty(bytes32)\":{\"notice\":\"Verifies if a provided hash meets the required difficulty\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hashpin.sol\":\"Hashpin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Hashpin.sol\":{\"keccak256\":\"0x3df66e3651cf52a48e33a9cf374dedbb4b469433015668582af10f84fbcaef04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8386193b54d02a81970deaf203ed61adbf9f72dd376c4c7d75b366942015ee6\",\"dweb:/ipfs/QmQvpjvxzYMMRyt2Zp14BAs7hU68GxbF2ojyeBUBNn2yjm\"]},\"contracts/interfaces/IHashpinNFT.sol\":{\"keccak256\":\"0x93ecf9a21afeb5ee8cc693d23f039f13742f08cca10dc6479b40462b085dd00e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://755faef1206621c8bf95f7b87518d977b8eff42bdcb2ab7c1891b0461df03e6b\",\"dweb:/ipfs/QmXj54Jgbsz3GR618a9WWpUpuXA2sTSWYSM4SiWMsdKVzi\"]}},\"version\":1}"}},"contracts/adapters/ERC1155HashpinAdapter.sol":{"ERC1155HashpinAdapter":{"abi":[{"inputs":[{"internalType":"string","name":"uri_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"hashMinted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hashpinContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"isHashMinted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"metadata","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_hashpinContract","type":"address"}],"name":"setHashpinContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_377":{"entryPoint":null,"id":377,"parameterSlots":1,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9406":{"entryPoint":null,"id":9406,"parameterSlots":1,"returnSlots":0},"@_setURI_994":{"entryPoint":132,"id":994,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":150,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":527,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":610,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":467,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":232,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3987:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:33"},"nodeType":"YulFunctionCall","src":"66:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:33"},"nodeType":"YulFunctionCall","src":"56:31:33"},"nodeType":"YulExpressionStatement","src":"56:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:33"},"nodeType":"YulFunctionCall","src":"96:15:33"},"nodeType":"YulExpressionStatement","src":"96:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:33"},"nodeType":"YulFunctionCall","src":"120:15:33"},"nodeType":"YulExpressionStatement","src":"120:15:33"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:33"},{"body":{"nodeType":"YulBlock","src":"237:951:33","statements":[{"nodeType":"YulVariableDeclaration","src":"247:12:33","value":{"kind":"number","nodeType":"YulLiteral","src":"257:2:33","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"251:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"304:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"313:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"316:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"306:6:33"},"nodeType":"YulFunctionCall","src":"306:12:33"},"nodeType":"YulExpressionStatement","src":"306:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"279:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"288:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"275:3:33"},"nodeType":"YulFunctionCall","src":"275:23:33"},{"name":"_1","nodeType":"YulIdentifier","src":"300:2:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"271:3:33"},"nodeType":"YulFunctionCall","src":"271:32:33"},"nodeType":"YulIf","src":"268:52:33"},{"nodeType":"YulVariableDeclaration","src":"329:30:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"343:5:33"},"nodeType":"YulFunctionCall","src":"343:16:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"333:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"368:28:33","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"386:2:33","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"390:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"382:3:33"},"nodeType":"YulFunctionCall","src":"382:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"394:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"378:3:33"},"nodeType":"YulFunctionCall","src":"378:18:33"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"372:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"423:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"432:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"435:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"425:6:33"},"nodeType":"YulFunctionCall","src":"425:12:33"},"nodeType":"YulExpressionStatement","src":"425:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"411:6:33"},{"name":"_2","nodeType":"YulIdentifier","src":"419:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"408:2:33"},"nodeType":"YulFunctionCall","src":"408:14:33"},"nodeType":"YulIf","src":"405:34:33"},{"nodeType":"YulVariableDeclaration","src":"448:32:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"473:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:33"},"nodeType":"YulFunctionCall","src":"458:22:33"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"452:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"528:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"537:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"540:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"530:6:33"},"nodeType":"YulFunctionCall","src":"530:12:33"},"nodeType":"YulExpressionStatement","src":"530:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"507:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"511:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"503:3:33"},"nodeType":"YulFunctionCall","src":"503:13:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"518:7:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"499:3:33"},"nodeType":"YulFunctionCall","src":"499:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"492:6:33"},"nodeType":"YulFunctionCall","src":"492:35:33"},"nodeType":"YulIf","src":"489:55:33"},{"nodeType":"YulVariableDeclaration","src":"553:19:33","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"569:2:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"563:5:33"},"nodeType":"YulFunctionCall","src":"563:9:33"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"557:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"595:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"597:16:33"},"nodeType":"YulFunctionCall","src":"597:18:33"},"nodeType":"YulExpressionStatement","src":"597:18:33"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"587:2:33"},{"name":"_2","nodeType":"YulIdentifier","src":"591:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"584:2:33"},"nodeType":"YulFunctionCall","src":"584:10:33"},"nodeType":"YulIf","src":"581:36:33"},{"nodeType":"YulVariableDeclaration","src":"626:17:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"640:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"636:3:33"},"nodeType":"YulFunctionCall","src":"636:7:33"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"630:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"652:23:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"666:5:33"},"nodeType":"YulFunctionCall","src":"666:9:33"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"656:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"684:71:33","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"706:6:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"730:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"734:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"726:3:33"},"nodeType":"YulFunctionCall","src":"726:13:33"},{"name":"_5","nodeType":"YulIdentifier","src":"741:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"722:3:33"},"nodeType":"YulFunctionCall","src":"722:22:33"},{"kind":"number","nodeType":"YulLiteral","src":"746:2:33","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"718:3:33"},"nodeType":"YulFunctionCall","src":"718:31:33"},{"name":"_5","nodeType":"YulIdentifier","src":"751:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"714:3:33"},"nodeType":"YulFunctionCall","src":"714:40:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"702:3:33"},"nodeType":"YulFunctionCall","src":"702:53:33"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"688:10:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"814:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"816:16:33"},"nodeType":"YulFunctionCall","src":"816:18:33"},"nodeType":"YulExpressionStatement","src":"816:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"773:10:33"},{"name":"_2","nodeType":"YulIdentifier","src":"785:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"770:2:33"},"nodeType":"YulFunctionCall","src":"770:18:33"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"793:10:33"},{"name":"memPtr","nodeType":"YulIdentifier","src":"805:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"790:2:33"},"nodeType":"YulFunctionCall","src":"790:22:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"767:2:33"},"nodeType":"YulFunctionCall","src":"767:46:33"},"nodeType":"YulIf","src":"764:72:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"852:2:33","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"856:10:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"845:6:33"},"nodeType":"YulFunctionCall","src":"845:22:33"},"nodeType":"YulExpressionStatement","src":"845:22:33"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"883:6:33"},{"name":"_4","nodeType":"YulIdentifier","src":"891:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"876:6:33"},"nodeType":"YulFunctionCall","src":"876:18:33"},"nodeType":"YulExpressionStatement","src":"876:18:33"},{"body":{"nodeType":"YulBlock","src":"940:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"949:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"952:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"942:6:33"},"nodeType":"YulFunctionCall","src":"942:12:33"},"nodeType":"YulExpressionStatement","src":"942:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"917:2:33"},{"name":"_4","nodeType":"YulIdentifier","src":"921:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"913:3:33"},"nodeType":"YulFunctionCall","src":"913:11:33"},{"name":"_1","nodeType":"YulIdentifier","src":"926:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"909:3:33"},"nodeType":"YulFunctionCall","src":"909:20:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"931:7:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"906:2:33"},"nodeType":"YulFunctionCall","src":"906:33:33"},"nodeType":"YulIf","src":"903:53:33"},{"nodeType":"YulVariableDeclaration","src":"965:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"974:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"969:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1030:83:33","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1059:6:33"},{"name":"i","nodeType":"YulIdentifier","src":"1067:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1055:3:33"},"nodeType":"YulFunctionCall","src":"1055:14:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1071:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1051:3:33"},"nodeType":"YulFunctionCall","src":"1051:23:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1090:2:33"},{"name":"i","nodeType":"YulIdentifier","src":"1094:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1086:3:33"},"nodeType":"YulFunctionCall","src":"1086:10:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1098:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1082:3:33"},"nodeType":"YulFunctionCall","src":"1082:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1076:5:33"},"nodeType":"YulFunctionCall","src":"1076:26:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1044:6:33"},"nodeType":"YulFunctionCall","src":"1044:59:33"},"nodeType":"YulExpressionStatement","src":"1044:59:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"995:1:33"},{"name":"_4","nodeType":"YulIdentifier","src":"998:2:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"992:2:33"},"nodeType":"YulFunctionCall","src":"992:9:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1002:19:33","statements":[{"nodeType":"YulAssignment","src":"1004:15:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1013:1:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1016:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1009:3:33"},"nodeType":"YulFunctionCall","src":"1009:10:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1004:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"988:3:33","statements":[]},"src":"984:129:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1137:6:33"},{"name":"_4","nodeType":"YulIdentifier","src":"1145:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1133:3:33"},"nodeType":"YulFunctionCall","src":"1133:15:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1150:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1129:3:33"},"nodeType":"YulFunctionCall","src":"1129:24:33"},{"kind":"number","nodeType":"YulLiteral","src":"1155:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1122:6:33"},"nodeType":"YulFunctionCall","src":"1122:35:33"},"nodeType":"YulExpressionStatement","src":"1122:35:33"},{"nodeType":"YulAssignment","src":"1166:16:33","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1176:6:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1166:6:33"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:33","type":""}],"src":"146:1042:33"},{"body":{"nodeType":"YulBlock","src":"1294:102:33","statements":[{"nodeType":"YulAssignment","src":"1304:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1316:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1327:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1312:3:33"},"nodeType":"YulFunctionCall","src":"1312:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1304:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1346:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1361:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1377:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1382:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1373:3:33"},"nodeType":"YulFunctionCall","src":"1373:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"1386:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1369:3:33"},"nodeType":"YulFunctionCall","src":"1369:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1357:3:33"},"nodeType":"YulFunctionCall","src":"1357:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1339:6:33"},"nodeType":"YulFunctionCall","src":"1339:51:33"},"nodeType":"YulExpressionStatement","src":"1339:51:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1263:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1274:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1285:4:33","type":""}],"src":"1193:203:33"},{"body":{"nodeType":"YulBlock","src":"1456:325:33","statements":[{"nodeType":"YulAssignment","src":"1466:22:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1480:1:33","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1483:4:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1476:3:33"},"nodeType":"YulFunctionCall","src":"1476:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1466:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"1497:38:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1527:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"1533:1:33","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1523:3:33"},"nodeType":"YulFunctionCall","src":"1523:12:33"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1501:18:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1574:31:33","statements":[{"nodeType":"YulAssignment","src":"1576:27:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1590:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"1598:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1586:3:33"},"nodeType":"YulFunctionCall","src":"1586:17:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1576:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1554:18:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1547:6:33"},"nodeType":"YulFunctionCall","src":"1547:26:33"},"nodeType":"YulIf","src":"1544:61:33"},{"body":{"nodeType":"YulBlock","src":"1664:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1685:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1692:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1697:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1688:3:33"},"nodeType":"YulFunctionCall","src":"1688:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1678:6:33"},"nodeType":"YulFunctionCall","src":"1678:31:33"},"nodeType":"YulExpressionStatement","src":"1678:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1729:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1732:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1722:6:33"},"nodeType":"YulFunctionCall","src":"1722:15:33"},"nodeType":"YulExpressionStatement","src":"1722:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1757:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1760:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1750:6:33"},"nodeType":"YulFunctionCall","src":"1750:15:33"},"nodeType":"YulExpressionStatement","src":"1750:15:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1620:18:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1643:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"1651:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1640:2:33"},"nodeType":"YulFunctionCall","src":"1640:14:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1617:2:33"},"nodeType":"YulFunctionCall","src":"1617:38:33"},"nodeType":"YulIf","src":"1614:161:33"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1436:4:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1445:6:33","type":""}],"src":"1401:380:33"},{"body":{"nodeType":"YulBlock","src":"1842:65:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1859:1:33","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1862:3:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1852:6:33"},"nodeType":"YulFunctionCall","src":"1852:14:33"},"nodeType":"YulExpressionStatement","src":"1852:14:33"},{"nodeType":"YulAssignment","src":"1875:26:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1893:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1896:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1883:9:33"},"nodeType":"YulFunctionCall","src":"1883:18:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1875:4:33"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1825:3:33","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1833:4:33","type":""}],"src":"1786:121:33"},{"body":{"nodeType":"YulBlock","src":"1993:464:33","statements":[{"body":{"nodeType":"YulBlock","src":"2026:425:33","statements":[{"nodeType":"YulVariableDeclaration","src":"2040:11:33","value":{"kind":"number","nodeType":"YulLiteral","src":"2050:1:33","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2044:2:33","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2071:2:33"},{"name":"array","nodeType":"YulIdentifier","src":"2075:5:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2064:6:33"},"nodeType":"YulFunctionCall","src":"2064:17:33"},"nodeType":"YulExpressionStatement","src":"2064:17:33"},{"nodeType":"YulVariableDeclaration","src":"2094:31:33","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2116:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"2120:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2106:9:33"},"nodeType":"YulFunctionCall","src":"2106:19:33"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2098:4:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2138:57:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2161:4:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2171:1:33","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2178:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"2190:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2174:3:33"},"nodeType":"YulFunctionCall","src":"2174:19:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2167:3:33"},"nodeType":"YulFunctionCall","src":"2167:27:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2157:3:33"},"nodeType":"YulFunctionCall","src":"2157:38:33"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2142:11:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"2232:23:33","statements":[{"nodeType":"YulAssignment","src":"2234:19:33","value":{"name":"data","nodeType":"YulIdentifier","src":"2249:4:33"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2234:11:33"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2214:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"2226:4:33","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2211:2:33"},"nodeType":"YulFunctionCall","src":"2211:20:33"},"nodeType":"YulIf","src":"2208:47:33"},{"nodeType":"YulVariableDeclaration","src":"2268:41:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2282:4:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2292:1:33","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2299:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"2304:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2295:3:33"},"nodeType":"YulFunctionCall","src":"2295:12:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2288:3:33"},"nodeType":"YulFunctionCall","src":"2288:20:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2278:3:33"},"nodeType":"YulFunctionCall","src":"2278:31:33"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2272:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2322:24:33","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2335:11:33"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2326:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"2420:21:33","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2429:5:33"},{"name":"_1","nodeType":"YulIdentifier","src":"2436:2:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2422:6:33"},"nodeType":"YulFunctionCall","src":"2422:17:33"},"nodeType":"YulExpressionStatement","src":"2422:17:33"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2370:5:33"},{"name":"_2","nodeType":"YulIdentifier","src":"2377:2:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2367:2:33"},"nodeType":"YulFunctionCall","src":"2367:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2381:26:33","statements":[{"nodeType":"YulAssignment","src":"2383:22:33","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2396:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"2403:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2392:3:33"},"nodeType":"YulFunctionCall","src":"2392:13:33"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2383:5:33"}]}]},"pre":{"nodeType":"YulBlock","src":"2363:3:33","statements":[]},"src":"2359:82:33"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2009:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"2014:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2006:2:33"},"nodeType":"YulFunctionCall","src":"2006:11:33"},"nodeType":"YulIf","src":"2003:448:33"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1965:5:33","type":""},{"name":"len","nodeType":"YulTypedName","src":"1972:3:33","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1977:10:33","type":""}],"src":"1912:545:33"},{"body":{"nodeType":"YulBlock","src":"2547:81:33","statements":[{"nodeType":"YulAssignment","src":"2557:65:33","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2572:4:33"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2590:1:33","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2593:3:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2586:3:33"},"nodeType":"YulFunctionCall","src":"2586:11:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2603:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2599:3:33"},"nodeType":"YulFunctionCall","src":"2599:6:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2582:3:33"},"nodeType":"YulFunctionCall","src":"2582:24:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2578:3:33"},"nodeType":"YulFunctionCall","src":"2578:29:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2568:3:33"},"nodeType":"YulFunctionCall","src":"2568:40:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2614:1:33","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2617:3:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2610:3:33"},"nodeType":"YulFunctionCall","src":"2610:11:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2565:2:33"},"nodeType":"YulFunctionCall","src":"2565:57:33"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2557:4:33"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2524:4:33","type":""},{"name":"len","nodeType":"YulTypedName","src":"2530:3:33","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2538:4:33","type":""}],"src":"2462:166:33"},{"body":{"nodeType":"YulBlock","src":"2729:1256:33","statements":[{"nodeType":"YulVariableDeclaration","src":"2739:24:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2759:3:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2753:5:33"},"nodeType":"YulFunctionCall","src":"2753:10:33"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2743:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"2806:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2808:16:33"},"nodeType":"YulFunctionCall","src":"2808:18:33"},"nodeType":"YulExpressionStatement","src":"2808:18:33"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2778:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2794:2:33","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2798:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2790:3:33"},"nodeType":"YulFunctionCall","src":"2790:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"2802:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2786:3:33"},"nodeType":"YulFunctionCall","src":"2786:18:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2775:2:33"},"nodeType":"YulFunctionCall","src":"2775:30:33"},"nodeType":"YulIf","src":"2772:56:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2881:4:33"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2919:4:33"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2913:5:33"},"nodeType":"YulFunctionCall","src":"2913:11:33"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"2887:25:33"},"nodeType":"YulFunctionCall","src":"2887:38:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"2927:6:33"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2837:43:33"},"nodeType":"YulFunctionCall","src":"2837:97:33"},"nodeType":"YulExpressionStatement","src":"2837:97:33"},{"nodeType":"YulVariableDeclaration","src":"2943:18:33","value":{"kind":"number","nodeType":"YulLiteral","src":"2960:1:33","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"2947:9:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2970:23:33","value":{"kind":"number","nodeType":"YulLiteral","src":"2989:4:33","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2974:11:33","type":""}]},{"nodeType":"YulAssignment","src":"3002:24:33","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3015:11:33"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3002:9:33"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3072:656:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3086:35:33","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3105:6:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3117:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3113:3:33"},"nodeType":"YulFunctionCall","src":"3113:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3101:3:33"},"nodeType":"YulFunctionCall","src":"3101:20:33"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3090:7:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3134:49:33","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:33"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3148:29:33"},"nodeType":"YulFunctionCall","src":"3148:35:33"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3138:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3196:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3205:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3200:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3283:172:33","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3308:6:33"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3326:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3331:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3322:3:33"},"nodeType":"YulFunctionCall","src":"3322:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3316:5:33"},"nodeType":"YulFunctionCall","src":"3316:26:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3301:6:33"},"nodeType":"YulFunctionCall","src":"3301:42:33"},"nodeType":"YulExpressionStatement","src":"3301:42:33"},{"nodeType":"YulAssignment","src":"3360:24:33","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3374:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"3382:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3370:3:33"},"nodeType":"YulFunctionCall","src":"3370:14:33"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3360:6:33"}]},{"nodeType":"YulAssignment","src":"3401:40:33","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3418:9:33"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3429:11:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3414:3:33"},"nodeType":"YulFunctionCall","src":"3414:27:33"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3401:9:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3230:1:33"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3233:7:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3227:2:33"},"nodeType":"YulFunctionCall","src":"3227:14:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3242:28:33","statements":[{"nodeType":"YulAssignment","src":"3244:24:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3253:1:33"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3256:11:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3249:3:33"},"nodeType":"YulFunctionCall","src":"3249:19:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3244:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"3223:3:33","statements":[]},"src":"3219:236:33"},{"body":{"nodeType":"YulBlock","src":"3503:166:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3521:43:33","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3548:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3553:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:33"},"nodeType":"YulFunctionCall","src":"3544:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3538:5:33"},"nodeType":"YulFunctionCall","src":"3538:26:33"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3525:9:33","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3588:6:33"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3600:9:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3627:1:33","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3630:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3623:3:33"},"nodeType":"YulFunctionCall","src":"3623:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"3639:3:33","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3619:3:33"},"nodeType":"YulFunctionCall","src":"3619:24:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3649:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3645:3:33"},"nodeType":"YulFunctionCall","src":"3645:6:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3615:3:33"},"nodeType":"YulFunctionCall","src":"3615:37:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3611:3:33"},"nodeType":"YulFunctionCall","src":"3611:42:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3596:3:33"},"nodeType":"YulFunctionCall","src":"3596:58:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3581:6:33"},"nodeType":"YulFunctionCall","src":"3581:74:33"},"nodeType":"YulExpressionStatement","src":"3581:74:33"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3474:7:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"3483:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3471:2:33"},"nodeType":"YulFunctionCall","src":"3471:19:33"},"nodeType":"YulIf","src":"3468:201:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3689:4:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3703:1:33","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3706:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3699:3:33"},"nodeType":"YulFunctionCall","src":"3699:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"3715:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3695:3:33"},"nodeType":"YulFunctionCall","src":"3695:22:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3682:6:33"},"nodeType":"YulFunctionCall","src":"3682:36:33"},"nodeType":"YulExpressionStatement","src":"3682:36:33"}]},"nodeType":"YulCase","src":"3065:663:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3070:1:33","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3745:234:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3759:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3772:1:33","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3763:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3808:67:33","statements":[{"nodeType":"YulAssignment","src":"3826:35:33","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3845:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3850:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3841:3:33"},"nodeType":"YulFunctionCall","src":"3841:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3835:5:33"},"nodeType":"YulFunctionCall","src":"3835:26:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3826:5:33"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3789:6:33"},"nodeType":"YulIf","src":"3786:89:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3895:4:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3954:5:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"3961:6:33"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"3901:52:33"},"nodeType":"YulFunctionCall","src":"3901:67:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3888:6:33"},"nodeType":"YulFunctionCall","src":"3888:81:33"},"nodeType":"YulExpressionStatement","src":"3888:81:33"}]},"nodeType":"YulCase","src":"3737:242:33","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3045:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"3053:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3042:2:33"},"nodeType":"YulFunctionCall","src":"3042:14:33"},"nodeType":"YulSwitch","src":"3035:944:33"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2714:4:33","type":""},{"name":"src","nodeType":"YulTypedName","src":"2720:3:33","type":""}],"src":"2633:1352:33"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001875380380620018758339810160408190526200003491620000fe565b3381620000418162000084565b506001600160a01b0381166200007157604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200007c8162000096565b50506200032e565b600262000092828262000262565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200011257600080fd5b82516001600160401b03808211156200012a57600080fd5b818501915085601f8301126200013f57600080fd5b815181811115620001545762000154620000e8565b604051601f8201601f19908116603f011681019083821181831017156200017f576200017f620000e8565b8160405282815288868487010111156200019857600080fd5b600093505b82841015620001bc57848401860151818501870152928501926200019d565b600086848301015280965050505050505092915050565b600181811c90821680620001e857607f821691505b6020821081036200020957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025d57600081815260208120601f850160051c81016020861015620002385750805b601f850160051c820191505b81811015620002595782815560010162000244565b5050505b505050565b81516001600160401b038111156200027e576200027e620000e8565b62000296816200028f8454620001d3565b846200020f565b602080601f831160018114620002ce5760008415620002b55750858301515b600019600386901b1c1916600185901b17855562000259565b600085815260208120601f198616915b82811015620002ff57888601518255948401946001909101908401620002de565b50858210156200031e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611537806200033e6000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638faa9edf11610097578063e985e9c511610066578063e985e9c51461023e578063f242432a14610251578063f2fde38b14610264578063f79ec5c31461027757600080fd5b80638faa9edf146101f2578063a22cb46514610205578063b6483bab14610218578063e9427cbb1461022b57600080fd5b80632eb2c2d6116100d35780632eb2c2d6146101905780634e1273f4146101a5578063715018a6146101c55780638da5cb5b146101cd57600080fd5b8062fdd58e1461010457806301ffc9a71461012a5780630e89341c1461014d578063129b3e271461016d575b600080fd5b610117610112366004610e40565b61029a565b6040519081526020015b60405180910390f35b61013d610138366004610e80565b6102c2565b6040519015158152602001610121565b61016061015b366004610ea4565b6102e7565b6040516101219190610f03565b61013d61017b366004610ea4565b60009081526004602052604090205460ff1690565b6101a361019e36600461105c565b61037b565b005b6101b86101b3366004611106565b6103e7565b6040516101219190611201565b6101a36104bc565b6003546001600160a01b03165b6040516001600160a01b039091168152602001610121565b6101a3610200366004611214565b6104d0565b6101a361021336600461122f565b6104fa565b61011761022636600461126b565b610509565b6005546101da906001600160a01b031681565b61013d61024c3660046112f2565b610625565b6101a361025f366004611325565b610653565b6101a3610272366004611214565b6106b2565b61013d610285366004610ea4565b60046020526000908152604090205460ff1681565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216632dedfc8360e21b14806102bc57506102bc826106f0565b6060600280546102f69061138a565b80601f01602080910402602001604051908101604052809291908181526020018280546103229061138a565b801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b50505050509050919050565b336001600160a01b038616811480159061039c575061039a8682610625565b155b156103d25760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b6103df8686868686610740565b505050505050565b606081518351146104185781518351604051635b05999160e01b8152600481019290925260248201526044016103c9565b6000835167ffffffffffffffff81111561043457610434610f16565b60405190808252806020026020018201604052801561045d578160200160208202803683370190505b50905060005b84518110156104b4576020808202860101516104879060208084028701015161029a565b828281518110610499576104996113c4565b60209081029190910101526104ad816113f0565b9050610463565b509392505050565b6104c46107a7565b6104ce60006107d4565b565b6104d86107a7565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b610505338383610826565b5050565b6005546000906001600160a01b031633146105665760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c79204861736870696e20636f6e74726163742063616e206d696e74000060448201526064016103c9565b60008481526004602052604090205460ff16156105bb5760405162461bcd60e51b815260206004820152601360248201527212185cda08185b1c9958591e481b5a5b9d1959606a1b60448201526064016103c9565b600084815260046020908152604091829020805460ff191660019081179091558251601f8601839004830281018301909352848352869261061c9289928592909189908990819084018382808284376000920191909152506108bc92505050565b95945050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b038616811480159061067457506106728682610625565b155b156106a55760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044016103c9565b6103df8686868686610919565b6106ba6107a7565b6001600160a01b0381166106e457604051631e4fbdf760e01b8152600060048201526024016103c9565b6106ed816107d4565b50565b60006001600160e01b03198216636cdb3d1360e11b148061072157506001600160e01b031982166303a24d0760e21b145b806102bc57506301ffc9a760e01b6001600160e01b03198316146102bc565b6001600160a01b03841661076a57604051632bfa23e760e11b8152600060048201526024016103c9565b6001600160a01b03851661079357604051626a0d4560e21b8152600060048201526024016103c9565b6107a085858585856109a7565b5050505050565b6003546001600160a01b031633146104ce5760405163118cdaa760e01b81523360048201526024016103c9565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661084f5760405162ced3e160e81b8152600060048201526024016103c9565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108e657604051632bfa23e760e11b8152600060048201526024016103c9565b604080516001808252602082018690528183019081526060820185905260808201909252906103df6000878484876109a7565b6001600160a01b03841661094357604051632bfa23e760e11b8152600060048201526024016103c9565b6001600160a01b03851661096c57604051626a0d4560e21b8152600060048201526024016103c9565b6040805160018082526020820186905281830190815260608201859052608082019092529061099e87878484876109a7565b50505050505050565b6109b3858585856109fa565b6001600160a01b038416156107a057825133906001036109ec57602084810151908401516109e5838989858589610c17565b50506103df565b6103df818787878787610d3b565b8051825114610a295781518151604051635b05999160e01b8152600481019290925260248201526044016103c9565b3360005b8351811015610b38576020818102858101820151908501909101516001600160a01b03881615610ae0576000828152602081815260408083206001600160a01b038c16845290915290205481811015610ab9576040516303dee4c560e01b81526001600160a01b038a1660048201526024810182905260448101839052606481018490526084016103c9565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615610b25576000828152602081815260408083206001600160a01b038b16845290915281208054839290610b1f908490611409565b90915550505b505080610b31906113f0565b9050610a2d565b508251600103610bb95760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610baa929190918252602082015260400190565b60405180910390a450506107a0565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610c0892919061141c565b60405180910390a45050505050565b6001600160a01b0384163b156103df5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610c5b9089908990889088908890600401611441565b6020604051808303816000875af1925050508015610c96575060408051601f3d908101601f19168201909252610c9391810190611486565b60015b610cff573d808015610cc4576040519150601f19603f3d011682016040523d82523d6000602084013e610cc9565b606091505b508051600003610cf757604051632bfa23e760e11b81526001600160a01b03861660048201526024016103c9565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b1461099e57604051632bfa23e760e11b81526001600160a01b03861660048201526024016103c9565b6001600160a01b0384163b156103df5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610d7f90899089908890889088906004016114a3565b6020604051808303816000875af1925050508015610dba575060408051601f3d908101601f19168201909252610db791810190611486565b60015b610de8573d808015610cc4576040519150601f19603f3d011682016040523d82523d6000602084013e610cc9565b6001600160e01b0319811663bc197c8160e01b1461099e57604051632bfa23e760e11b81526001600160a01b03861660048201526024016103c9565b80356001600160a01b0381168114610e3b57600080fd5b919050565b60008060408385031215610e5357600080fd5b610e5c83610e24565b946020939093013593505050565b6001600160e01b0319811681146106ed57600080fd5b600060208284031215610e9257600080fd5b8135610e9d81610e6a565b9392505050565b600060208284031215610eb657600080fd5b5035919050565b6000815180845260005b81811015610ee357602081850181015186830182015201610ec7565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610e9d6020830184610ebd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f5557610f55610f16565b604052919050565b600067ffffffffffffffff821115610f7757610f77610f16565b5060051b60200190565b600082601f830112610f9257600080fd5b81356020610fa7610fa283610f5d565b610f2c565b82815260059290921b84018101918181019086841115610fc657600080fd5b8286015b84811015610fe15780358352918301918301610fca565b509695505050505050565b600082601f830112610ffd57600080fd5b813567ffffffffffffffff81111561101757611017610f16565b61102a601f8201601f1916602001610f2c565b81815284602083860101111561103f57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561107457600080fd5b61107d86610e24565b945061108b60208701610e24565b9350604086013567ffffffffffffffff808211156110a857600080fd5b6110b489838a01610f81565b945060608801359150808211156110ca57600080fd5b6110d689838a01610f81565b935060808801359150808211156110ec57600080fd5b506110f988828901610fec565b9150509295509295909350565b6000806040838503121561111957600080fd5b823567ffffffffffffffff8082111561113157600080fd5b818501915085601f83011261114557600080fd5b81356020611155610fa283610f5d565b82815260059290921b8401810191818101908984111561117457600080fd5b948201945b838610156111995761118a86610e24565b82529482019490820190611179565b965050860135925050808211156111af57600080fd5b506111bc85828601610f81565b9150509250929050565b600081518084526020808501945080840160005b838110156111f6578151875295820195908201906001016111da565b509495945050505050565b602081526000610e9d60208301846111c6565b60006020828403121561122657600080fd5b610e9d82610e24565b6000806040838503121561124257600080fd5b61124b83610e24565b91506020830135801515811461126057600080fd5b809150509250929050565b6000806000806060858703121561128157600080fd5b61128a85610e24565b935060208501359250604085013567ffffffffffffffff808211156112ae57600080fd5b818701915087601f8301126112c257600080fd5b8135818111156112d157600080fd5b8860208285010111156112e357600080fd5b95989497505060200194505050565b6000806040838503121561130557600080fd5b61130e83610e24565b915061131c60208401610e24565b90509250929050565b600080600080600060a0868803121561133d57600080fd5b61134686610e24565b945061135460208701610e24565b93506040860135925060608601359150608086013567ffffffffffffffff81111561137e57600080fd5b6110f988828901610fec565b600181811c9082168061139e57607f821691505b6020821081036113be57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611402576114026113da565b5060010190565b808201808211156102bc576102bc6113da565b60408152600061142f60408301856111c6565b828103602084015261061c81856111c6565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061147b90830184610ebd565b979650505050505050565b60006020828403121561149857600080fd5b8151610e9d81610e6a565b6001600160a01b0386811682528516602082015260a0604082018190526000906114cf908301866111c6565b82810360608401526114e181866111c6565b905082810360808401526114f58185610ebd565b9897505050505050505056fea26469706673582212208f12721f1223dabc4f0ba67e6088ce5d4a33ec97cab814405ea29bb544fbf60264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1875 CODESIZE SUB DUP1 PUSH3 0x1875 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0xFE JUMP JUMPDEST CALLER DUP2 PUSH3 0x41 DUP2 PUSH3 0x84 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x7C DUP2 PUSH3 0x96 JUMP JUMPDEST POP POP PUSH3 0x32E JUMP JUMPDEST PUSH1 0x2 PUSH3 0x92 DUP3 DUP3 PUSH3 0x262 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x154 JUMPI PUSH3 0x154 PUSH3 0xE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17F JUMPI PUSH3 0x17F PUSH3 0xE8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1BC JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x19D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1E8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x209 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x25D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x238 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x259 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x244 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x27E JUMPI PUSH3 0x27E PUSH3 0xE8 JUMP JUMPDEST PUSH3 0x296 DUP2 PUSH3 0x28F DUP5 SLOAD PUSH3 0x1D3 JUMP JUMPDEST DUP5 PUSH3 0x20F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2CE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2B5 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x259 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2FF JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2DE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x31E JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1537 DUP1 PUSH3 0x33E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8FAA9EDF GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xF79EC5C3 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8FAA9EDF EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xB6483BAB EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xE9427CBB EQ PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x129B3E27 EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0xE40 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0xEA4 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x105C JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x117 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x126B JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2DEDFC83 PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x2BC JUMPI POP PUSH2 0x2BC DUP3 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2F6 SWAP1 PUSH2 0x138A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x322 SWAP1 PUSH2 0x138A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x36F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x344 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x36F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x352 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x39C JUMPI POP PUSH2 0x39A DUP7 DUP3 PUSH2 0x625 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3DF DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x740 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x418 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x434 JUMPI PUSH2 0x434 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x45D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x487 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x29A JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x499 JUMPI PUSH2 0x499 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4AD DUP2 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x463 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4C4 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x4CE PUSH1 0x0 PUSH2 0x7D4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x505 CALLER DUP4 DUP4 PUSH2 0x826 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x566 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204861736870696E20636F6E74726163742063616E206D696E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x12185CDA08185B1C9958591E481B5A5B9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH1 0x1F DUP7 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD SWAP1 SWAP4 MSTORE DUP5 DUP4 MSTORE DUP7 SWAP3 PUSH2 0x61C SWAP3 DUP10 SWAP3 DUP6 SWAP3 SWAP1 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x8BC SWAP3 POP POP POP JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x674 JUMPI POP PUSH2 0x672 DUP7 DUP3 PUSH2 0x625 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x3DF DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x919 JUMP JUMPDEST PUSH2 0x6BA PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x6ED DUP2 PUSH2 0x7D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x721 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x2BC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x7A0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x9A7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x3DF PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x943 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x96C JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x99E DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x9A7 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9B3 DUP6 DUP6 DUP6 DUP6 PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x7A0 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x9EC JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x9E5 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xC17 JUMP JUMPDEST POP POP PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x3DF DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD3B JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xA29 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x3C9 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xB38 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0xAE0 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0xB25 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB1F SWAP1 DUP5 SWAP1 PUSH2 0x1409 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP DUP1 PUSH2 0xB31 SWAP1 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP PUSH2 0xA2D JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0xBB9 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xBAA SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x7A0 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC08 SWAP3 SWAP2 SWAP1 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xC5B SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC96 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC93 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCFF JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xD7F SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDBA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDB7 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDE8 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5C DUP4 PUSH2 0xE24 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE9D DUP2 PUSH2 0xE6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEE3 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xEC7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE9D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEBD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF55 JUMPI PUSH2 0xF55 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF77 PUSH2 0xF16 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xFA7 PUSH2 0xFA2 DUP4 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0xF2C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xFE1 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xFCA JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1017 JUMPI PUSH2 0x1017 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x102A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xF2C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x103F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1074 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x107D DUP7 PUSH2 0xE24 JUMP JUMPDEST SWAP5 POP PUSH2 0x108B PUSH1 0x20 DUP8 ADD PUSH2 0xE24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B4 DUP10 DUP4 DUP11 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D6 DUP10 DUP4 DUP11 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F9 DUP9 DUP3 DUP10 ADD PUSH2 0xFEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1155 PUSH2 0xFA2 DUP4 PUSH2 0xF5D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1199 JUMPI PUSH2 0x118A DUP7 PUSH2 0xE24 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1179 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x11AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11BC DUP6 DUP3 DUP7 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11F6 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x11DA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE9D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9D DUP3 PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x124B DUP4 PUSH2 0xE24 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128A DUP6 PUSH2 0xE24 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x130E DUP4 PUSH2 0xE24 JUMP JUMPDEST SWAP2 POP PUSH2 0x131C PUSH1 0x20 DUP5 ADD PUSH2 0xE24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x133D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1346 DUP7 PUSH2 0xE24 JUMP JUMPDEST SWAP5 POP PUSH2 0x1354 PUSH1 0x20 DUP8 ADD PUSH2 0xE24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x137E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F9 DUP9 DUP3 DUP10 ADD PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x139E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1402 JUMPI PUSH2 0x1402 PUSH2 0x13DA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2BC JUMPI PUSH2 0x2BC PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x142F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x11C6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x61C DUP2 DUP6 PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x147B SWAP1 DUP4 ADD DUP5 PUSH2 0xEBD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE9D DUP2 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x14CF SWAP1 DUP4 ADD DUP7 PUSH2 0x11C6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x14E1 DUP2 DUP7 PUSH2 0x11C6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x14F5 DUP2 DUP6 PUSH2 0xEBD JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 SLT PUSH19 0x1F1223DABC4F0BA67E6088CE5D4A33EC97CAB8 EQ BLOCKHASH 0x5E LOG2 SWAP12 0xB5 PREVRANDAO 0xFB 0xF6 MUL PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"315:2327:29:-:0;;;690:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;762:10;739:4;1291:13:5;739:4:29;1291:7:5;:13::i;:::-;-1:-1:-1;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;1339:51:33;1312:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;690:91:29;315:2327;;10290:86:5;10356:4;:13;10363:6;10356:4;:13;:::i;:::-;;10290:86;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:33:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1042;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:33;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:33;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1155:1;1150:2;1145;1137:6;1133:15;1129:24;1122:35;1176:6;1166:16;;;;;;;;146:1042;;;;:::o;1401:380::-;1480:1;1476:12;;;;1523;;;1544:61;;1598:4;1590:6;1586:17;1576:27;;1544:61;1651:2;1643:6;1640:14;1620:18;1617:38;1614:161;;1697:10;1692:3;1688:20;1685:1;1678:31;1732:4;1729:1;1722:15;1760:4;1757:1;1750:15;1614:161;;1401:380;;;:::o;1912:545::-;2014:2;2009:3;2006:11;2003:448;;;2050:1;2075:5;2071:2;2064:17;2120:4;2116:2;2106:19;2190:2;2178:10;2174:19;2171:1;2167:27;2161:4;2157:38;2226:4;2214:10;2211:20;2208:47;;;-1:-1:-1;2249:4:33;2208:47;2304:2;2299:3;2295:12;2292:1;2288:20;2282:4;2278:31;2268:41;;2359:82;2377:2;2370:5;2367:13;2359:82;;;2422:17;;;2403:1;2392:13;2359:82;;;2363:3;;;2003:448;1912:545;;;:::o;2633:1352::-;2753:10;;-1:-1:-1;;;;;2775:30:33;;2772:56;;;2808:18;;:::i;:::-;2837:97;2927:6;2887:38;2919:4;2913:11;2887:38;:::i;:::-;2881:4;2837:97;:::i;:::-;2989:4;;3053:2;3042:14;;3070:1;3065:663;;;;3772:1;3789:6;3786:89;;;-1:-1:-1;3841:19:33;;;3835:26;3786:89;-1:-1:-1;;2590:1:33;2586:11;;;2582:24;2578:29;2568:40;2614:1;2610:11;;;2565:57;3888:81;;3035:944;;3065:663;1859:1;1852:14;;;1896:4;1883:18;;-1:-1:-1;;3101:20:33;;;3219:236;3233:7;3230:1;3227:14;3219:236;;;3322:19;;;3316:26;3301:42;;3414:27;;;;3382:1;3370:14;;;;3249:19;;3219:236;;;3223:3;3483:6;3474:7;3471:19;3468:201;;;3544:19;;;3538:26;-1:-1:-1;;3627:1:33;3623:14;;;3639:3;3619:24;3615:37;3611:42;3596:58;3581:74;;3468:201;-1:-1:-1;;;;;3715:1:33;3699:14;;;3695:22;3682:36;;-1:-1:-1;2633:1352:33:o;:::-;315:2327:29;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_asSingletonArrays_1232":{"entryPoint":null,"id":1232,"parameterSlots":2,"returnSlots":2},"@_checkOwner_84":{"entryPoint":1959,"id":84,"parameterSlots":0,"returnSlots":0},"@_mint_1046":{"entryPoint":2236,"id":1046,"parameterSlots":4,"returnSlots":0},"@_msgSender_3813":{"entryPoint":null,"id":3813,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_983":{"entryPoint":1856,"id":983,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_928":{"entryPoint":2329,"id":928,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1216":{"entryPoint":2086,"id":1216,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2004,"id":146,"parameterSlots":1,"returnSlots":0},"@_updateWithAcceptanceCheck_862":{"entryPoint":2471,"id":862,"parameterSlots":5,"returnSlots":0},"@_update_782":{"entryPoint":2554,"id":782,"parameterSlots":4,"returnSlots":0},"@balanceOfBatch_506":{"entryPoint":999,"id":506,"parameterSlots":2,"returnSlots":1},"@balanceOf_436":{"entryPoint":666,"id":436,"parameterSlots":2,"returnSlots":1},"@checkOnERC1155BatchReceived_1567":{"entryPoint":3387,"id":1567,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_1493":{"entryPoint":3095,"id":1493,"parameterSlots":6,"returnSlots":0},"@hashMinted_9390":{"entryPoint":null,"id":9390,"parameterSlots":0,"returnSlots":0},"@hashpinContract_9392":{"entryPoint":null,"id":9392,"parameterSlots":0,"returnSlots":0},"@isApprovedForAll_539":{"entryPoint":1573,"id":539,"parameterSlots":2,"returnSlots":1},"@isHashMinted_9484":{"entryPoint":null,"id":9484,"parameterSlots":1,"returnSlots":1},"@mint_9471":{"entryPoint":1289,"id":9471,"parameterSlots":4,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1212,"id":98,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_629":{"entryPoint":891,"id":629,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_583":{"entryPoint":1619,"id":583,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_522":{"entryPoint":1274,"id":522,"parameterSlots":2,"returnSlots":0},"@setHashpinContract_9419":{"entryPoint":1232,"id":9419,"parameterSlots":1,"returnSlots":0},"@supportsInterface_408":{"entryPoint":1776,"id":408,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5360":{"entryPoint":null,"id":5360,"parameterSlots":1,"returnSlots":1},"@supportsInterface_9508":{"entryPoint":706,"id":9508,"parameterSlots":1,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1714,"id":126,"parameterSlots":1,"returnSlots":0},"@unsafeMemoryAccess_3709":{"entryPoint":null,"id":3709,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_3735":{"entryPoint":null,"id":3735,"parameterSlots":2,"returnSlots":1},"@uri_419":{"entryPoint":743,"id":419,"parameterSlots":1,"returnSlots":1},"abi_decode_address":{"entryPoint":3620,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":3969,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":4076,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4628,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4850,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":4188,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":4901,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":4655,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptr":{"entryPoint":4715,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3648,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":3712,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":5254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3748,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":4550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3773,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5283,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5185,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4609,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5148,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3843,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_14ddb257f1ec202d0225b5cd7757b4632f49f22eaa94e372cab5340091be23ef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_79d92d9ad9002a23620b92eabf862edbf431a7e5dac84191f4393e1413b6a6d0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":3884,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":3933,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5129,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5002,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":5104,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5082,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5060,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3862,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":3690,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13935:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:33","statements":[{"nodeType":"YulAssignment","src":"73:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:33"},"nodeType":"YulFunctionCall","src":"82:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:33"}]},{"body":{"nodeType":"YulBlock","src":"165:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:33"},"nodeType":"YulFunctionCall","src":"167:12:33"},"nodeType":"YulExpressionStatement","src":"167:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:33"},"nodeType":"YulFunctionCall","src":"146:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:33"},"nodeType":"YulFunctionCall","src":"142:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:33"},"nodeType":"YulFunctionCall","src":"131:31:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:33"},"nodeType":"YulFunctionCall","src":"121:42:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:33"},"nodeType":"YulFunctionCall","src":"114:50:33"},"nodeType":"YulIf","src":"111:70:33"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:33","type":""}],"src":"14:173:33"},{"body":{"nodeType":"YulBlock","src":"279:167:33","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:33"},"nodeType":"YulFunctionCall","src":"327:12:33"},"nodeType":"YulExpressionStatement","src":"327:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:33"},"nodeType":"YulFunctionCall","src":"296:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:33"},"nodeType":"YulFunctionCall","src":"292:32:33"},"nodeType":"YulIf","src":"289:52:33"},{"nodeType":"YulAssignment","src":"350:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:33"},"nodeType":"YulFunctionCall","src":"360:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:33"}]},{"nodeType":"YulAssignment","src":"398:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:33"},"nodeType":"YulFunctionCall","src":"421:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"408:12:33"},"nodeType":"YulFunctionCall","src":"408:32:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:33","type":""}],"src":"192:254:33"},{"body":{"nodeType":"YulBlock","src":"552:76:33","statements":[{"nodeType":"YulAssignment","src":"562:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"574:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"585:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"570:3:33"},"nodeType":"YulFunctionCall","src":"570:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"562:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"604:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"615:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:33"},"nodeType":"YulFunctionCall","src":"597:25:33"},"nodeType":"YulExpressionStatement","src":"597:25:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"521:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"532:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"543:4:33","type":""}],"src":"451:177:33"},{"body":{"nodeType":"YulBlock","src":"677:87:33","statements":[{"body":{"nodeType":"YulBlock","src":"742:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"751:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"754:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"744:6:33"},"nodeType":"YulFunctionCall","src":"744:12:33"},"nodeType":"YulExpressionStatement","src":"744:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"700:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"711:5:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"722:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"727:10:33","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"718:3:33"},"nodeType":"YulFunctionCall","src":"718:20:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"707:3:33"},"nodeType":"YulFunctionCall","src":"707:32:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"697:2:33"},"nodeType":"YulFunctionCall","src":"697:43:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"690:6:33"},"nodeType":"YulFunctionCall","src":"690:51:33"},"nodeType":"YulIf","src":"687:71:33"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"666:5:33","type":""}],"src":"633:131:33"},{"body":{"nodeType":"YulBlock","src":"838:176:33","statements":[{"body":{"nodeType":"YulBlock","src":"884:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"893:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"896:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"886:6:33"},"nodeType":"YulFunctionCall","src":"886:12:33"},"nodeType":"YulExpressionStatement","src":"886:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"859:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"855:3:33"},"nodeType":"YulFunctionCall","src":"855:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"880:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"851:3:33"},"nodeType":"YulFunctionCall","src":"851:32:33"},"nodeType":"YulIf","src":"848:52:33"},{"nodeType":"YulVariableDeclaration","src":"909:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"935:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"922:12:33"},"nodeType":"YulFunctionCall","src":"922:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"913:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:33"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"954:23:33"},"nodeType":"YulFunctionCall","src":"954:30:33"},"nodeType":"YulExpressionStatement","src":"954:30:33"},{"nodeType":"YulAssignment","src":"993:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"1003:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"993:6:33"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"804:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"815:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"827:6:33","type":""}],"src":"769:245:33"},{"body":{"nodeType":"YulBlock","src":"1114:92:33","statements":[{"nodeType":"YulAssignment","src":"1124:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1136:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1147:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1132:3:33"},"nodeType":"YulFunctionCall","src":"1132:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1124:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1166:9:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1191:6:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1184:6:33"},"nodeType":"YulFunctionCall","src":"1184:14:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1177:6:33"},"nodeType":"YulFunctionCall","src":"1177:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1159:6:33"},"nodeType":"YulFunctionCall","src":"1159:41:33"},"nodeType":"YulExpressionStatement","src":"1159:41:33"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1083:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1094:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1105:4:33","type":""}],"src":"1019:187:33"},{"body":{"nodeType":"YulBlock","src":"1281:110:33","statements":[{"body":{"nodeType":"YulBlock","src":"1327:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1336:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1339:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1329:6:33"},"nodeType":"YulFunctionCall","src":"1329:12:33"},"nodeType":"YulExpressionStatement","src":"1329:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1302:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"1311:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1298:3:33"},"nodeType":"YulFunctionCall","src":"1298:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"1323:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1294:3:33"},"nodeType":"YulFunctionCall","src":"1294:32:33"},"nodeType":"YulIf","src":"1291:52:33"},{"nodeType":"YulAssignment","src":"1352:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1375:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1362:12:33"},"nodeType":"YulFunctionCall","src":"1362:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1352:6:33"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1247:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1258:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1270:6:33","type":""}],"src":"1211:180:33"},{"body":{"nodeType":"YulBlock","src":"1446:373:33","statements":[{"nodeType":"YulVariableDeclaration","src":"1456:26:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1476:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1470:5:33"},"nodeType":"YulFunctionCall","src":"1470:12:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1460:6:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1498:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"1503:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1491:6:33"},"nodeType":"YulFunctionCall","src":"1491:19:33"},"nodeType":"YulExpressionStatement","src":"1491:19:33"},{"nodeType":"YulVariableDeclaration","src":"1519:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"1528:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1523:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1590:110:33","statements":[{"nodeType":"YulVariableDeclaration","src":"1604:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"1614:4:33","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1608:2:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1646:3:33"},{"name":"i","nodeType":"YulIdentifier","src":"1651:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1642:3:33"},"nodeType":"YulFunctionCall","src":"1642:11:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1655:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1638:3:33"},"nodeType":"YulFunctionCall","src":"1638:20:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1674:5:33"},{"name":"i","nodeType":"YulIdentifier","src":"1681:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1670:3:33"},"nodeType":"YulFunctionCall","src":"1670:13:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1685:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1666:3:33"},"nodeType":"YulFunctionCall","src":"1666:22:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1660:5:33"},"nodeType":"YulFunctionCall","src":"1660:29:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1631:6:33"},"nodeType":"YulFunctionCall","src":"1631:59:33"},"nodeType":"YulExpressionStatement","src":"1631:59:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1549:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"1552:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1546:2:33"},"nodeType":"YulFunctionCall","src":"1546:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1560:21:33","statements":[{"nodeType":"YulAssignment","src":"1562:17:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1571:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"1574:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1567:3:33"},"nodeType":"YulFunctionCall","src":"1567:12:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1562:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"1542:3:33","statements":[]},"src":"1538:162:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1724:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"1729:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1720:3:33"},"nodeType":"YulFunctionCall","src":"1720:16:33"},{"kind":"number","nodeType":"YulLiteral","src":"1738:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1716:3:33"},"nodeType":"YulFunctionCall","src":"1716:27:33"},{"kind":"number","nodeType":"YulLiteral","src":"1745:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1709:6:33"},"nodeType":"YulFunctionCall","src":"1709:38:33"},"nodeType":"YulExpressionStatement","src":"1709:38:33"},{"nodeType":"YulAssignment","src":"1756:57:33","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1771:3:33"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1784:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"1792:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1780:3:33"},"nodeType":"YulFunctionCall","src":"1780:15:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1801:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1797:3:33"},"nodeType":"YulFunctionCall","src":"1797:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1776:3:33"},"nodeType":"YulFunctionCall","src":"1776:29:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1767:3:33"},"nodeType":"YulFunctionCall","src":"1767:39:33"},{"kind":"number","nodeType":"YulLiteral","src":"1808:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1763:3:33"},"nodeType":"YulFunctionCall","src":"1763:50:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1756:3:33"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1423:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1430:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1438:3:33","type":""}],"src":"1396:423:33"},{"body":{"nodeType":"YulBlock","src":"1945:99:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1962:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1973:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1955:6:33"},"nodeType":"YulFunctionCall","src":"1955:21:33"},"nodeType":"YulExpressionStatement","src":"1955:21:33"},{"nodeType":"YulAssignment","src":"1985:53:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2011:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2023:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2034:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2019:3:33"},"nodeType":"YulFunctionCall","src":"2019:18:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1993:17:33"},"nodeType":"YulFunctionCall","src":"1993:45:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1985:4:33"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1914:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1925:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1936:4:33","type":""}],"src":"1824:220:33"},{"body":{"nodeType":"YulBlock","src":"2119:110:33","statements":[{"body":{"nodeType":"YulBlock","src":"2165:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2174:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2177:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2167:6:33"},"nodeType":"YulFunctionCall","src":"2167:12:33"},"nodeType":"YulExpressionStatement","src":"2167:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2140:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2149:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2136:3:33"},"nodeType":"YulFunctionCall","src":"2136:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2161:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2132:3:33"},"nodeType":"YulFunctionCall","src":"2132:32:33"},"nodeType":"YulIf","src":"2129:52:33"},{"nodeType":"YulAssignment","src":"2190:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2213:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2200:12:33"},"nodeType":"YulFunctionCall","src":"2200:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2190:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2085:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2096:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2108:6:33","type":""}],"src":"2049:180:33"},{"body":{"nodeType":"YulBlock","src":"2266:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2283:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2290:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2295:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2286:3:33"},"nodeType":"YulFunctionCall","src":"2286:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2276:6:33"},"nodeType":"YulFunctionCall","src":"2276:31:33"},"nodeType":"YulExpressionStatement","src":"2276:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2326:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2316:6:33"},"nodeType":"YulFunctionCall","src":"2316:15:33"},"nodeType":"YulExpressionStatement","src":"2316:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2347:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2350:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2340:6:33"},"nodeType":"YulFunctionCall","src":"2340:15:33"},"nodeType":"YulExpressionStatement","src":"2340:15:33"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2234:127:33"},{"body":{"nodeType":"YulBlock","src":"2411:230:33","statements":[{"nodeType":"YulAssignment","src":"2421:19:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2437:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2431:5:33"},"nodeType":"YulFunctionCall","src":"2431:9:33"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2421:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"2449:58:33","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2471:6:33"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2487:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"2493:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2483:3:33"},"nodeType":"YulFunctionCall","src":"2483:13:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2502:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2498:3:33"},"nodeType":"YulFunctionCall","src":"2498:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2479:3:33"},"nodeType":"YulFunctionCall","src":"2479:27:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2467:3:33"},"nodeType":"YulFunctionCall","src":"2467:40:33"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2453:10:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"2582:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2584:16:33"},"nodeType":"YulFunctionCall","src":"2584:18:33"},"nodeType":"YulExpressionStatement","src":"2584:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2525:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"2537:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2522:2:33"},"nodeType":"YulFunctionCall","src":"2522:34:33"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2561:10:33"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2573:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2558:2:33"},"nodeType":"YulFunctionCall","src":"2558:22:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2519:2:33"},"nodeType":"YulFunctionCall","src":"2519:62:33"},"nodeType":"YulIf","src":"2516:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2620:2:33","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2624:10:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2613:6:33"},"nodeType":"YulFunctionCall","src":"2613:22:33"},"nodeType":"YulExpressionStatement","src":"2613:22:33"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2391:4:33","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2400:6:33","type":""}],"src":"2366:275:33"},{"body":{"nodeType":"YulBlock","src":"2715:114:33","statements":[{"body":{"nodeType":"YulBlock","src":"2759:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2761:16:33"},"nodeType":"YulFunctionCall","src":"2761:18:33"},"nodeType":"YulExpressionStatement","src":"2761:18:33"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2731:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"2739:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2728:2:33"},"nodeType":"YulFunctionCall","src":"2728:30:33"},"nodeType":"YulIf","src":"2725:56:33"},{"nodeType":"YulAssignment","src":"2790:33:33","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2806:1:33","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2809:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2802:3:33"},"nodeType":"YulFunctionCall","src":"2802:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"2818:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2798:3:33"},"nodeType":"YulFunctionCall","src":"2798:25:33"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2790:4:33"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2695:6:33","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2706:4:33","type":""}],"src":"2646:183:33"},{"body":{"nodeType":"YulBlock","src":"2898:598:33","statements":[{"body":{"nodeType":"YulBlock","src":"2947:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2956:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2949:6:33"},"nodeType":"YulFunctionCall","src":"2949:12:33"},"nodeType":"YulExpressionStatement","src":"2949:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2926:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"2934:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2922:3:33"},"nodeType":"YulFunctionCall","src":"2922:17:33"},{"name":"end","nodeType":"YulIdentifier","src":"2941:3:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2918:3:33"},"nodeType":"YulFunctionCall","src":"2918:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2911:6:33"},"nodeType":"YulFunctionCall","src":"2911:35:33"},"nodeType":"YulIf","src":"2908:55:33"},{"nodeType":"YulVariableDeclaration","src":"2972:30:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2995:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2982:12:33"},"nodeType":"YulFunctionCall","src":"2982:20:33"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2976:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3011:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3021:4:33","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3015:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3034:71:33","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3101:2:33"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"3061:39:33"},"nodeType":"YulFunctionCall","src":"3061:43:33"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3045:15:33"},"nodeType":"YulFunctionCall","src":"3045:60:33"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3038:3:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3114:16:33","value":{"name":"dst","nodeType":"YulIdentifier","src":"3127:3:33"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"3118:5:33","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3146:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"3151:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3139:6:33"},"nodeType":"YulFunctionCall","src":"3139:15:33"},"nodeType":"YulExpressionStatement","src":"3139:15:33"},{"nodeType":"YulAssignment","src":"3163:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3174:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"3179:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3170:3:33"},"nodeType":"YulFunctionCall","src":"3170:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3163:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"3191:46:33","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3213:6:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3225:1:33","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3228:2:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3221:3:33"},"nodeType":"YulFunctionCall","src":"3221:10:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3209:3:33"},"nodeType":"YulFunctionCall","src":"3209:23:33"},{"name":"_2","nodeType":"YulIdentifier","src":"3234:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3205:3:33"},"nodeType":"YulFunctionCall","src":"3205:32:33"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3195:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3265:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3277:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3267:6:33"},"nodeType":"YulFunctionCall","src":"3267:12:33"},"nodeType":"YulExpressionStatement","src":"3267:12:33"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3252:6:33"},{"name":"end","nodeType":"YulIdentifier","src":"3260:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3249:2:33"},"nodeType":"YulFunctionCall","src":"3249:15:33"},"nodeType":"YulIf","src":"3246:35:33"},{"nodeType":"YulVariableDeclaration","src":"3290:26:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3305:6:33"},{"name":"_2","nodeType":"YulIdentifier","src":"3313:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3301:3:33"},"nodeType":"YulFunctionCall","src":"3301:15:33"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3294:3:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3381:86:33","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3402:3:33"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3420:3:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3407:12:33"},"nodeType":"YulFunctionCall","src":"3407:17:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3395:6:33"},"nodeType":"YulFunctionCall","src":"3395:30:33"},"nodeType":"YulExpressionStatement","src":"3395:30:33"},{"nodeType":"YulAssignment","src":"3438:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3449:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"3454:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3445:3:33"},"nodeType":"YulFunctionCall","src":"3445:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3438:3:33"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3336:3:33"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3341:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3333:2:33"},"nodeType":"YulFunctionCall","src":"3333:15:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3349:23:33","statements":[{"nodeType":"YulAssignment","src":"3351:19:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3362:3:33"},{"name":"_2","nodeType":"YulIdentifier","src":"3367:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3358:3:33"},"nodeType":"YulFunctionCall","src":"3358:12:33"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3351:3:33"}]}]},"pre":{"nodeType":"YulBlock","src":"3329:3:33","statements":[]},"src":"3325:142:33"},{"nodeType":"YulAssignment","src":"3476:14:33","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"3485:5:33"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3476:5:33"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2872:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"2880:3:33","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2888:5:33","type":""}],"src":"2834:662:33"},{"body":{"nodeType":"YulBlock","src":"3553:478:33","statements":[{"body":{"nodeType":"YulBlock","src":"3602:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3611:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3614:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3604:6:33"},"nodeType":"YulFunctionCall","src":"3604:12:33"},"nodeType":"YulExpressionStatement","src":"3604:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3581:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"3589:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3577:3:33"},"nodeType":"YulFunctionCall","src":"3577:17:33"},{"name":"end","nodeType":"YulIdentifier","src":"3596:3:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3573:3:33"},"nodeType":"YulFunctionCall","src":"3573:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3566:6:33"},"nodeType":"YulFunctionCall","src":"3566:35:33"},"nodeType":"YulIf","src":"3563:55:33"},{"nodeType":"YulVariableDeclaration","src":"3627:30:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3650:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3637:12:33"},"nodeType":"YulFunctionCall","src":"3637:20:33"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3631:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3696:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3698:16:33"},"nodeType":"YulFunctionCall","src":"3698:18:33"},"nodeType":"YulExpressionStatement","src":"3698:18:33"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3672:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"3676:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3669:2:33"},"nodeType":"YulFunctionCall","src":"3669:26:33"},"nodeType":"YulIf","src":"3666:52:33"},{"nodeType":"YulVariableDeclaration","src":"3727:70:33","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3770:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"3774:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3766:3:33"},"nodeType":"YulFunctionCall","src":"3766:13:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3785:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3781:3:33"},"nodeType":"YulFunctionCall","src":"3781:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3762:3:33"},"nodeType":"YulFunctionCall","src":"3762:27:33"},{"kind":"number","nodeType":"YulLiteral","src":"3791:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3758:3:33"},"nodeType":"YulFunctionCall","src":"3758:38:33"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3742:15:33"},"nodeType":"YulFunctionCall","src":"3742:55:33"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"3731:7:33","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"3813:7:33"},{"name":"_1","nodeType":"YulIdentifier","src":"3822:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3806:6:33"},"nodeType":"YulFunctionCall","src":"3806:19:33"},"nodeType":"YulExpressionStatement","src":"3806:19:33"},{"body":{"nodeType":"YulBlock","src":"3873:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3882:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3885:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3875:6:33"},"nodeType":"YulFunctionCall","src":"3875:12:33"},"nodeType":"YulExpressionStatement","src":"3875:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3848:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"3856:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3844:3:33"},"nodeType":"YulFunctionCall","src":"3844:15:33"},{"kind":"number","nodeType":"YulLiteral","src":"3861:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3840:3:33"},"nodeType":"YulFunctionCall","src":"3840:26:33"},{"name":"end","nodeType":"YulIdentifier","src":"3868:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3837:2:33"},"nodeType":"YulFunctionCall","src":"3837:35:33"},"nodeType":"YulIf","src":"3834:55:33"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"3915:7:33"},{"kind":"number","nodeType":"YulLiteral","src":"3924:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3911:3:33"},"nodeType":"YulFunctionCall","src":"3911:18:33"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3935:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"3943:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3931:3:33"},"nodeType":"YulFunctionCall","src":"3931:17:33"},{"name":"_1","nodeType":"YulIdentifier","src":"3950:2:33"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3898:12:33"},"nodeType":"YulFunctionCall","src":"3898:55:33"},"nodeType":"YulExpressionStatement","src":"3898:55:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"3977:7:33"},{"name":"_1","nodeType":"YulIdentifier","src":"3986:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3973:3:33"},"nodeType":"YulFunctionCall","src":"3973:16:33"},{"kind":"number","nodeType":"YulLiteral","src":"3991:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3969:3:33"},"nodeType":"YulFunctionCall","src":"3969:27:33"},{"kind":"number","nodeType":"YulLiteral","src":"3998:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3962:6:33"},"nodeType":"YulFunctionCall","src":"3962:38:33"},"nodeType":"YulExpressionStatement","src":"3962:38:33"},{"nodeType":"YulAssignment","src":"4009:16:33","value":{"name":"array_1","nodeType":"YulIdentifier","src":"4018:7:33"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4009:5:33"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3527:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"3535:3:33","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3543:5:33","type":""}],"src":"3501:530:33"},{"body":{"nodeType":"YulBlock","src":"4233:746:33","statements":[{"body":{"nodeType":"YulBlock","src":"4280:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4289:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4292:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4282:6:33"},"nodeType":"YulFunctionCall","src":"4282:12:33"},"nodeType":"YulExpressionStatement","src":"4282:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4254:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"4263:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4250:3:33"},"nodeType":"YulFunctionCall","src":"4250:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"4275:3:33","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4246:3:33"},"nodeType":"YulFunctionCall","src":"4246:33:33"},"nodeType":"YulIf","src":"4243:53:33"},{"nodeType":"YulAssignment","src":"4305:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4334:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4315:18:33"},"nodeType":"YulFunctionCall","src":"4315:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4305:6:33"}]},{"nodeType":"YulAssignment","src":"4353:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4386:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4397:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4382:3:33"},"nodeType":"YulFunctionCall","src":"4382:18:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4363:18:33"},"nodeType":"YulFunctionCall","src":"4363:38:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4353:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"4410:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4441:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4452:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4437:3:33"},"nodeType":"YulFunctionCall","src":"4437:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4424:12:33"},"nodeType":"YulFunctionCall","src":"4424:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4414:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4465:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"4475:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4469:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4520:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4529:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4532:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4522:6:33"},"nodeType":"YulFunctionCall","src":"4522:12:33"},"nodeType":"YulExpressionStatement","src":"4522:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4508:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4516:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4505:2:33"},"nodeType":"YulFunctionCall","src":"4505:14:33"},"nodeType":"YulIf","src":"4502:34:33"},{"nodeType":"YulAssignment","src":"4545:71:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4588:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"4599:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4584:3:33"},"nodeType":"YulFunctionCall","src":"4584:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4608:7:33"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4555:28:33"},"nodeType":"YulFunctionCall","src":"4555:61:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4545:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"4625:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4658:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4669:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4654:3:33"},"nodeType":"YulFunctionCall","src":"4654:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4641:12:33"},"nodeType":"YulFunctionCall","src":"4641:32:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4629:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4702:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4711:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4714:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4704:6:33"},"nodeType":"YulFunctionCall","src":"4704:12:33"},"nodeType":"YulExpressionStatement","src":"4704:12:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4688:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4698:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4685:2:33"},"nodeType":"YulFunctionCall","src":"4685:16:33"},"nodeType":"YulIf","src":"4682:36:33"},{"nodeType":"YulAssignment","src":"4727:73:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4770:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4781:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4766:3:33"},"nodeType":"YulFunctionCall","src":"4766:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4792:7:33"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4737:28:33"},"nodeType":"YulFunctionCall","src":"4737:63:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4727:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"4809:49:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4842:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4853:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4838:3:33"},"nodeType":"YulFunctionCall","src":"4838:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4825:12:33"},"nodeType":"YulFunctionCall","src":"4825:33:33"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"4813:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4887:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4896:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4899:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4889:6:33"},"nodeType":"YulFunctionCall","src":"4889:12:33"},"nodeType":"YulExpressionStatement","src":"4889:12:33"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"4873:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4883:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4870:2:33"},"nodeType":"YulFunctionCall","src":"4870:16:33"},"nodeType":"YulIf","src":"4867:36:33"},{"nodeType":"YulAssignment","src":"4912:61:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4943:9:33"},{"name":"offset_2","nodeType":"YulIdentifier","src":"4954:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4939:3:33"},"nodeType":"YulFunctionCall","src":"4939:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4965:7:33"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4922:16:33"},"nodeType":"YulFunctionCall","src":"4922:51:33"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4912:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4167:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4178:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4190:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4198:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4206:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4214:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4222:6:33","type":""}],"src":"4036:943:33"},{"body":{"nodeType":"YulBlock","src":"5121:1009:33","statements":[{"body":{"nodeType":"YulBlock","src":"5167:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5176:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5179:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5169:6:33"},"nodeType":"YulFunctionCall","src":"5169:12:33"},"nodeType":"YulExpressionStatement","src":"5169:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5142:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"5151:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5138:3:33"},"nodeType":"YulFunctionCall","src":"5138:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"5163:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5134:3:33"},"nodeType":"YulFunctionCall","src":"5134:32:33"},"nodeType":"YulIf","src":"5131:52:33"},{"nodeType":"YulVariableDeclaration","src":"5192:37:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5219:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5206:12:33"},"nodeType":"YulFunctionCall","src":"5206:23:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5196:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5238:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"5248:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5242:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5293:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5302:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5305:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5295:6:33"},"nodeType":"YulFunctionCall","src":"5295:12:33"},"nodeType":"YulExpressionStatement","src":"5295:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5281:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"5289:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5278:2:33"},"nodeType":"YulFunctionCall","src":"5278:14:33"},"nodeType":"YulIf","src":"5275:34:33"},{"nodeType":"YulVariableDeclaration","src":"5318:32:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5332:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"5343:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5328:3:33"},"nodeType":"YulFunctionCall","src":"5328:22:33"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5322:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5398:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5407:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5410:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5400:6:33"},"nodeType":"YulFunctionCall","src":"5400:12:33"},"nodeType":"YulExpressionStatement","src":"5400:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5377:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"5381:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5373:3:33"},"nodeType":"YulFunctionCall","src":"5373:13:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5388:7:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5369:3:33"},"nodeType":"YulFunctionCall","src":"5369:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5362:6:33"},"nodeType":"YulFunctionCall","src":"5362:35:33"},"nodeType":"YulIf","src":"5359:55:33"},{"nodeType":"YulVariableDeclaration","src":"5423:26:33","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5446:2:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5433:12:33"},"nodeType":"YulFunctionCall","src":"5433:16:33"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5427:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5458:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"5468:4:33","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5462:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5481:71:33","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5548:2:33"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"5508:39:33"},"nodeType":"YulFunctionCall","src":"5508:43:33"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5492:15:33"},"nodeType":"YulFunctionCall","src":"5492:60:33"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5485:3:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5561:16:33","value":{"name":"dst","nodeType":"YulIdentifier","src":"5574:3:33"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"5565:5:33","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5593:3:33"},{"name":"_3","nodeType":"YulIdentifier","src":"5598:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5586:6:33"},"nodeType":"YulFunctionCall","src":"5586:15:33"},"nodeType":"YulExpressionStatement","src":"5586:15:33"},{"nodeType":"YulAssignment","src":"5610:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5621:3:33"},{"name":"_4","nodeType":"YulIdentifier","src":"5626:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5617:3:33"},"nodeType":"YulFunctionCall","src":"5617:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5610:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"5638:42:33","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5660:2:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5668:1:33","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"5671:2:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5664:3:33"},"nodeType":"YulFunctionCall","src":"5664:10:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5656:3:33"},"nodeType":"YulFunctionCall","src":"5656:19:33"},{"name":"_4","nodeType":"YulIdentifier","src":"5677:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5652:3:33"},"nodeType":"YulFunctionCall","src":"5652:28:33"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5642:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5712:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5721:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5724:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5714:6:33"},"nodeType":"YulFunctionCall","src":"5714:12:33"},"nodeType":"YulExpressionStatement","src":"5714:12:33"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5695:6:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5703:7:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5692:2:33"},"nodeType":"YulFunctionCall","src":"5692:19:33"},"nodeType":"YulIf","src":"5689:39:33"},{"nodeType":"YulVariableDeclaration","src":"5737:22:33","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5752:2:33"},{"name":"_4","nodeType":"YulIdentifier","src":"5756:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5748:3:33"},"nodeType":"YulFunctionCall","src":"5748:11:33"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5741:3:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5824:92:33","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5845:3:33"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5869:3:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5850:18:33"},"nodeType":"YulFunctionCall","src":"5850:23:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5838:6:33"},"nodeType":"YulFunctionCall","src":"5838:36:33"},"nodeType":"YulExpressionStatement","src":"5838:36:33"},{"nodeType":"YulAssignment","src":"5887:19:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5898:3:33"},{"name":"_4","nodeType":"YulIdentifier","src":"5903:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5894:3:33"},"nodeType":"YulFunctionCall","src":"5894:12:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5887:3:33"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5779:3:33"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5784:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5776:2:33"},"nodeType":"YulFunctionCall","src":"5776:15:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5792:23:33","statements":[{"nodeType":"YulAssignment","src":"5794:19:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5805:3:33"},{"name":"_4","nodeType":"YulIdentifier","src":"5810:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5801:3:33"},"nodeType":"YulFunctionCall","src":"5801:12:33"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5794:3:33"}]}]},"pre":{"nodeType":"YulBlock","src":"5772:3:33","statements":[]},"src":"5768:148:33"},{"nodeType":"YulAssignment","src":"5925:15:33","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"5935:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5925:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"5949:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5982:9:33"},{"name":"_4","nodeType":"YulIdentifier","src":"5993:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5978:3:33"},"nodeType":"YulFunctionCall","src":"5978:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5965:12:33"},"nodeType":"YulFunctionCall","src":"5965:32:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5953:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6026:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6035:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6038:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6028:6:33"},"nodeType":"YulFunctionCall","src":"6028:12:33"},"nodeType":"YulExpressionStatement","src":"6028:12:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6012:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6022:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6009:2:33"},"nodeType":"YulFunctionCall","src":"6009:16:33"},"nodeType":"YulIf","src":"6006:36:33"},{"nodeType":"YulAssignment","src":"6051:73:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6105:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:33"},"nodeType":"YulFunctionCall","src":"6090:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6116:7:33"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6061:28:33"},"nodeType":"YulFunctionCall","src":"6061:63:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6051:6:33"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5079:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5090:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5102:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5110:6:33","type":""}],"src":"4984:1146:33"},{"body":{"nodeType":"YulBlock","src":"6196:374:33","statements":[{"nodeType":"YulVariableDeclaration","src":"6206:26:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6226:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6220:5:33"},"nodeType":"YulFunctionCall","src":"6220:12:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6210:6:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6248:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"6253:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6241:6:33"},"nodeType":"YulFunctionCall","src":"6241:19:33"},"nodeType":"YulExpressionStatement","src":"6241:19:33"},{"nodeType":"YulVariableDeclaration","src":"6269:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"6279:4:33","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6273:2:33","type":""}]},{"nodeType":"YulAssignment","src":"6292:19:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6303:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6308:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6299:3:33"},"nodeType":"YulFunctionCall","src":"6299:12:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6292:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"6320:28:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6338:5:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6345:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6334:3:33"},"nodeType":"YulFunctionCall","src":"6334:14:33"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6324:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6357:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"6366:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6361:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6425:120:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6446:3:33"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6457:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6451:5:33"},"nodeType":"YulFunctionCall","src":"6451:13:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6439:6:33"},"nodeType":"YulFunctionCall","src":"6439:26:33"},"nodeType":"YulExpressionStatement","src":"6439:26:33"},{"nodeType":"YulAssignment","src":"6478:19:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6489:3:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6494:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6485:3:33"},"nodeType":"YulFunctionCall","src":"6485:12:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6478:3:33"}]},{"nodeType":"YulAssignment","src":"6510:25:33","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6524:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6532:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6520:3:33"},"nodeType":"YulFunctionCall","src":"6520:15:33"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6510:6:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6387:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"6390:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6384:2:33"},"nodeType":"YulFunctionCall","src":"6384:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6398:18:33","statements":[{"nodeType":"YulAssignment","src":"6400:14:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6409:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"6412:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6405:3:33"},"nodeType":"YulFunctionCall","src":"6405:9:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6400:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"6380:3:33","statements":[]},"src":"6376:169:33"},{"nodeType":"YulAssignment","src":"6554:10:33","value":{"name":"pos","nodeType":"YulIdentifier","src":"6561:3:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6554:3:33"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6173:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6180:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6188:3:33","type":""}],"src":"6135:435:33"},{"body":{"nodeType":"YulBlock","src":"6726:110:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6743:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6754:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6736:6:33"},"nodeType":"YulFunctionCall","src":"6736:21:33"},"nodeType":"YulExpressionStatement","src":"6736:21:33"},{"nodeType":"YulAssignment","src":"6766:64:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6803:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6815:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6826:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6811:3:33"},"nodeType":"YulFunctionCall","src":"6811:18:33"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6774:28:33"},"nodeType":"YulFunctionCall","src":"6774:56:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6766:4:33"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6695:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6706:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6717:4:33","type":""}],"src":"6575:261:33"},{"body":{"nodeType":"YulBlock","src":"6942:102:33","statements":[{"nodeType":"YulAssignment","src":"6952:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6964:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6975:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6960:3:33"},"nodeType":"YulFunctionCall","src":"6960:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6952:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6994:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7009:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7025:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7030:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7021:3:33"},"nodeType":"YulFunctionCall","src":"7021:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"7034:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7017:3:33"},"nodeType":"YulFunctionCall","src":"7017:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7005:3:33"},"nodeType":"YulFunctionCall","src":"7005:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6987:6:33"},"nodeType":"YulFunctionCall","src":"6987:51:33"},"nodeType":"YulExpressionStatement","src":"6987:51:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6911:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6922:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6933:4:33","type":""}],"src":"6841:203:33"},{"body":{"nodeType":"YulBlock","src":"7119:116:33","statements":[{"body":{"nodeType":"YulBlock","src":"7165:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7174:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7177:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7167:6:33"},"nodeType":"YulFunctionCall","src":"7167:12:33"},"nodeType":"YulExpressionStatement","src":"7167:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7140:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"7149:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7136:3:33"},"nodeType":"YulFunctionCall","src":"7136:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"7161:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7132:3:33"},"nodeType":"YulFunctionCall","src":"7132:32:33"},"nodeType":"YulIf","src":"7129:52:33"},{"nodeType":"YulAssignment","src":"7190:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7219:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7200:18:33"},"nodeType":"YulFunctionCall","src":"7200:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7190:6:33"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7085:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7096:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7108:6:33","type":""}],"src":"7049:186:33"},{"body":{"nodeType":"YulBlock","src":"7324:263:33","statements":[{"body":{"nodeType":"YulBlock","src":"7370:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7379:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7382:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7372:6:33"},"nodeType":"YulFunctionCall","src":"7372:12:33"},"nodeType":"YulExpressionStatement","src":"7372:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7345:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"7354:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7341:3:33"},"nodeType":"YulFunctionCall","src":"7341:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"7366:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7337:3:33"},"nodeType":"YulFunctionCall","src":"7337:32:33"},"nodeType":"YulIf","src":"7334:52:33"},{"nodeType":"YulAssignment","src":"7395:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7424:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7405:18:33"},"nodeType":"YulFunctionCall","src":"7405:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7395:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"7443:45:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7473:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7484:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7469:3:33"},"nodeType":"YulFunctionCall","src":"7469:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7456:12:33"},"nodeType":"YulFunctionCall","src":"7456:32:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7447:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"7541:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7550:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7553:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7543:6:33"},"nodeType":"YulFunctionCall","src":"7543:12:33"},"nodeType":"YulExpressionStatement","src":"7543:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7510:5:33"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7531:5:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7524:6:33"},"nodeType":"YulFunctionCall","src":"7524:13:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7517:6:33"},"nodeType":"YulFunctionCall","src":"7517:21:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7507:2:33"},"nodeType":"YulFunctionCall","src":"7507:32:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7500:6:33"},"nodeType":"YulFunctionCall","src":"7500:40:33"},"nodeType":"YulIf","src":"7497:60:33"},{"nodeType":"YulAssignment","src":"7566:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"7576:5:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7566:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7282:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7293:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7305:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7313:6:33","type":""}],"src":"7240:347:33"},{"body":{"nodeType":"YulBlock","src":"7715:610:33","statements":[{"body":{"nodeType":"YulBlock","src":"7761:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7770:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7773:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7763:6:33"},"nodeType":"YulFunctionCall","src":"7763:12:33"},"nodeType":"YulExpressionStatement","src":"7763:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7736:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"7745:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7732:3:33"},"nodeType":"YulFunctionCall","src":"7732:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"7757:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7728:3:33"},"nodeType":"YulFunctionCall","src":"7728:32:33"},"nodeType":"YulIf","src":"7725:52:33"},{"nodeType":"YulAssignment","src":"7786:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7815:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7796:18:33"},"nodeType":"YulFunctionCall","src":"7796:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7786:6:33"}]},{"nodeType":"YulAssignment","src":"7834:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7861:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7872:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7857:3:33"},"nodeType":"YulFunctionCall","src":"7857:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7844:12:33"},"nodeType":"YulFunctionCall","src":"7844:32:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7834:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"7885:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7916:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7927:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7912:3:33"},"nodeType":"YulFunctionCall","src":"7912:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7899:12:33"},"nodeType":"YulFunctionCall","src":"7899:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7889:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7940:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"7950:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7944:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"7995:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8004:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8007:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7997:6:33"},"nodeType":"YulFunctionCall","src":"7997:12:33"},"nodeType":"YulExpressionStatement","src":"7997:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7983:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"7991:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7980:2:33"},"nodeType":"YulFunctionCall","src":"7980:14:33"},"nodeType":"YulIf","src":"7977:34:33"},{"nodeType":"YulVariableDeclaration","src":"8020:32:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8034:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"8045:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8030:3:33"},"nodeType":"YulFunctionCall","src":"8030:22:33"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8024:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"8100:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8109:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8112:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8102:6:33"},"nodeType":"YulFunctionCall","src":"8102:12:33"},"nodeType":"YulExpressionStatement","src":"8102:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8079:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"8083:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8075:3:33"},"nodeType":"YulFunctionCall","src":"8075:13:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8090:7:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8071:3:33"},"nodeType":"YulFunctionCall","src":"8071:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8064:6:33"},"nodeType":"YulFunctionCall","src":"8064:35:33"},"nodeType":"YulIf","src":"8061:55:33"},{"nodeType":"YulVariableDeclaration","src":"8125:30:33","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8152:2:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8139:12:33"},"nodeType":"YulFunctionCall","src":"8139:16:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8129:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"8182:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8191:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8194:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8184:6:33"},"nodeType":"YulFunctionCall","src":"8184:12:33"},"nodeType":"YulExpressionStatement","src":"8184:12:33"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8170:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"8178:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8167:2:33"},"nodeType":"YulFunctionCall","src":"8167:14:33"},"nodeType":"YulIf","src":"8164:34:33"},{"body":{"nodeType":"YulBlock","src":"8248:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8257:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8260:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8250:6:33"},"nodeType":"YulFunctionCall","src":"8250:12:33"},"nodeType":"YulExpressionStatement","src":"8250:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8221:2:33"},{"name":"length","nodeType":"YulIdentifier","src":"8225:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8217:3:33"},"nodeType":"YulFunctionCall","src":"8217:15:33"},{"kind":"number","nodeType":"YulLiteral","src":"8234:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8213:3:33"},"nodeType":"YulFunctionCall","src":"8213:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8239:7:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8210:2:33"},"nodeType":"YulFunctionCall","src":"8210:37:33"},"nodeType":"YulIf","src":"8207:57:33"},{"nodeType":"YulAssignment","src":"8273:21:33","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8287:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"8291:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8283:3:33"},"nodeType":"YulFunctionCall","src":"8283:11:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8273:6:33"}]},{"nodeType":"YulAssignment","src":"8303:16:33","value":{"name":"length","nodeType":"YulIdentifier","src":"8313:6:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8303:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7657:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7668:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7680:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7688:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7696:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7704:6:33","type":""}],"src":"7592:733:33"},{"body":{"nodeType":"YulBlock","src":"8417:173:33","statements":[{"body":{"nodeType":"YulBlock","src":"8463:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8472:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8475:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8465:6:33"},"nodeType":"YulFunctionCall","src":"8465:12:33"},"nodeType":"YulExpressionStatement","src":"8465:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8438:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"8447:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:33"},"nodeType":"YulFunctionCall","src":"8434:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"8459:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8430:3:33"},"nodeType":"YulFunctionCall","src":"8430:32:33"},"nodeType":"YulIf","src":"8427:52:33"},{"nodeType":"YulAssignment","src":"8488:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8517:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8498:18:33"},"nodeType":"YulFunctionCall","src":"8498:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8488:6:33"}]},{"nodeType":"YulAssignment","src":"8536:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8569:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8580:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8565:3:33"},"nodeType":"YulFunctionCall","src":"8565:18:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8546:18:33"},"nodeType":"YulFunctionCall","src":"8546:38:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8536:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8375:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8386:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8398:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8406:6:33","type":""}],"src":"8330:260:33"},{"body":{"nodeType":"YulBlock","src":"8742:459:33","statements":[{"body":{"nodeType":"YulBlock","src":"8789:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8798:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8801:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8791:6:33"},"nodeType":"YulFunctionCall","src":"8791:12:33"},"nodeType":"YulExpressionStatement","src":"8791:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8763:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"8772:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8759:3:33"},"nodeType":"YulFunctionCall","src":"8759:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"8784:3:33","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8755:3:33"},"nodeType":"YulFunctionCall","src":"8755:33:33"},"nodeType":"YulIf","src":"8752:53:33"},{"nodeType":"YulAssignment","src":"8814:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8843:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8824:18:33"},"nodeType":"YulFunctionCall","src":"8824:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8814:6:33"}]},{"nodeType":"YulAssignment","src":"8862:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8895:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8906:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8891:3:33"},"nodeType":"YulFunctionCall","src":"8891:18:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8872:18:33"},"nodeType":"YulFunctionCall","src":"8872:38:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8862:6:33"}]},{"nodeType":"YulAssignment","src":"8919:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8946:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8957:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8942:3:33"},"nodeType":"YulFunctionCall","src":"8942:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8929:12:33"},"nodeType":"YulFunctionCall","src":"8929:32:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8919:6:33"}]},{"nodeType":"YulAssignment","src":"8970:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8997:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9008:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8993:3:33"},"nodeType":"YulFunctionCall","src":"8993:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8980:12:33"},"nodeType":"YulFunctionCall","src":"8980:32:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8970:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"9021:47:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9052:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9063:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9048:3:33"},"nodeType":"YulFunctionCall","src":"9048:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9035:12:33"},"nodeType":"YulFunctionCall","src":"9035:33:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9025:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9111:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9120:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9123:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9113:6:33"},"nodeType":"YulFunctionCall","src":"9113:12:33"},"nodeType":"YulExpressionStatement","src":"9113:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9083:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"9091:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9080:2:33"},"nodeType":"YulFunctionCall","src":"9080:30:33"},"nodeType":"YulIf","src":"9077:50:33"},{"nodeType":"YulAssignment","src":"9136:59:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9167:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"9178:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9163:3:33"},"nodeType":"YulFunctionCall","src":"9163:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9187:7:33"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"9146:16:33"},"nodeType":"YulFunctionCall","src":"9146:49:33"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9136:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8676:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8687:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8699:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8707:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8715:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8723:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8731:6:33","type":""}],"src":"8595:606:33"},{"body":{"nodeType":"YulBlock","src":"9261:325:33","statements":[{"nodeType":"YulAssignment","src":"9271:22:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9285:1:33","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"9288:4:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9281:3:33"},"nodeType":"YulFunctionCall","src":"9281:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9271:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"9302:38:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9332:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"9338:1:33","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9328:3:33"},"nodeType":"YulFunctionCall","src":"9328:12:33"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"9306:18:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9379:31:33","statements":[{"nodeType":"YulAssignment","src":"9381:27:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9395:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"9403:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9391:3:33"},"nodeType":"YulFunctionCall","src":"9391:17:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9381:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9359:18:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9352:6:33"},"nodeType":"YulFunctionCall","src":"9352:26:33"},"nodeType":"YulIf","src":"9349:61:33"},{"body":{"nodeType":"YulBlock","src":"9469:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9490:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9497:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9502:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9493:3:33"},"nodeType":"YulFunctionCall","src":"9493:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9483:6:33"},"nodeType":"YulFunctionCall","src":"9483:31:33"},"nodeType":"YulExpressionStatement","src":"9483:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9534:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9537:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9527:6:33"},"nodeType":"YulFunctionCall","src":"9527:15:33"},"nodeType":"YulExpressionStatement","src":"9527:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9562:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9565:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9555:6:33"},"nodeType":"YulFunctionCall","src":"9555:15:33"},"nodeType":"YulExpressionStatement","src":"9555:15:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9425:18:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9448:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"9456:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9445:2:33"},"nodeType":"YulFunctionCall","src":"9445:14:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9422:2:33"},"nodeType":"YulFunctionCall","src":"9422:38:33"},"nodeType":"YulIf","src":"9419:161:33"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9241:4:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9250:6:33","type":""}],"src":"9206:380:33"},{"body":{"nodeType":"YulBlock","src":"9720:175:33","statements":[{"nodeType":"YulAssignment","src":"9730:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9742:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9753:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9738:3:33"},"nodeType":"YulFunctionCall","src":"9738:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9730:4:33"}]},{"nodeType":"YulVariableDeclaration","src":"9765:29:33","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9783:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9788:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9779:3:33"},"nodeType":"YulFunctionCall","src":"9779:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"9792:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9775:3:33"},"nodeType":"YulFunctionCall","src":"9775:19:33"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9769:2:33","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9810:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9825:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"9833:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9821:3:33"},"nodeType":"YulFunctionCall","src":"9821:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9803:6:33"},"nodeType":"YulFunctionCall","src":"9803:34:33"},"nodeType":"YulExpressionStatement","src":"9803:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9857:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9868:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9853:3:33"},"nodeType":"YulFunctionCall","src":"9853:18:33"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9877:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"9885:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9873:3:33"},"nodeType":"YulFunctionCall","src":"9873:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9846:6:33"},"nodeType":"YulFunctionCall","src":"9846:43:33"},"nodeType":"YulExpressionStatement","src":"9846:43:33"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9681:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9692:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9700:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9711:4:33","type":""}],"src":"9591:304:33"},{"body":{"nodeType":"YulBlock","src":"10029:119:33","statements":[{"nodeType":"YulAssignment","src":"10039:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10051:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10062:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10047:3:33"},"nodeType":"YulFunctionCall","src":"10047:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10039:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10081:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"10092:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10074:6:33"},"nodeType":"YulFunctionCall","src":"10074:25:33"},"nodeType":"YulExpressionStatement","src":"10074:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10119:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10130:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10115:3:33"},"nodeType":"YulFunctionCall","src":"10115:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"10135:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10108:6:33"},"nodeType":"YulFunctionCall","src":"10108:34:33"},"nodeType":"YulExpressionStatement","src":"10108:34:33"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9990:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10001:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10009:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10020:4:33","type":""}],"src":"9900:248:33"},{"body":{"nodeType":"YulBlock","src":"10185:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10202:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10209:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10214:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10205:3:33"},"nodeType":"YulFunctionCall","src":"10205:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10195:6:33"},"nodeType":"YulFunctionCall","src":"10195:31:33"},"nodeType":"YulExpressionStatement","src":"10195:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10242:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10245:4:33","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10235:6:33"},"nodeType":"YulFunctionCall","src":"10235:15:33"},"nodeType":"YulExpressionStatement","src":"10235:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10266:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10269:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10259:6:33"},"nodeType":"YulFunctionCall","src":"10259:15:33"},"nodeType":"YulExpressionStatement","src":"10259:15:33"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"10153:127:33"},{"body":{"nodeType":"YulBlock","src":"10317:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10334:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10341:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10346:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10337:3:33"},"nodeType":"YulFunctionCall","src":"10337:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10327:6:33"},"nodeType":"YulFunctionCall","src":"10327:31:33"},"nodeType":"YulExpressionStatement","src":"10327:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10374:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10377:4:33","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10367:6:33"},"nodeType":"YulFunctionCall","src":"10367:15:33"},"nodeType":"YulExpressionStatement","src":"10367:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10398:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10401:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10391:6:33"},"nodeType":"YulFunctionCall","src":"10391:15:33"},"nodeType":"YulExpressionStatement","src":"10391:15:33"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10285:127:33"},{"body":{"nodeType":"YulBlock","src":"10464:88:33","statements":[{"body":{"nodeType":"YulBlock","src":"10495:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10497:16:33"},"nodeType":"YulFunctionCall","src":"10497:18:33"},"nodeType":"YulExpressionStatement","src":"10497:18:33"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10480:5:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10491:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10487:3:33"},"nodeType":"YulFunctionCall","src":"10487:6:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10477:2:33"},"nodeType":"YulFunctionCall","src":"10477:17:33"},"nodeType":"YulIf","src":"10474:43:33"},{"nodeType":"YulAssignment","src":"10526:20:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10537:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"10544:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10533:3:33"},"nodeType":"YulFunctionCall","src":"10533:13:33"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10526:3:33"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10446:5:33","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10456:3:33","type":""}],"src":"10417:135:33"},{"body":{"nodeType":"YulBlock","src":"10731:180:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10748:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10759:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10741:6:33"},"nodeType":"YulFunctionCall","src":"10741:21:33"},"nodeType":"YulExpressionStatement","src":"10741:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10782:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10793:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10778:3:33"},"nodeType":"YulFunctionCall","src":"10778:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"10798:2:33","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10771:6:33"},"nodeType":"YulFunctionCall","src":"10771:30:33"},"nodeType":"YulExpressionStatement","src":"10771:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10821:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10832:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10817:3:33"},"nodeType":"YulFunctionCall","src":"10817:18:33"},{"hexValue":"4f6e6c79204861736870696e20636f6e74726163742063616e206d696e74","kind":"string","nodeType":"YulLiteral","src":"10837:32:33","type":"","value":"Only Hashpin contract can mint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10810:6:33"},"nodeType":"YulFunctionCall","src":"10810:60:33"},"nodeType":"YulExpressionStatement","src":"10810:60:33"},{"nodeType":"YulAssignment","src":"10879:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10891:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10902:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10887:3:33"},"nodeType":"YulFunctionCall","src":"10887:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10879:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_14ddb257f1ec202d0225b5cd7757b4632f49f22eaa94e372cab5340091be23ef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10708:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10722:4:33","type":""}],"src":"10557:354:33"},{"body":{"nodeType":"YulBlock","src":"11090:169:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11107:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11118:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11100:6:33"},"nodeType":"YulFunctionCall","src":"11100:21:33"},"nodeType":"YulExpressionStatement","src":"11100:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11141:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11152:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11137:3:33"},"nodeType":"YulFunctionCall","src":"11137:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"11157:2:33","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11130:6:33"},"nodeType":"YulFunctionCall","src":"11130:30:33"},"nodeType":"YulExpressionStatement","src":"11130:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11180:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11191:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11176:3:33"},"nodeType":"YulFunctionCall","src":"11176:18:33"},{"hexValue":"4861736820616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"11196:21:33","type":"","value":"Hash already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11169:6:33"},"nodeType":"YulFunctionCall","src":"11169:49:33"},"nodeType":"YulExpressionStatement","src":"11169:49:33"},{"nodeType":"YulAssignment","src":"11227:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11239:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11250:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11235:3:33"},"nodeType":"YulFunctionCall","src":"11235:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11227:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_79d92d9ad9002a23620b92eabf862edbf431a7e5dac84191f4393e1413b6a6d0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11067:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11081:4:33","type":""}],"src":"10916:343:33"},{"body":{"nodeType":"YulBlock","src":"11449:232:33","statements":[{"nodeType":"YulAssignment","src":"11459:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11471:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11482:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11467:3:33"},"nodeType":"YulFunctionCall","src":"11467:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11459:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11502:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11517:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11533:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11538:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11529:3:33"},"nodeType":"YulFunctionCall","src":"11529:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"11542:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11525:3:33"},"nodeType":"YulFunctionCall","src":"11525:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11513:3:33"},"nodeType":"YulFunctionCall","src":"11513:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11495:6:33"},"nodeType":"YulFunctionCall","src":"11495:51:33"},"nodeType":"YulExpressionStatement","src":"11495:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11566:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11577:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11562:3:33"},"nodeType":"YulFunctionCall","src":"11562:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"11582:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11555:6:33"},"nodeType":"YulFunctionCall","src":"11555:34:33"},"nodeType":"YulExpressionStatement","src":"11555:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11609:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11620:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11605:3:33"},"nodeType":"YulFunctionCall","src":"11605:18:33"},{"name":"value2","nodeType":"YulIdentifier","src":"11625:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11598:6:33"},"nodeType":"YulFunctionCall","src":"11598:34:33"},"nodeType":"YulExpressionStatement","src":"11598:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11652:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11663:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11648:3:33"},"nodeType":"YulFunctionCall","src":"11648:18:33"},{"name":"value3","nodeType":"YulIdentifier","src":"11668:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11641:6:33"},"nodeType":"YulFunctionCall","src":"11641:34:33"},"nodeType":"YulExpressionStatement","src":"11641:34:33"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11394:9:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11405:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11413:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11421:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11429:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11440:4:33","type":""}],"src":"11264:417:33"},{"body":{"nodeType":"YulBlock","src":"11734:77:33","statements":[{"nodeType":"YulAssignment","src":"11744:16:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11755:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"11758:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11751:3:33"},"nodeType":"YulFunctionCall","src":"11751:9:33"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11744:3:33"}]},{"body":{"nodeType":"YulBlock","src":"11783:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11785:16:33"},"nodeType":"YulFunctionCall","src":"11785:18:33"},"nodeType":"YulExpressionStatement","src":"11785:18:33"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11775:1:33"},{"name":"sum","nodeType":"YulIdentifier","src":"11778:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11772:2:33"},"nodeType":"YulFunctionCall","src":"11772:10:33"},"nodeType":"YulIf","src":"11769:36:33"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11717:1:33","type":""},{"name":"y","nodeType":"YulTypedName","src":"11720:1:33","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11726:3:33","type":""}],"src":"11686:125:33"},{"body":{"nodeType":"YulBlock","src":"12045:236:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12062:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12073:2:33","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12055:6:33"},"nodeType":"YulFunctionCall","src":"12055:21:33"},"nodeType":"YulExpressionStatement","src":"12055:21:33"},{"nodeType":"YulVariableDeclaration","src":"12085:70:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12128:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12140:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12151:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12136:3:33"},"nodeType":"YulFunctionCall","src":"12136:18:33"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"12099:28:33"},"nodeType":"YulFunctionCall","src":"12099:56:33"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"12089:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12175:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12186:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12171:3:33"},"nodeType":"YulFunctionCall","src":"12171:18:33"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"12195:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"12203:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12191:3:33"},"nodeType":"YulFunctionCall","src":"12191:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12164:6:33"},"nodeType":"YulFunctionCall","src":"12164:50:33"},"nodeType":"YulExpressionStatement","src":"12164:50:33"},{"nodeType":"YulAssignment","src":"12223:52:33","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12260:6:33"},{"name":"tail_1","nodeType":"YulIdentifier","src":"12268:6:33"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"12231:28:33"},"nodeType":"YulFunctionCall","src":"12231:44:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12223:4:33"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12006:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12017:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12025:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12036:4:33","type":""}],"src":"11816:465:33"},{"body":{"nodeType":"YulBlock","src":"12517:330:33","statements":[{"nodeType":"YulVariableDeclaration","src":"12527:29:33","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12545:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12550:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12541:3:33"},"nodeType":"YulFunctionCall","src":"12541:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"12554:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12537:3:33"},"nodeType":"YulFunctionCall","src":"12537:19:33"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12531:2:33","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12572:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12587:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"12595:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12583:3:33"},"nodeType":"YulFunctionCall","src":"12583:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12565:6:33"},"nodeType":"YulFunctionCall","src":"12565:34:33"},"nodeType":"YulExpressionStatement","src":"12565:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12619:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12630:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12615:3:33"},"nodeType":"YulFunctionCall","src":"12615:18:33"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12639:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"12647:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12635:3:33"},"nodeType":"YulFunctionCall","src":"12635:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12608:6:33"},"nodeType":"YulFunctionCall","src":"12608:43:33"},"nodeType":"YulExpressionStatement","src":"12608:43:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12671:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12682:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12667:3:33"},"nodeType":"YulFunctionCall","src":"12667:18:33"},{"name":"value2","nodeType":"YulIdentifier","src":"12687:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12660:6:33"},"nodeType":"YulFunctionCall","src":"12660:34:33"},"nodeType":"YulExpressionStatement","src":"12660:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12714:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12725:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12710:3:33"},"nodeType":"YulFunctionCall","src":"12710:18:33"},{"name":"value3","nodeType":"YulIdentifier","src":"12730:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12703:6:33"},"nodeType":"YulFunctionCall","src":"12703:34:33"},"nodeType":"YulExpressionStatement","src":"12703:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12757:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12768:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12753:3:33"},"nodeType":"YulFunctionCall","src":"12753:19:33"},{"kind":"number","nodeType":"YulLiteral","src":"12774:3:33","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12746:6:33"},"nodeType":"YulFunctionCall","src":"12746:32:33"},"nodeType":"YulExpressionStatement","src":"12746:32:33"},{"nodeType":"YulAssignment","src":"12787:54:33","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12813:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12825:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12836:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12821:3:33"},"nodeType":"YulFunctionCall","src":"12821:19:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"12795:17:33"},"nodeType":"YulFunctionCall","src":"12795:46:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12787:4:33"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12454:9:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12465:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12473:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12481:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12489:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12497:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12508:4:33","type":""}],"src":"12286:561:33"},{"body":{"nodeType":"YulBlock","src":"12932:169:33","statements":[{"body":{"nodeType":"YulBlock","src":"12978:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12987:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12990:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12980:6:33"},"nodeType":"YulFunctionCall","src":"12980:12:33"},"nodeType":"YulExpressionStatement","src":"12980:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12953:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"12962:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12949:3:33"},"nodeType":"YulFunctionCall","src":"12949:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"12974:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12945:3:33"},"nodeType":"YulFunctionCall","src":"12945:32:33"},"nodeType":"YulIf","src":"12942:52:33"},{"nodeType":"YulVariableDeclaration","src":"13003:29:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13022:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13016:5:33"},"nodeType":"YulFunctionCall","src":"13016:16:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13007:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13065:5:33"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"13041:23:33"},"nodeType":"YulFunctionCall","src":"13041:30:33"},"nodeType":"YulExpressionStatement","src":"13041:30:33"},{"nodeType":"YulAssignment","src":"13080:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"13090:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13080:6:33"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12898:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12909:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12921:6:33","type":""}],"src":"12852:249:33"},{"body":{"nodeType":"YulBlock","src":"13437:496:33","statements":[{"nodeType":"YulVariableDeclaration","src":"13447:29:33","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13465:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"13470:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13461:3:33"},"nodeType":"YulFunctionCall","src":"13461:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"13474:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13457:3:33"},"nodeType":"YulFunctionCall","src":"13457:19:33"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13451:2:33","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13492:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13507:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"13515:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13503:3:33"},"nodeType":"YulFunctionCall","src":"13503:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13485:6:33"},"nodeType":"YulFunctionCall","src":"13485:34:33"},"nodeType":"YulExpressionStatement","src":"13485:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13539:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13550:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13535:3:33"},"nodeType":"YulFunctionCall","src":"13535:18:33"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13559:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"13567:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13555:3:33"},"nodeType":"YulFunctionCall","src":"13555:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13528:6:33"},"nodeType":"YulFunctionCall","src":"13528:43:33"},"nodeType":"YulExpressionStatement","src":"13528:43:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13591:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13602:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13587:3:33"},"nodeType":"YulFunctionCall","src":"13587:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"13607:3:33","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13580:6:33"},"nodeType":"YulFunctionCall","src":"13580:31:33"},"nodeType":"YulExpressionStatement","src":"13580:31:33"},{"nodeType":"YulVariableDeclaration","src":"13620:71:33","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13663:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13675:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13686:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13671:3:33"},"nodeType":"YulFunctionCall","src":"13671:19:33"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"13634:28:33"},"nodeType":"YulFunctionCall","src":"13634:57:33"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"13624:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13711:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13722:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13707:3:33"},"nodeType":"YulFunctionCall","src":"13707:18:33"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13731:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"13739:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13727:3:33"},"nodeType":"YulFunctionCall","src":"13727:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13700:6:33"},"nodeType":"YulFunctionCall","src":"13700:50:33"},"nodeType":"YulExpressionStatement","src":"13700:50:33"},{"nodeType":"YulVariableDeclaration","src":"13759:58:33","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13802:6:33"},{"name":"tail_1","nodeType":"YulIdentifier","src":"13810:6:33"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"13773:28:33"},"nodeType":"YulFunctionCall","src":"13773:44:33"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"13763:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13837:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"13848:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13833:3:33"},"nodeType":"YulFunctionCall","src":"13833:19:33"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13858:6:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"13866:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13854:3:33"},"nodeType":"YulFunctionCall","src":"13854:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13826:6:33"},"nodeType":"YulFunctionCall","src":"13826:51:33"},"nodeType":"YulExpressionStatement","src":"13826:51:33"},{"nodeType":"YulAssignment","src":"13886:41:33","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"13912:6:33"},{"name":"tail_2","nodeType":"YulIdentifier","src":"13920:6:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"13894:17:33"},"nodeType":"YulFunctionCall","src":"13894:33:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13886:4:33"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13374:9:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13385:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13393:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13401:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13409:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13417:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13428:4:33","type":""}],"src":"13106:827:33"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_14ddb257f1ec202d0225b5cd7757b4632f49f22eaa94e372cab5340091be23ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Only Hashpin contract can mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_79d92d9ad9002a23620b92eabf862edbf431a7e5dac84191f4393e1413b6a6d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Hash already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8FAA9EDF GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xF79EC5C3 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8FAA9EDF EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xB6483BAB EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xE9427CBB EQ PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x129B3E27 EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0xE40 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0xEA4 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xF03 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x105C JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x117 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x126B JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x1325 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x1214 JUMP JUMPDEST PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2DEDFC83 PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x2BC JUMPI POP PUSH2 0x2BC DUP3 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2F6 SWAP1 PUSH2 0x138A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x322 SWAP1 PUSH2 0x138A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x36F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x344 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x36F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x352 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x39C JUMPI POP PUSH2 0x39A DUP7 DUP3 PUSH2 0x625 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3DF DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x740 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x418 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x434 JUMPI PUSH2 0x434 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x45D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x487 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x29A JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x499 JUMPI PUSH2 0x499 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4AD DUP2 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x463 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4C4 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x4CE PUSH1 0x0 PUSH2 0x7D4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x505 CALLER DUP4 DUP4 PUSH2 0x826 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x566 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204861736870696E20636F6E74726163742063616E206D696E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x12185CDA08185B1C9958591E481B5A5B9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH1 0x1F DUP7 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD SWAP1 SWAP4 MSTORE DUP5 DUP4 MSTORE DUP7 SWAP3 PUSH2 0x61C SWAP3 DUP10 SWAP3 DUP6 SWAP3 SWAP1 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x8BC SWAP3 POP POP POP JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x674 JUMPI POP PUSH2 0x672 DUP7 DUP3 PUSH2 0x625 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x3DF DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x919 JUMP JUMPDEST PUSH2 0x6BA PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x6ED DUP2 PUSH2 0x7D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x721 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x2BC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x7A0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x9A7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x3DF PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x943 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x96C JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x99E DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x9A7 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9B3 DUP6 DUP6 DUP6 DUP6 PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x7A0 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x9EC JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x9E5 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xC17 JUMP JUMPDEST POP POP PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x3DF DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD3B JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xA29 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x3C9 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xB38 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0xAE0 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0xB25 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB1F SWAP1 DUP5 SWAP1 PUSH2 0x1409 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP DUP1 PUSH2 0xB31 SWAP1 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP PUSH2 0xA2D JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0xBB9 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xBAA SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x7A0 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC08 SWAP3 SWAP2 SWAP1 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xC5B SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC96 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC93 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCFF JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xD7F SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDBA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDB7 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDE8 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3C9 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5C DUP4 PUSH2 0xE24 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE9D DUP2 PUSH2 0xE6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEE3 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xEC7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE9D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEBD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF55 JUMPI PUSH2 0xF55 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF77 PUSH2 0xF16 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xFA7 PUSH2 0xFA2 DUP4 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0xF2C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xFE1 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xFCA JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1017 JUMPI PUSH2 0x1017 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x102A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xF2C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x103F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1074 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x107D DUP7 PUSH2 0xE24 JUMP JUMPDEST SWAP5 POP PUSH2 0x108B PUSH1 0x20 DUP8 ADD PUSH2 0xE24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B4 DUP10 DUP4 DUP11 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D6 DUP10 DUP4 DUP11 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F9 DUP9 DUP3 DUP10 ADD PUSH2 0xFEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1155 PUSH2 0xFA2 DUP4 PUSH2 0xF5D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1199 JUMPI PUSH2 0x118A DUP7 PUSH2 0xE24 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1179 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x11AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11BC DUP6 DUP3 DUP7 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11F6 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x11DA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE9D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9D DUP3 PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x124B DUP4 PUSH2 0xE24 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128A DUP6 PUSH2 0xE24 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x130E DUP4 PUSH2 0xE24 JUMP JUMPDEST SWAP2 POP PUSH2 0x131C PUSH1 0x20 DUP5 ADD PUSH2 0xE24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x133D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1346 DUP7 PUSH2 0xE24 JUMP JUMPDEST SWAP5 POP PUSH2 0x1354 PUSH1 0x20 DUP8 ADD PUSH2 0xE24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x137E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F9 DUP9 DUP3 DUP10 ADD PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x139E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1402 JUMPI PUSH2 0x1402 PUSH2 0x13DA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2BC JUMPI PUSH2 0x2BC PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x142F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x11C6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x61C DUP2 DUP6 PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x147B SWAP1 DUP4 ADD DUP5 PUSH2 0xEBD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE9D DUP2 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x14CF SWAP1 DUP4 ADD DUP7 PUSH2 0x11C6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x14E1 DUP2 DUP7 PUSH2 0x11C6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x14F5 DUP2 DUP6 PUSH2 0xEBD JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 SLT PUSH19 0x1F1223DABC4F0BA67E6088CE5D4A33EC97CAB8 EQ BLOCKHASH 0x5E LOG2 SWAP12 0xB5 PREVRANDAO 0xFB 0xF6 MUL PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"315:2327:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:132:5;;;;;;:::i;:::-;;:::i;:::-;;;597:25:33;;;585:2;570:18;2245:132:5;;;;;;;;2401:239:29;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:33;;1177:22;1159:41;;1147:2;1132:18;2401:239:29;1019:187:33;2082:103:5;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2093:105:29:-;;;;;;:::i;:::-;2152:4;2175:16;;;:10;:16;;;;;;;;;2093:105;4012:429:5;;;;;;:::i;:::-;;:::i;:::-;;2534:552;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2293:101:0:-;;;:::i;1638:85::-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;7005:32:33;;;6987:51;;6975:2;6960:18;1638:85:0;6841:203:33;920:124:29;;;;;;:::i;:::-;;:::i;3154:144:5:-;;;;;;:::i;:::-;;:::i;1371:562:29:-;;;;;;:::i;:::-;;:::i;558:30::-;;;;;-1:-1:-1;;;;;558:30:29;;;3365:157:5;;;;;;:::i;:::-;;:::i;3589:351::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;440:42:29:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2245:132:5;2322:7;2348:13;;;;;;;;;;;-1:-1:-1;;;;;2348:22:5;;;;;;;;;;2245:132;;;;;:::o;2401:239:29:-;2500:4;-1:-1:-1;;;;;;2536:44:29;;-1:-1:-1;;;2536:44:29;;:97;;;2597:36;2621:11;2597:23;:36::i;2082:103:5:-;2142:13;2174:4;2167:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:103;;;:::o;4012:429::-;735:10:18;-1:-1:-1;;;;;4249:14:5;;;;;;;:49;;;4268:30;4285:4;4291:6;4268:16;:30::i;:::-;4267:31;4249:49;4245:129;;;4321:42;;-1:-1:-1;;;4321:42:5;;-1:-1:-1;;;;;9821:15:33;;;4321:42:5;;;9803:34:33;9873:15;;9853:18;;;9846:43;9738:18;;4321:42:5;;;;;;;;4245:129;4383:51;4406:4;4412:2;4416:3;4421:6;4429:4;4383:22;:51::i;:::-;4196:245;4012:429;;;;;:::o;2534:552::-;2658:16;2709:3;:10;2690:8;:15;:29;2686:121;;2768:10;;2780:15;;2742:54;;-1:-1:-1;;;2742:54:5;;;;;10074:25:33;;;;10115:18;;;10108:34;10047:18;;2742:54:5;9900:248:33;2686:121:5;2817:30;2864:8;:15;2850:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2850:30:5;;2817:63;;2896:9;2891:158;2915:8;:15;2911:1;:19;2891:158;;;16302:4:16;16293:14;;;16273:35;;;16267:42;2970:68:5;;16302:4:16;16293:14;;;16273:35;;;16267:42;2245:132:5;:::i;2970:68::-;2951:13;2965:1;2951:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;2932:3;;;:::i;:::-;;;2891:158;;;-1:-1:-1;3066:13:5;2534:552;-1:-1:-1;;;2534:552:5:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;920:124:29:-;1531:13:0;:11;:13::i;:::-;1003:15:29::1;:34:::0;;-1:-1:-1;;;;;;1003:34:29::1;-1:-1:-1::0;;;;;1003:34:29;;;::::1;::::0;;;::::1;::::0;;920:124::o;3154:144:5:-;3239:52;735:10:18;3272:8:5;3282;3239:18;:52::i;:::-;3154:144;;:::o;1371:562:29:-;1504:15;;1463:7;;-1:-1:-1;;;;;1504:15:29;1490:10;:29;1482:72;;;;-1:-1:-1;;;1482:72:29;;10759:2:33;1482:72:29;;;10741:21:33;10798:2;10778:18;;;10771:30;10837:32;10817:18;;;10810:60;10887:18;;1482:72:29;10557:354:33;1482:72:29;1573:16;;;;:10;:16;;;;;;;;1572:17;1564:49;;;;-1:-1:-1;;;1564:49:29;;11118:2:33;1564:49:29;;;11100:21:33;11157:2;11137:18;;;11130:30;-1:-1:-1;;;11176:18:33;;;11169:49;11235:18;;1564:49:29;10916:343:33;1564:49:29;1679:15;1764:16;;;:10;:16;;;;;;;;;:23;;-1:-1:-1;;1764:23:29;1783:4;1764:23;;;;;;1862:31;;;;;;;;;;;;;;;;;;;;1705:4;;1862:31;;1868:2;;1705:4;;1783;;1884:8;;;;;;1862:31;;1884:8;;;;1862:31;;;;;;;;;-1:-1:-1;1862:5:29;;-1:-1:-1;;;1862:31:29:i;:::-;1919:7;1371:562;-1:-1:-1;;;;;1371:562:29:o;3365:157:5:-;-1:-1:-1;;;;;3478:27:5;;;3455:4;3478:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3365:157::o;3589:351::-;735:10:18;-1:-1:-1;;;;;3755:14:5;;;;;;;:49;;;3774:30;3791:4;3797:6;3774:16;:30::i;:::-;3773:31;3755:49;3751:129;;;3827:42;;-1:-1:-1;;;3827:42:5;;-1:-1:-1;;;;;9821:15:33;;;3827:42:5;;;9803:34:33;9873:15;;9853:18;;;9846:43;9738:18;;3827:42:5;9591:304:33;3751:129:5;3889:44;3907:4;3913:2;3917;3921:5;3928:4;3889:17;:44::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;6987:51:33::0;6960:18;;2672:31:0::1;6841:203:33::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1378:305:5:-;1480:4;-1:-1:-1;;;;;;1515:41:5;;-1:-1:-1;;;1515:41:5;;:109;;-1:-1:-1;;;;;;;1572:52:5;;-1:-1:-1;;;1572:52:5;1515:109;:161;;;-1:-1:-1;;;;;;;;;;862:40:23;;;1640:36:5;763:146:23;9023:445:5;-1:-1:-1;;;;;9216:16:5;;9212:88;;9255:34;;-1:-1:-1;;;9255:34:5;;9286:1;9255:34;;;6987:51:33;6960:18;;9255:34:5;6841:203:33;9212:88:5;-1:-1:-1;;;;;9313:18:5;;9309:88;;9354:32;;-1:-1:-1;;;9354:32:5;;9383:1;9354:32;;;6987:51:33;6960:18;;9354:32:5;6841:203:33;9309:88:5;9406:55;9433:4;9439:2;9443:3;9448:6;9456:4;9406:26;:55::i;:::-;9023:445;;;;;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:18;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:18;1901:40:0;;;6987:51:33;6960:18;;1901:40:0;6841:203:33;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;13276:315:5:-;-1:-1:-1;;;;;13383:22:5;;13379:94;;13428:34;;-1:-1:-1;;;13428:34:5;;13459:1;13428:34;;;6987:51:33;6960:18;;13428:34:5;6841:203:33;13379:94:5;-1:-1:-1;;;;;13482:25:5;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13482:46:5;;;;;;;;;;13543:41;;1159::33;;;13543::5;;1132:18:33;13543:41:5;;;;;;;13276:315;;;:::o;10754:346::-;-1:-1:-1;;;;;10850:16:5;;10846:88;;10889:34;;-1:-1:-1;;;10889:34:5;;10920:1;10889:34;;;6987:51:33;6960:18;;10889:34:5;6841:203:33;10846:88:5;13974:4;13968:11;;14044:1;14029:17;;;14175:4;14163:17;;14156:35;;;14292:17;;;14322;;;13815:23;14359:17;;14352:35;;;14495:17;;;14482:31;;;13968:11;11032:61;-1:-1:-1;11071:2:5;13968:11;14292:17;11088:4;11032:26;:61::i;8159:463::-;-1:-1:-1;;;;;8281:16:5;;8277:88;;8320:34;;-1:-1:-1;;;8320:34:5;;8351:1;8320:34;;;6987:51:33;6960:18;;8320:34:5;6841:203:33;8277:88:5;-1:-1:-1;;;;;8378:18:5;;8374:88;;8419:32;;-1:-1:-1;;;8419:32:5;;8448:1;8419:32;;;6987:51:33;6960:18;;8419:32:5;6841:203:33;8374:88:5;13974:4;13968:11;;14044:1;14029:17;;;14175:4;14163:17;;14156:35;;;14292:17;;;14322;;;13815:23;14359:17;;14352:35;;;14495:17;;;14482:31;;;13968:11;8560:55;8587:4;8593:2;13968:11;14292:17;8610:4;8560:26;:55::i;:::-;8267:355;;8159:463;;;;;:::o;7002:700::-;7203:30;7211:4;7217:2;7221:3;7226:6;7203:7;:30::i;:::-;-1:-1:-1;;;;;7247:16:5;;;7243:453;;7328:10;;735::18;;7342:1:5;7328:15;7324:362;;16302:4:16;16273:35;;;16267:42;16273:35;;;16267:42;7481:72:5;7517:8;7527:4;7533:2;16267:42:16;;7548:4:5;7481:35;:72::i;:::-;7345:223;;7324:362;;;7592:79;7633:8;7643:4;7649:2;7653:3;7658:6;7666:4;7592:40;:79::i;5142:1281::-;5277:6;:13;5263:3;:10;:27;5259:117;;5339:10;;5351:13;;5313:52;;-1:-1:-1;;;5313:52:5;;;;;10074:25:33;;;;10115:18;;;10108:34;10047:18;;5313:52:5;9900:248:33;5259:117:5;735:10:18;5386:16:5;5428:691;5452:3;:10;5448:1;:14;5428:691;;;16302:4:16;16293:14;;;16273:35;;;;;16267:42;16273:35;;;;;;16267:42;-1:-1:-1;;;;;5598:18:5;;;5594:420;;5636:19;5658:13;;;;;;;;;;;-1:-1:-1;;;;;5658:19:5;;;;;;;;;;5699;;;5695:129;;;5749:56;;-1:-1:-1;;;5749:56:5;;-1:-1:-1;;;;;11513:32:33;;5749:56:5;;;11495:51:33;11562:18;;;11555:34;;;11605:18;;;11598:34;;;11648:18;;;11641:34;;;11467:19;;5749:56:5;11264:417:33;5695:129:5;5940:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5940:19:5;;;;;;;;;5962;;;;5940:41;;5594:420;-1:-1:-1;;;;;6032:16:5;;;6028:81;;6068:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6068:17:5;;;;;;;;;:26;;6089:5;;6068:9;:26;;6089:5;;6068:26;:::i;:::-;;;;-1:-1:-1;;6028:81:5;5469:650;;5464:3;;;;:::i;:::-;;;5428:691;;;;6133:3;:10;6147:1;6133:15;6129:288;;16302:4:16;16273:35;;16267:42;6164:10:5;;16302:4:16;16273:35;;16267:42;6164:38:5;;-1:-1:-1;6310:2:5;-1:-1:-1;;;;;6279:45:5;6304:4;-1:-1:-1;;;;;6279:45:5;6294:8;-1:-1:-1;;;;;6279:45:5;;6314:2;6318:5;6279:45;;;;;;10074:25:33;;;10130:2;10115:18;;10108:34;10062:2;10047:18;;9900:248;6279:45:5;;;;;;;;6150:185;;6129:288;;;6390:2;-1:-1:-1;;;;;6360:46:5;6384:4;-1:-1:-1;;;;;6360:46:5;6374:8;-1:-1:-1;;;;;6360:46:5;;6394:3;6399:6;6360:46;;;;;;;:::i;:::-;;;;;;;;5249:1174;5142:1281;;;;:::o;998:959:9:-;-1:-1:-1;;;;;1197:14:9;;;:18;1193:758;;1235:71;;-1:-1:-1;;;1235:71:9;;-1:-1:-1;;;;;1235:38:9;;;;;:71;;1274:8;;1284:4;;1290:2;;1294:5;;1301:4;;1235:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1235:71:9;;;;;;;;-1:-1:-1;;1235:71:9;;;;;;;;;;;;:::i;:::-;;;1231:710;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1605:6;:13;1622:1;1605:18;1601:326;;1710:41;;-1:-1:-1;;;1710:41:9;;-1:-1:-1;;;;;7005:32:33;;1710:41:9;;;6987:51:33;6960:18;;1710:41:9;6841:203:33;1601:326:9;1879:6;1873:13;1864:6;1860:2;1856:15;1849:38;1231:710;-1:-1:-1;;;;;;1355:55:9;;-1:-1:-1;;;1355:55:9;1351:189;;1480:41;;-1:-1:-1;;;1480:41:9;;-1:-1:-1;;;;;7005:32:33;;1480:41:9;;;6987:51:33;6960:18;;1480:41:9;6841:203:33;2505:1026:9;-1:-1:-1;;;;;2729:14:9;;;:18;2725:800;;2767:78;;-1:-1:-1;;;2767:78:9;;-1:-1:-1;;;;;2767:43:9;;;;;:78;;2811:8;;2821:4;;2827:3;;2832:6;;2840:4;;2767:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2767:78:9;;;;;;;;-1:-1:-1;;2767:78:9;;;;;;;;;;;;:::i;:::-;;;2763:752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2924:60:9;;-1:-1:-1;;;2924:60:9;2920:194;;3054:41;;-1:-1:-1;;;3054:41:9;;-1:-1:-1;;;;;7005:32:33;;3054:41:9;;;6987:51:33;6960:18;;3054:41:9;6841:203:33;14:173;82:20;;-1:-1:-1;;;;;131:31:33;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:33:o;633:131::-;-1:-1:-1;;;;;;707:32:33;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:33:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:33;;1211:180;-1:-1:-1;1211:180:33:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2234:127::-;2295:10;2290:3;2286:20;2283:1;2276:31;2326:4;2323:1;2316:15;2350:4;2347:1;2340:15;2366:275;2437:2;2431:9;2502:2;2483:13;;-1:-1:-1;;2479:27:33;2467:40;;2537:18;2522:34;;2558:22;;;2519:62;2516:88;;;2584:18;;:::i;:::-;2620:2;2613:22;2366:275;;-1:-1:-1;2366:275:33:o;2646:183::-;2706:4;2739:18;2731:6;2728:30;2725:56;;;2761:18;;:::i;:::-;-1:-1:-1;2806:1:33;2802:14;2818:4;2798:25;;2646:183::o;2834:662::-;2888:5;2941:3;2934:4;2926:6;2922:17;2918:27;2908:55;;2959:1;2956;2949:12;2908:55;2995:6;2982:20;3021:4;3045:60;3061:43;3101:2;3061:43;:::i;:::-;3045:60;:::i;:::-;3139:15;;;3225:1;3221:10;;;;3209:23;;3205:32;;;3170:12;;;;3249:15;;;3246:35;;;3277:1;3274;3267:12;3246:35;3313:2;3305:6;3301:15;3325:142;3341:6;3336:3;3333:15;3325:142;;;3407:17;;3395:30;;3445:12;;;;3358;;3325:142;;;-1:-1:-1;3485:5:33;2834:662;-1:-1:-1;;;;;;2834:662:33:o;3501:530::-;3543:5;3596:3;3589:4;3581:6;3577:17;3573:27;3563:55;;3614:1;3611;3604:12;3563:55;3650:6;3637:20;3676:18;3672:2;3669:26;3666:52;;;3698:18;;:::i;:::-;3742:55;3785:2;3766:13;;-1:-1:-1;;3762:27:33;3791:4;3758:38;3742:55;:::i;:::-;3822:2;3813:7;3806:19;3868:3;3861:4;3856:2;3848:6;3844:15;3840:26;3837:35;3834:55;;;3885:1;3882;3875:12;3834:55;3950:2;3943:4;3935:6;3931:17;3924:4;3915:7;3911:18;3898:55;3998:1;3973:16;;;3991:4;3969:27;3962:38;;;;3977:7;3501:530;-1:-1:-1;;;3501:530:33:o;4036:943::-;4190:6;4198;4206;4214;4222;4275:3;4263:9;4254:7;4250:23;4246:33;4243:53;;;4292:1;4289;4282:12;4243:53;4315:29;4334:9;4315:29;:::i;:::-;4305:39;;4363:38;4397:2;4386:9;4382:18;4363:38;:::i;:::-;4353:48;;4452:2;4441:9;4437:18;4424:32;4475:18;4516:2;4508:6;4505:14;4502:34;;;4532:1;4529;4522:12;4502:34;4555:61;4608:7;4599:6;4588:9;4584:22;4555:61;:::i;:::-;4545:71;;4669:2;4658:9;4654:18;4641:32;4625:48;;4698:2;4688:8;4685:16;4682:36;;;4714:1;4711;4704:12;4682:36;4737:63;4792:7;4781:8;4770:9;4766:24;4737:63;:::i;:::-;4727:73;;4853:3;4842:9;4838:19;4825:33;4809:49;;4883:2;4873:8;4870:16;4867:36;;;4899:1;4896;4889:12;4867:36;;4922:51;4965:7;4954:8;4943:9;4939:24;4922:51;:::i;:::-;4912:61;;;4036:943;;;;;;;;:::o;4984:1146::-;5102:6;5110;5163:2;5151:9;5142:7;5138:23;5134:32;5131:52;;;5179:1;5176;5169:12;5131:52;5219:9;5206:23;5248:18;5289:2;5281:6;5278:14;5275:34;;;5305:1;5302;5295:12;5275:34;5343:6;5332:9;5328:22;5318:32;;5388:7;5381:4;5377:2;5373:13;5369:27;5359:55;;5410:1;5407;5400:12;5359:55;5446:2;5433:16;5468:4;5492:60;5508:43;5548:2;5508:43;:::i;5492:60::-;5586:15;;;5668:1;5664:10;;;;5656:19;;5652:28;;;5617:12;;;;5692:19;;;5689:39;;;5724:1;5721;5714:12;5689:39;5748:11;;;;5768:148;5784:6;5779:3;5776:15;5768:148;;;5850:23;5869:3;5850:23;:::i;:::-;5838:36;;5801:12;;;;5894;;;;5768:148;;;5935:5;-1:-1:-1;;5978:18:33;;5965:32;;-1:-1:-1;;6009:16:33;;;6006:36;;;6038:1;6035;6028:12;6006:36;;6061:63;6116:7;6105:8;6094:9;6090:24;6061:63;:::i;:::-;6051:73;;;4984:1146;;;;;:::o;6135:435::-;6188:3;6226:5;6220:12;6253:6;6248:3;6241:19;6279:4;6308:2;6303:3;6299:12;6292:19;;6345:2;6338:5;6334:14;6366:1;6376:169;6390:6;6387:1;6384:13;6376:169;;;6451:13;;6439:26;;6485:12;;;;6520:15;;;;6412:1;6405:9;6376:169;;;-1:-1:-1;6561:3:33;;6135:435;-1:-1:-1;;;;;6135:435:33:o;6575:261::-;6754:2;6743:9;6736:21;6717:4;6774:56;6826:2;6815:9;6811:18;6803:6;6774:56;:::i;7049:186::-;7108:6;7161:2;7149:9;7140:7;7136:23;7132:32;7129:52;;;7177:1;7174;7167:12;7129:52;7200:29;7219:9;7200:29;:::i;7240:347::-;7305:6;7313;7366:2;7354:9;7345:7;7341:23;7337:32;7334:52;;;7382:1;7379;7372:12;7334:52;7405:29;7424:9;7405:29;:::i;:::-;7395:39;;7484:2;7473:9;7469:18;7456:32;7531:5;7524:13;7517:21;7510:5;7507:32;7497:60;;7553:1;7550;7543:12;7497:60;7576:5;7566:15;;;7240:347;;;;;:::o;7592:733::-;7680:6;7688;7696;7704;7757:2;7745:9;7736:7;7732:23;7728:32;7725:52;;;7773:1;7770;7763:12;7725:52;7796:29;7815:9;7796:29;:::i;:::-;7786:39;;7872:2;7861:9;7857:18;7844:32;7834:42;;7927:2;7916:9;7912:18;7899:32;7950:18;7991:2;7983:6;7980:14;7977:34;;;8007:1;8004;7997:12;7977:34;8045:6;8034:9;8030:22;8020:32;;8090:7;8083:4;8079:2;8075:13;8071:27;8061:55;;8112:1;8109;8102:12;8061:55;8152:2;8139:16;8178:2;8170:6;8167:14;8164:34;;;8194:1;8191;8184:12;8164:34;8239:7;8234:2;8225:6;8221:2;8217:15;8213:24;8210:37;8207:57;;;8260:1;8257;8250:12;8207:57;7592:733;;;;-1:-1:-1;;8291:2:33;8283:11;;-1:-1:-1;;;7592:733:33:o;8330:260::-;8398:6;8406;8459:2;8447:9;8438:7;8434:23;8430:32;8427:52;;;8475:1;8472;8465:12;8427:52;8498:29;8517:9;8498:29;:::i;:::-;8488:39;;8546:38;8580:2;8569:9;8565:18;8546:38;:::i;:::-;8536:48;;8330:260;;;;;:::o;8595:606::-;8699:6;8707;8715;8723;8731;8784:3;8772:9;8763:7;8759:23;8755:33;8752:53;;;8801:1;8798;8791:12;8752:53;8824:29;8843:9;8824:29;:::i;:::-;8814:39;;8872:38;8906:2;8895:9;8891:18;8872:38;:::i;:::-;8862:48;;8957:2;8946:9;8942:18;8929:32;8919:42;;9008:2;8997:9;8993:18;8980:32;8970:42;;9063:3;9052:9;9048:19;9035:33;9091:18;9083:6;9080:30;9077:50;;;9123:1;9120;9113:12;9077:50;9146:49;9187:7;9178:6;9167:9;9163:22;9146:49;:::i;9206:380::-;9285:1;9281:12;;;;9328;;;9349:61;;9403:4;9395:6;9391:17;9381:27;;9349:61;9456:2;9448:6;9445:14;9425:18;9422:38;9419:161;;9502:10;9497:3;9493:20;9490:1;9483:31;9537:4;9534:1;9527:15;9565:4;9562:1;9555:15;9419:161;;9206:380;;;:::o;10153:127::-;10214:10;10209:3;10205:20;10202:1;10195:31;10245:4;10242:1;10235:15;10269:4;10266:1;10259:15;10285:127;10346:10;10341:3;10337:20;10334:1;10327:31;10377:4;10374:1;10367:15;10401:4;10398:1;10391:15;10417:135;10456:3;10477:17;;;10474:43;;10497:18;;:::i;:::-;-1:-1:-1;10544:1:33;10533:13;;10417:135::o;11686:125::-;11751:9;;;11772:10;;;11769:36;;;11785:18;;:::i;11816:465::-;12073:2;12062:9;12055:21;12036:4;12099:56;12151:2;12140:9;12136:18;12128:6;12099:56;:::i;:::-;12203:9;12195:6;12191:22;12186:2;12175:9;12171:18;12164:50;12231:44;12268:6;12260;12231:44;:::i;12286:561::-;-1:-1:-1;;;;;12583:15:33;;;12565:34;;12635:15;;12630:2;12615:18;;12608:43;12682:2;12667:18;;12660:34;;;12725:2;12710:18;;12703:34;;;12545:3;12768;12753:19;;12746:32;;;12508:4;;12795:46;;12821:19;;12813:6;12795:46;:::i;:::-;12787:54;12286:561;-1:-1:-1;;;;;;;12286:561:33:o;12852:249::-;12921:6;12974:2;12962:9;12953:7;12949:23;12945:32;12942:52;;;12990:1;12987;12980:12;12942:52;13022:9;13016:16;13041:30;13065:5;13041:30;:::i;13106:827::-;-1:-1:-1;;;;;13503:15:33;;;13485:34;;13555:15;;13550:2;13535:18;;13528:43;13465:3;13602:2;13587:18;;13580:31;;;13428:4;;13634:57;;13671:19;;13663:6;13634:57;:::i;:::-;13739:9;13731:6;13727:22;13722:2;13711:9;13707:18;13700:50;13773:44;13810:6;13802;13773:44;:::i;:::-;13759:58;;13866:9;13858:6;13854:22;13848:3;13837:9;13833:19;13826:51;13894:33;13920:6;13912;13894:33;:::i;:::-;13886:41;13106:827;-1:-1:-1;;;;;;;;13106:827:33:o"},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","hashMinted(bytes32)":"f79ec5c3","hashpinContract()":"e9427cbb","isApprovedForAll(address,address)":"e985e9c5","isHashMinted(bytes32)":"129b3e27","mint(address,bytes32,bytes)":"b6483bab","owner()":"8da5cb5b","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setHashpinContract(address)":"8faa9edf","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hashMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hashpinContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isHashMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hashpinContract\",\"type\":\"address\"}],\"name\":\"setHashpinContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Adapter for minting ERC-1155 tokens for claimed hashes\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"Constructor\",\"params\":{\"uri_\":\"The base URI for token metadata\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"isHashMinted(bytes32)\":{\"details\":\"Check if a hash has been minted\",\"params\":{\"hash\":\"The hash to check\"},\"returns\":{\"_0\":\"bool True if the hash has been minted\"}},\"mint(address,bytes32,bytes)\":{\"details\":\"Mints an ERC-1155 token representing the claimed hash\",\"params\":{\"hash\":\"The hash being claimed\",\"metadata\":\"Additional metadata for the token (ignored for ERC-1155)\",\"to\":\"The address that will receive the token\"},\"returns\":{\"_0\":\"tokenId The ID of the newly minted token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"setHashpinContract(address)\":{\"details\":\"Sets the Hashpin contract address\",\"params\":{\"_hashpinContract\":\"The address of the Hashpin contract\"}},\"supportsInterface(bytes4)\":{\"details\":\"Checks if the contract supports a given interface\",\"params\":{\"interfaceId\":\"The interface identifier\"},\"returns\":{\"_0\":\"bool True if the contract supports the interface\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"title\":\"ERC1155HashpinAdapter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/adapters/ERC1155HashpinAdapter.sol\":\"ERC1155HashpinAdapter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/adapters/ERC1155HashpinAdapter.sol\":{\"keccak256\":\"0xa3193a9e211f6fead94be10999700a1df04b51f658b1bb7ec14f234647191e66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d27045455e7364ebaee0ce01accf7fe51804f3721ecd66aea86e437ae459a88\",\"dweb:/ipfs/QmXbB6aJcKSnH9wQZmRAiHgA3zrAW5MNGY5EJk9ff3rhRo\"]},\"contracts/interfaces/IHashpinNFT.sol\":{\"keccak256\":\"0x93ecf9a21afeb5ee8cc693d23f039f13742f08cca10dc6479b40462b085dd00e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://755faef1206621c8bf95f7b87518d977b8eff42bdcb2ab7c1891b0461df03e6b\",\"dweb:/ipfs/QmXj54Jgbsz3GR618a9WWpUpuXA2sTSWYSM4SiWMsdKVzi\"]}},\"version\":1}"}},"contracts/adapters/ERC721HashpinAdapter.sol":{"ERC721HashpinAdapter":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getHashByTokenId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"hashMinted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"hashToTokenID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"hashpinContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"isHashMinted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"metadata","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_hashpinContract","type":"address"}],"name":"setHashpinContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenIDToHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1638":{"entryPoint":null,"id":1638,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9544":{"entryPoint":null,"id":9544,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":154,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":258,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":433,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":599,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":682,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":539,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":236,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4352:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:33"},"nodeType":"YulFunctionCall","src":"66:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:33"},"nodeType":"YulFunctionCall","src":"56:31:33"},"nodeType":"YulExpressionStatement","src":"56:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:33"},"nodeType":"YulFunctionCall","src":"96:15:33"},"nodeType":"YulExpressionStatement","src":"96:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:33"},"nodeType":"YulFunctionCall","src":"120:15:33"},"nodeType":"YulExpressionStatement","src":"120:15:33"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:33"},{"body":{"nodeType":"YulBlock","src":"210:776:33","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:33"},"nodeType":"YulFunctionCall","src":"261:12:33"},"nodeType":"YulExpressionStatement","src":"261:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:33"},"nodeType":"YulFunctionCall","src":"234:17:33"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:33"},"nodeType":"YulFunctionCall","src":"230:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:33"},"nodeType":"YulFunctionCall","src":"223:35:33"},"nodeType":"YulIf","src":"220:55:33"},{"nodeType":"YulVariableDeclaration","src":"284:23:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:33"},"nodeType":"YulFunctionCall","src":"294:13:33"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:33","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:33","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:33"},"nodeType":"YulFunctionCall","src":"330:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:33"},"nodeType":"YulFunctionCall","src":"326:18:33"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:33"},"nodeType":"YulFunctionCall","src":"369:18:33"},"nodeType":"YulExpressionStatement","src":"369:18:33"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:33"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:33"},"nodeType":"YulFunctionCall","src":"356:10:33"},"nodeType":"YulIf","src":"353:36:33"},{"nodeType":"YulVariableDeclaration","src":"398:17:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:33"},"nodeType":"YulFunctionCall","src":"408:7:33"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:33"},"nodeType":"YulFunctionCall","src":"438:9:33"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:33","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:33"},"nodeType":"YulFunctionCall","src":"498:13:33"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:33"},"nodeType":"YulFunctionCall","src":"494:22:33"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:33","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:33"},"nodeType":"YulFunctionCall","src":"490:31:33"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:33"},"nodeType":"YulFunctionCall","src":"486:40:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:33"},"nodeType":"YulFunctionCall","src":"474:53:33"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:33"},"nodeType":"YulFunctionCall","src":"588:18:33"},"nodeType":"YulExpressionStatement","src":"588:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:33"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:33"},"nodeType":"YulFunctionCall","src":"542:18:33"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:33"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:33"},"nodeType":"YulFunctionCall","src":"562:22:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:33"},"nodeType":"YulFunctionCall","src":"539:46:33"},"nodeType":"YulIf","src":"536:72:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:33","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:33"},"nodeType":"YulFunctionCall","src":"617:22:33"},"nodeType":"YulExpressionStatement","src":"617:22:33"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:33"},"nodeType":"YulFunctionCall","src":"648:18:33"},"nodeType":"YulExpressionStatement","src":"648:18:33"},{"nodeType":"YulVariableDeclaration","src":"675:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:33","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:33"},"nodeType":"YulFunctionCall","src":"737:12:33"},"nodeType":"YulExpressionStatement","src":"737:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:33"},"nodeType":"YulFunctionCall","src":"708:15:33"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:33"},"nodeType":"YulFunctionCall","src":"704:24:33"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:33"},"nodeType":"YulFunctionCall","src":"701:33:33"},"nodeType":"YulIf","src":"698:53:33"},{"nodeType":"YulVariableDeclaration","src":"760:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:33","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:33"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:33"},"nodeType":"YulFunctionCall","src":"850:14:33"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:33"},"nodeType":"YulFunctionCall","src":"846:23:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:33"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:33"},"nodeType":"YulFunctionCall","src":"881:14:33"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:33"},"nodeType":"YulFunctionCall","src":"877:23:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:33"},"nodeType":"YulFunctionCall","src":"871:30:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:33"},"nodeType":"YulFunctionCall","src":"839:63:33"},"nodeType":"YulExpressionStatement","src":"839:63:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:33"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:33"},"nodeType":"YulFunctionCall","src":"787:9:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:33","statements":[{"nodeType":"YulAssignment","src":"799:15:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:33"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:33"},"nodeType":"YulFunctionCall","src":"804:10:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:33","statements":[]},"src":"779:133:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:33"},"nodeType":"YulFunctionCall","src":"932:15:33"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:33"},"nodeType":"YulFunctionCall","src":"928:24:33"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:33"},"nodeType":"YulFunctionCall","src":"921:35:33"},"nodeType":"YulExpressionStatement","src":"921:35:33"},{"nodeType":"YulAssignment","src":"965:15:33","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:33"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:33"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:33","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:33","type":""}],"src":"146:840:33"},{"body":{"nodeType":"YulBlock","src":"1109:444:33","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:33"},"nodeType":"YulFunctionCall","src":"1157:12:33"},"nodeType":"YulExpressionStatement","src":"1157:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:33"},"nodeType":"YulFunctionCall","src":"1126:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:33"},"nodeType":"YulFunctionCall","src":"1122:32:33"},"nodeType":"YulIf","src":"1119:52:33"},{"nodeType":"YulVariableDeclaration","src":"1180:30:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:33"},"nodeType":"YulFunctionCall","src":"1194:16:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:33","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:33","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:33"},"nodeType":"YulFunctionCall","src":"1233:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:33"},"nodeType":"YulFunctionCall","src":"1229:18:33"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:33"},"nodeType":"YulFunctionCall","src":"1276:12:33"},"nodeType":"YulExpressionStatement","src":"1276:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:33"},"nodeType":"YulFunctionCall","src":"1259:14:33"},"nodeType":"YulIf","src":"1256:34:33"},{"nodeType":"YulAssignment","src":"1299:71:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:33"},"nodeType":"YulFunctionCall","src":"1338:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:33"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:33"},"nodeType":"YulFunctionCall","src":"1309:61:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:33"},"nodeType":"YulFunctionCall","src":"1401:18:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:33"},"nodeType":"YulFunctionCall","src":"1395:25:33"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:33"},"nodeType":"YulFunctionCall","src":"1451:12:33"},"nodeType":"YulExpressionStatement","src":"1451:12:33"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:33"},"nodeType":"YulFunctionCall","src":"1432:16:33"},"nodeType":"YulIf","src":"1429:36:33"},{"nodeType":"YulAssignment","src":"1474:73:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:33"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:33"},"nodeType":"YulFunctionCall","src":"1513:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:33"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:33"},"nodeType":"YulFunctionCall","src":"1484:63:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:33"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:33","type":""}],"src":"991:562:33"},{"body":{"nodeType":"YulBlock","src":"1613:325:33","statements":[{"nodeType":"YulAssignment","src":"1623:22:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:33","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:33"},"nodeType":"YulFunctionCall","src":"1633:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:33","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:33"},"nodeType":"YulFunctionCall","src":"1680:12:33"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:33","statements":[{"nodeType":"YulAssignment","src":"1733:27:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:33"},"nodeType":"YulFunctionCall","src":"1743:17:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:33"},"nodeType":"YulFunctionCall","src":"1704:26:33"},"nodeType":"YulIf","src":"1701:61:33"},{"body":{"nodeType":"YulBlock","src":"1821:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:33"},"nodeType":"YulFunctionCall","src":"1845:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:33"},"nodeType":"YulFunctionCall","src":"1835:31:33"},"nodeType":"YulExpressionStatement","src":"1835:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:33"},"nodeType":"YulFunctionCall","src":"1879:15:33"},"nodeType":"YulExpressionStatement","src":"1879:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:33"},"nodeType":"YulFunctionCall","src":"1907:15:33"},"nodeType":"YulExpressionStatement","src":"1907:15:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:33"},"nodeType":"YulFunctionCall","src":"1797:14:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:33"},"nodeType":"YulFunctionCall","src":"1774:38:33"},"nodeType":"YulIf","src":"1771:161:33"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:33","type":""}],"src":"1558:380:33"},{"body":{"nodeType":"YulBlock","src":"1999:65:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:33","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:33"},"nodeType":"YulFunctionCall","src":"2009:14:33"},"nodeType":"YulExpressionStatement","src":"2009:14:33"},{"nodeType":"YulAssignment","src":"2032:26:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:33"},"nodeType":"YulFunctionCall","src":"2040:18:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:33"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:33","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:33","type":""}],"src":"1943:121:33"},{"body":{"nodeType":"YulBlock","src":"2150:464:33","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:33","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:33","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:33","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:33","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:33"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:33"},"nodeType":"YulFunctionCall","src":"2221:17:33"},"nodeType":"YulExpressionStatement","src":"2221:17:33"},{"nodeType":"YulVariableDeclaration","src":"2251:31:33","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:33"},"nodeType":"YulFunctionCall","src":"2263:19:33"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:33","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:33"},"nodeType":"YulFunctionCall","src":"2331:19:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:33"},"nodeType":"YulFunctionCall","src":"2324:27:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:33"},"nodeType":"YulFunctionCall","src":"2314:38:33"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:33","statements":[{"nodeType":"YulAssignment","src":"2391:19:33","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:33"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:33"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:33","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:33"},"nodeType":"YulFunctionCall","src":"2368:20:33"},"nodeType":"YulIf","src":"2365:47:33"},{"nodeType":"YulVariableDeclaration","src":"2425:41:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:33","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:33"},"nodeType":"YulFunctionCall","src":"2452:12:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:33"},"nodeType":"YulFunctionCall","src":"2445:20:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:33"},"nodeType":"YulFunctionCall","src":"2435:31:33"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:33","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:33"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:33","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:33"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:33"},"nodeType":"YulFunctionCall","src":"2579:17:33"},"nodeType":"YulExpressionStatement","src":"2579:17:33"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:33"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:33"},"nodeType":"YulFunctionCall","src":"2524:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:33","statements":[{"nodeType":"YulAssignment","src":"2540:22:33","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:33"},"nodeType":"YulFunctionCall","src":"2549:13:33"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:33"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:33","statements":[]},"src":"2516:82:33"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:33"},"nodeType":"YulFunctionCall","src":"2163:11:33"},"nodeType":"YulIf","src":"2160:448:33"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:33","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:33","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:33","type":""}],"src":"2069:545:33"},{"body":{"nodeType":"YulBlock","src":"2704:81:33","statements":[{"nodeType":"YulAssignment","src":"2714:65:33","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:33"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:33","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:33"},"nodeType":"YulFunctionCall","src":"2743:11:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:33"},"nodeType":"YulFunctionCall","src":"2756:6:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:33"},"nodeType":"YulFunctionCall","src":"2739:24:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:33"},"nodeType":"YulFunctionCall","src":"2735:29:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:33"},"nodeType":"YulFunctionCall","src":"2725:40:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:33","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:33"},"nodeType":"YulFunctionCall","src":"2767:11:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:33"},"nodeType":"YulFunctionCall","src":"2722:57:33"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:33"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:33","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:33","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:33","type":""}],"src":"2619:166:33"},{"body":{"nodeType":"YulBlock","src":"2886:1256:33","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:33"},"nodeType":"YulFunctionCall","src":"2910:10:33"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:33"},"nodeType":"YulFunctionCall","src":"2965:18:33"},"nodeType":"YulExpressionStatement","src":"2965:18:33"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:33","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:33"},"nodeType":"YulFunctionCall","src":"2947:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:33"},"nodeType":"YulFunctionCall","src":"2943:18:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:33"},"nodeType":"YulFunctionCall","src":"2932:30:33"},"nodeType":"YulIf","src":"2929:56:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:33"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:33"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:33"},"nodeType":"YulFunctionCall","src":"3070:11:33"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:33"},"nodeType":"YulFunctionCall","src":"3044:38:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:33"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:33"},"nodeType":"YulFunctionCall","src":"2994:97:33"},"nodeType":"YulExpressionStatement","src":"2994:97:33"},{"nodeType":"YulVariableDeclaration","src":"3100:18:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:33","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:33","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:33","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:33","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:33"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:33"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:33","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:33"},"nodeType":"YulFunctionCall","src":"3270:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:33"},"nodeType":"YulFunctionCall","src":"3258:20:33"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:33","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:33"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:33"},"nodeType":"YulFunctionCall","src":"3305:35:33"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:33","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:33"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:33"},"nodeType":"YulFunctionCall","src":"3479:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:33"},"nodeType":"YulFunctionCall","src":"3473:26:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:33"},"nodeType":"YulFunctionCall","src":"3458:42:33"},"nodeType":"YulExpressionStatement","src":"3458:42:33"},{"nodeType":"YulAssignment","src":"3517:24:33","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:33"},"nodeType":"YulFunctionCall","src":"3527:14:33"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:33"}]},{"nodeType":"YulAssignment","src":"3558:40:33","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:33"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:33"},"nodeType":"YulFunctionCall","src":"3571:27:33"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:33"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:33"},"nodeType":"YulFunctionCall","src":"3384:14:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:33","statements":[{"nodeType":"YulAssignment","src":"3401:24:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:33"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:33"},"nodeType":"YulFunctionCall","src":"3406:19:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:33","statements":[]},"src":"3376:236:33"},{"body":{"nodeType":"YulBlock","src":"3660:166:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:33","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:33"},"nodeType":"YulFunctionCall","src":"3701:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:33"},"nodeType":"YulFunctionCall","src":"3695:26:33"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:33","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:33"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:33","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:33"},"nodeType":"YulFunctionCall","src":"3780:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:33","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:33"},"nodeType":"YulFunctionCall","src":"3776:24:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:33"},"nodeType":"YulFunctionCall","src":"3802:6:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:33"},"nodeType":"YulFunctionCall","src":"3772:37:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:33"},"nodeType":"YulFunctionCall","src":"3768:42:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:33"},"nodeType":"YulFunctionCall","src":"3753:58:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:33"},"nodeType":"YulFunctionCall","src":"3738:74:33"},"nodeType":"YulExpressionStatement","src":"3738:74:33"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:33"},"nodeType":"YulFunctionCall","src":"3628:19:33"},"nodeType":"YulIf","src":"3625:201:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:33","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:33"},"nodeType":"YulFunctionCall","src":"3856:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:33"},"nodeType":"YulFunctionCall","src":"3852:22:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:33"},"nodeType":"YulFunctionCall","src":"3839:36:33"},"nodeType":"YulExpressionStatement","src":"3839:36:33"}]},"nodeType":"YulCase","src":"3222:663:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:33","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:33","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:33","statements":[{"nodeType":"YulAssignment","src":"3983:35:33","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:33"},"nodeType":"YulFunctionCall","src":"3998:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:33"},"nodeType":"YulFunctionCall","src":"3992:26:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:33"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:33"},"nodeType":"YulIf","src":"3943:89:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:33"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:33"},"nodeType":"YulFunctionCall","src":"4058:67:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:33"},"nodeType":"YulFunctionCall","src":"4045:81:33"},"nodeType":"YulExpressionStatement","src":"4045:81:33"}]},"nodeType":"YulCase","src":"3894:242:33","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:33"},"nodeType":"YulFunctionCall","src":"3199:14:33"},"nodeType":"YulSwitch","src":"3192:944:33"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:33","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:33","type":""}],"src":"2790:1352:33"},{"body":{"nodeType":"YulBlock","src":"4248:102:33","statements":[{"nodeType":"YulAssignment","src":"4258:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4270:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4281:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4266:3:33"},"nodeType":"YulFunctionCall","src":"4266:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4258:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4300:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4315:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4331:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4336:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4327:3:33"},"nodeType":"YulFunctionCall","src":"4327:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"4340:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4323:3:33"},"nodeType":"YulFunctionCall","src":"4323:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4311:3:33"},"nodeType":"YulFunctionCall","src":"4311:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4293:6:33"},"nodeType":"YulFunctionCall","src":"4293:51:33"},"nodeType":"YulExpressionStatement","src":"4293:51:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4217:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4228:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4239:4:33","type":""}],"src":"4147:203:33"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001a6138038062001a618339810160408190526200003491620001b1565b3382826000620000458382620002aa565b506001620000548282620002aa565b5050506001600160a01b0381166200008657604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000091816200009a565b50505062000376565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011457600080fd5b81516001600160401b0380821115620001315762000131620000ec565b604051601f8301601f19908116603f011681019082821181831017156200015c576200015c620000ec565b816040528381526020925086838588010111156200017957600080fd5b600091505b838210156200019d57858201830151818301840152908201906200017e565b600093810190920192909252949350505050565b60008060408385031215620001c557600080fd5b82516001600160401b0380821115620001dd57600080fd5b620001eb8683870162000102565b935060208501519150808211156200020257600080fd5b50620002118582860162000102565b9150509250929050565b600181811c908216806200023057607f821691505b6020821081036200025157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002a557600081815260208120601f850160051c81016020861015620002805750805b601f850160051c820191505b81811015620002a1578281556001016200028c565b5050505b505050565b81516001600160401b03811115620002c657620002c6620000ec565b620002de81620002d784546200021b565b8462000257565b602080601f831160018114620003165760008415620002fd5750858301515b600019600386901b1c1916600185901b178555620002a1565b600085815260208120601f198616915b82811015620003475788860151825594840194600190910190840162000326565b5085821015620003665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6116db80620003866000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063b88d4fde1161007c578063b88d4fde146102d5578063c87b56dd146102e8578063e9427cbb146102fb578063e985e9c51461030e578063f2fde38b14610321578063f79ec5c31461033457600080fd5b80638da5cb5b146102705780638faa9edf146102815780639456f7e91461029457806395d89b41146102a7578063a22cb465146102af578063b6483bab146102c257600080fd5b806342842e0e1161011557806342842e0e1461021057806359383991146102235780636352211e1461024257806370a0823114610255578063715018a614610268578063808132881461022357600080fd5b806301ffc9a71461015d57806306fdde0314610185578063081812fc1461019a578063095ea7b3146101c5578063129b3e27146101da57806323b872dd146101fd575b600080fd5b61017061016b3660046111be565b610357565b60405190151581526020015b60405180910390f35b61018d610382565b60405161017c919061122b565b6101ad6101a836600461123e565b610414565b6040516001600160a01b03909116815260200161017c565b6101d86101d3366004611273565b61043d565b005b6101706101e836600461123e565b60009081526008602052604090205460ff1690565b6101d861020b36600461129d565b61044c565b6101d861021e36600461129d565b6104dc565b61023461023136600461123e565b90565b60405190815260200161017c565b6101ad61025036600461123e565b6104fc565b6102346102633660046112d9565b610507565b6101d861054f565b6007546001600160a01b03166101ad565b6101d861028f3660046112d9565b610563565b6102346102a236600461123e565b61058d565b61018d610643565b6101d86102bd3660046112f4565b610652565b6102346102d0366004611330565b61065d565b6101d86102e33660046113cd565b610782565b61018d6102f636600461123e565b61079a565b6009546101ad906001600160a01b031681565b61017061031c3660046114a9565b6108ab565b6101d861032f3660046112d9565b6108d9565b61017061034236600461123e565b60086020526000908152604090205460ff1681565b60006001600160e01b03198216632dedfc8360e21b148061037c575061037c82610917565b92915050565b606060008054610391906114dc565b80601f01602080910402602001604051908101604052809291908181526020018280546103bd906114dc565b801561040a5780601f106103df5761010080835404028352916020019161040a565b820191906000526020600020905b8154815290600101906020018083116103ed57829003601f168201915b5050505050905090565b600061041f8261093c565b506000828152600460205260409020546001600160a01b031661037c565b610448828233610975565b5050565b6001600160a01b03821661047b57604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610488838333610982565b9050836001600160a01b0316816001600160a01b0316146104d6576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610472565b50505050565b6104f783838360405180602001604052806000815250610782565b505050565b600061037c8261093c565b60006001600160a01b038216610533576040516322718ad960e21b815260006004820152602401610472565b506001600160a01b031660009081526003602052604090205490565b610557610a7b565b6105616000610aa8565b565b61056b610a7b565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60008181526002602052604081205482906001600160a01b03166105f35760405162461bcd60e51b815260206004820152601760248201527f546f6b656e20494420646f6573206e6f742065786973740000000000000000006044820152606401610472565b60008181526008602052604090205460ff1661037c5760405162461bcd60e51b815260206004820152600f60248201526e12185cda081b9bdd081b5a5b9d1959608a1b6044820152606401610472565b606060018054610391906114dc565b610448338383610afa565b6009546000906001600160a01b031633146106ba5760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c79204861736870696e20636f6e74726163742063616e206d696e7400006044820152606401610472565b60008481526008602052604090205460ff161561070f5760405162461bcd60e51b815260206004820152601360248201527212185cda08185b1c9958591e481b5a5b9d1959606a1b6044820152606401610472565b6000848152600860205260409020805460ff19166001179055836107338682610b99565b8215610779576107798185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bb392505050565b95945050505050565b61078d84848461044c565b6104d63385858585610c03565b60606107a58261093c565b50600082815260066020526040812080546107bf906114dc565b80601f01602080910402602001604051908101604052809291908181526020018280546107eb906114dc565b80156108385780601f1061080d57610100808354040283529160200191610838565b820191906000526020600020905b81548152906001019060200180831161081b57829003601f168201915b50505050509050600061085660408051602081019091526000815290565b90508051600003610868575092915050565b81511561089a578082604051602001610882929190611516565b60405160208183030381529060405292505050919050565b6108a384610d2e565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6108e1610a7b565b6001600160a01b03811661090b57604051631e4fbdf760e01b815260006004820152602401610472565b61091481610aa8565b50565b60006001600160e01b03198216632483248360e11b148061037c575061037c82610da3565b6000818152600260205260408120546001600160a01b03168061037c57604051637e27328960e01b815260048101849052602401610472565b6104f78383836001610df3565b6000828152600260205260408120546001600160a01b03908116908316156109af576109af818486610ef9565b6001600160a01b038116156109ed576109cc600085600080610df3565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610a1c576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6007546001600160a01b031633146105615760405163118cdaa760e01b8152336004820152602401610472565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610b2c57604051630b61174360e31b81526001600160a01b0383166004820152602401610472565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610448828260405180602001604052806000815250610f5d565b6000828152600660205260409020610bcb828261158b565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6001600160a01b0383163b15610d2757604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610c4590889088908790879060040161164b565b6020604051808303816000875af1925050508015610c80575060408051601f3d908101601f19168201909252610c7d91810190611688565b60015b610ce9573d808015610cae576040519150601f19603f3d011682016040523d82523d6000602084013e610cb3565b606091505b508051600003610ce157604051633250574960e11b81526001600160a01b0385166004820152602401610472565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610d2557604051633250574960e11b81526001600160a01b0385166004820152602401610472565b505b5050505050565b6060610d398261093c565b506000610d5160408051602081019091526000815290565b90506000815111610d715760405180602001604052806000815250610d9c565b80610d7b84610f75565b604051602001610d8c929190611516565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b1480610dd457506001600160e01b03198216635b5e139f60e01b145b8061037c57506301ffc9a760e01b6001600160e01b031983161461037c565b8080610e0757506001600160a01b03821615155b15610ec9576000610e178461093c565b90506001600160a01b03831615801590610e435750826001600160a01b0316816001600160a01b031614155b8015610e565750610e5481846108ab565b155b15610e7f5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610472565b8115610ec75783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610f04838383611008565b6104f7576001600160a01b038316610f3257604051637e27328960e01b815260048101829052602401610472565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610472565b610f67838361106b565b6104f7336000858585610c03565b60606000610f82836110d0565b600101905060008167ffffffffffffffff811115610fa257610fa26113b7565b6040519080825280601f01601f191660200182016040528015610fcc576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610fd657509392505050565b60006001600160a01b038316158015906108a35750826001600160a01b0316846001600160a01b03161480611042575061104284846108ab565b806108a35750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160a01b03821661109557604051633250574960e11b815260006004820152602401610472565b60006110a383836000610982565b90506001600160a01b038116156104f7576040516339e3563760e11b815260006004820152602401610472565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061110f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061113b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061115957662386f26fc10000830492506010015b6305f5e1008310611171576305f5e100830492506008015b612710831061118557612710830492506004015b60648310611197576064830492506002015b600a831061037c5760010192915050565b6001600160e01b03198116811461091457600080fd5b6000602082840312156111d057600080fd5b8135610d9c816111a8565b60005b838110156111f65781810151838201526020016111de565b50506000910152565b600081518084526112178160208601602086016111db565b601f01601f19169290920160200192915050565b602081526000610d9c60208301846111ff565b60006020828403121561125057600080fd5b5035919050565b80356001600160a01b038116811461126e57600080fd5b919050565b6000806040838503121561128657600080fd5b61128f83611257565b946020939093013593505050565b6000806000606084860312156112b257600080fd5b6112bb84611257565b92506112c960208501611257565b9150604084013590509250925092565b6000602082840312156112eb57600080fd5b610d9c82611257565b6000806040838503121561130757600080fd5b61131083611257565b91506020830135801515811461132557600080fd5b809150509250929050565b6000806000806060858703121561134657600080fd5b61134f85611257565b935060208501359250604085013567ffffffffffffffff8082111561137357600080fd5b818701915087601f83011261138757600080fd5b81358181111561139657600080fd5b8860208285010111156113a857600080fd5b95989497505060200194505050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156113e357600080fd5b6113ec85611257565b93506113fa60208601611257565b925060408501359150606085013567ffffffffffffffff8082111561141e57600080fd5b818701915087601f83011261143257600080fd5b813581811115611444576114446113b7565b604051601f8201601f19908116603f0116810190838211818310171561146c5761146c6113b7565b816040528281528a602084870101111561148557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156114bc57600080fd5b6114c583611257565b91506114d360208401611257565b90509250929050565b600181811c908216806114f057607f821691505b60208210810361151057634e487b7160e01b600052602260045260246000fd5b50919050565b600083516115288184602088016111db565b83519083019061153c8183602088016111db565b01949350505050565b601f8211156104f757600081815260208120601f850160051c8101602086101561156c5750805b601f850160051c820191505b81811015610d2557828155600101611578565b815167ffffffffffffffff8111156115a5576115a56113b7565b6115b9816115b384546114dc565b84611545565b602080601f8311600181146115ee57600084156115d65750858301515b600019600386901b1c1916600185901b178555610d25565b600085815260208120601f198616915b8281101561161d578886015182559484019460019091019084016115fe565b508582101561163b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061167e908301846111ff565b9695505050505050565b60006020828403121561169a57600080fd5b8151610d9c816111a856fea26469706673582212204c9f524c29c5c6ad6faac512b7a871993aaa6c07722342cc1a8b161d2af7bf7764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A61 CODESIZE SUB DUP1 PUSH3 0x1A61 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1B1 JUMP JUMPDEST CALLER DUP3 DUP3 PUSH1 0x0 PUSH3 0x45 DUP4 DUP3 PUSH3 0x2AA JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x54 DUP3 DUP3 PUSH3 0x2AA JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x86 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x91 DUP2 PUSH3 0x9A JUMP JUMPDEST POP POP POP PUSH3 0x376 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x131 JUMPI PUSH3 0x131 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x15C JUMPI PUSH3 0x15C PUSH3 0xEC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x19D JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x17E JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1EB DUP7 DUP4 DUP8 ADD PUSH3 0x102 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x211 DUP6 DUP3 DUP7 ADD PUSH3 0x102 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x230 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x251 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2A5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x280 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2A1 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x28C JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2C6 JUMPI PUSH3 0x2C6 PUSH3 0xEC JUMP JUMPDEST PUSH3 0x2DE DUP2 PUSH3 0x2D7 DUP5 SLOAD PUSH3 0x21B JUMP JUMPDEST DUP5 PUSH3 0x257 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x316 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2FD JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2A1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x347 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x326 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x366 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x16DB DUP1 PUSH3 0x386 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xE9427CBB EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xF79EC5C3 EQ PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x8FAA9EDF EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x9456F7E9 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xB6483BAB EQ PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x59383991 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x80813288 EQ PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x129B3E27 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x122B JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1273 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x170 PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x234 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST PUSH2 0x234 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D9 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x12D9 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH2 0x18D PUSH2 0x643 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x12F4 JUMP JUMPDEST PUSH2 0x652 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x65D JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x12D9 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2DEDFC83 PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x37C JUMPI POP PUSH2 0x37C DUP3 PUSH2 0x917 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x391 SWAP1 PUSH2 0x14DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3BD SWAP1 PUSH2 0x14DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41F DUP3 PUSH2 0x93C JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37C JUMP JUMPDEST PUSH2 0x448 DUP3 DUP3 CALLER PUSH2 0x975 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP4 DUP4 CALLER PUSH2 0x982 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x472 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4F7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x782 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37C DUP3 PUSH2 0x93C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x557 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x561 PUSH1 0x0 PUSH2 0xAA8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x56B PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20494420646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x12185CDA081B9BDD081B5A5B9D1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x391 SWAP1 PUSH2 0x14DC JUMP JUMPDEST PUSH2 0x448 CALLER DUP4 DUP4 PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204861736870696E20636F6E74726163742063616E206D696E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x12185CDA08185B1C9958591E481B5A5B9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP4 PUSH2 0x733 DUP7 DUP3 PUSH2 0xB99 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x779 JUMPI PUSH2 0x779 DUP2 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xBB3 SWAP3 POP POP POP JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x78D DUP5 DUP5 DUP5 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x4D6 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7A5 DUP3 PUSH2 0x93C JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x7BF SWAP1 PUSH2 0x14DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7EB SWAP1 PUSH2 0x14DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x838 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x80D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x838 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x856 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x868 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x89A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x882 SWAP3 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A3 DUP5 PUSH2 0xD2E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x8E1 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH2 0x914 DUP2 PUSH2 0xAA8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x37C JUMPI POP PUSH2 0x37C DUP3 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH2 0x4F7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x9AF JUMPI PUSH2 0x9AF DUP2 DUP5 DUP7 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x9ED JUMPI PUSH2 0x9CC PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xA1C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x448 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xBCB DUP3 DUP3 PUSH2 0x158B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC45 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x164B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC80 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC7D SWAP2 DUP2 ADD SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCE9 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCE1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xD25 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD39 DUP3 PUSH2 0x93C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xD51 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD71 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD9C JUMP JUMPDEST DUP1 PUSH2 0xD7B DUP5 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD8C SWAP3 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xDD4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x37C JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x37C JUMP JUMPDEST DUP1 DUP1 PUSH2 0xE07 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xEC9 JUMPI PUSH1 0x0 PUSH2 0xE17 DUP5 PUSH2 0x93C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE43 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE56 JUMPI POP PUSH2 0xE54 DUP2 DUP5 PUSH2 0x8AB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE7F JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEC7 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xF04 DUP4 DUP4 DUP4 PUSH2 0x1008 JUMP JUMPDEST PUSH2 0x4F7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF32 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x472 JUMP JUMPDEST PUSH2 0xF67 DUP4 DUP4 PUSH2 0x106B JUMP JUMPDEST PUSH2 0x4F7 CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF82 DUP4 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFA2 JUMPI PUSH2 0xFA2 PUSH2 0x13B7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFCC JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xFD6 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8A3 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1042 JUMPI POP PUSH2 0x1042 DUP5 DUP5 PUSH2 0x8AB JUMP JUMPDEST DUP1 PUSH2 0x8A3 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1095 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A3 DUP4 DUP4 PUSH1 0x0 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x110F JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x113B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1159 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1171 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1185 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1197 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x37C JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD9C DUP2 PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11F6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11DE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1217 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xD9C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x126E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128F DUP4 PUSH2 0x1257 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12BB DUP5 PUSH2 0x1257 JUMP JUMPDEST SWAP3 POP PUSH2 0x12C9 PUSH1 0x20 DUP6 ADD PUSH2 0x1257 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9C DUP3 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1310 DUP4 PUSH2 0x1257 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134F DUP6 PUSH2 0x1257 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x13A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13EC DUP6 PUSH2 0x1257 JUMP JUMPDEST SWAP4 POP PUSH2 0x13FA PUSH1 0x20 DUP7 ADD PUSH2 0x1257 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x141E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1444 JUMPI PUSH2 0x1444 PUSH2 0x13B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x146C JUMPI PUSH2 0x146C PUSH2 0x13B7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C5 DUP4 PUSH2 0x1257 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D3 PUSH1 0x20 DUP5 ADD PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1510 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1528 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x11DB JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x153C DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x11DB JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x156C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD25 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1578 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A5 PUSH2 0x13B7 JUMP JUMPDEST PUSH2 0x15B9 DUP2 PUSH2 0x15B3 DUP5 SLOAD PUSH2 0x14DC JUMP JUMPDEST DUP5 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x15EE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x15D6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x161D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x15FE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x163B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x167E SWAP1 DUP4 ADD DUP5 PUSH2 0x11FF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x169A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD9C DUP2 PUSH2 0x11A8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C SWAP16 MSTORE 0x4C 0x29 0xC5 0xC6 0xAD PUSH16 0xAAC512B7A871993AAA6C07722342CC1A DUP12 AND SAR 0x2A 0xF7 0xBF PUSH24 0x64736F6C6343000814003300000000000000000000000000 ","sourceMap":"332:3566:30:-:0;;;767:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;868:10;837:4;843:6;1446:5:10;:13;837:4:30;1446:5:10;:13;:::i;:::-;-1:-1:-1;1469:7:10;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4293:51:33;4266:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;767:120:30;;332:3566;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:33:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:33;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:33;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:33:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:33;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:33;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:33;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:33;;;3992:26;3943:89;-1:-1:-1;;2747:1:33;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:33;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:33;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:33;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:33:o;4147:203::-;332:3566:30;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_2392":{"entryPoint":2421,"id":2392,"parameterSlots":3,"returnSlots":0},"@_approve_2458":{"entryPoint":3571,"id":2458,"parameterSlots":4,"returnSlots":0},"@_baseURI_1773":{"entryPoint":null,"id":1773,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_2032":{"entryPoint":3833,"id":2032,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2683,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_1959":{"entryPoint":null,"id":1959,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_1995":{"entryPoint":4104,"id":1995,"parameterSlots":3,"returnSlots":1},"@_mint_2188":{"entryPoint":4203,"id":2188,"parameterSlots":2,"returnSlots":0},"@_msgSender_3813":{"entryPoint":null,"id":3813,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1946":{"entryPoint":null,"id":1946,"parameterSlots":1,"returnSlots":1},"@_requireOwned_2524":{"entryPoint":2364,"id":2524,"parameterSlots":1,"returnSlots":1},"@_safeMint_2203":{"entryPoint":2969,"id":2203,"parameterSlots":2,"returnSlots":0},"@_safeMint_2233":{"entryPoint":3933,"id":2233,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_2495":{"entryPoint":2810,"id":2495,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_2785":{"entryPoint":2995,"id":2785,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2728,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_2138":{"entryPoint":2434,"id":2138,"parameterSlots":3,"returnSlots":1},"@approve_1789":{"entryPoint":1085,"id":1789,"parameterSlots":2,"returnSlots":0},"@balanceOf_1697":{"entryPoint":1287,"id":1697,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_2890":{"entryPoint":3075,"id":2890,"parameterSlots":5,"returnSlots":0},"@getApproved_1806":{"entryPoint":1044,"id":1806,"parameterSlots":1,"returnSlots":1},"@getHashByTokenId_9684":{"entryPoint":1421,"id":9684,"parameterSlots":1,"returnSlots":1},"@hashMinted_9525":{"entryPoint":null,"id":9525,"parameterSlots":0,"returnSlots":0},"@hashToTokenID_9571":{"entryPoint":null,"id":9571,"parameterSlots":1,"returnSlots":1},"@hashpinContract_9527":{"entryPoint":null,"id":9527,"parameterSlots":0,"returnSlots":0},"@isApprovedForAll_1839":{"entryPoint":2219,"id":1839,"parameterSlots":2,"returnSlots":1},"@isHashMinted_9697":{"entryPoint":null,"id":9697,"parameterSlots":1,"returnSlots":1},"@log10_6751":{"entryPoint":4304,"id":6751,"parameterSlots":1,"returnSlots":1},"@mint_9648":{"entryPoint":1629,"id":9648,"parameterSlots":4,"returnSlots":1},"@name_1719":{"entryPoint":898,"id":1719,"parameterSlots":0,"returnSlots":1},"@ownerOf_1710":{"entryPoint":1276,"id":1710,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1359,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1903":{"entryPoint":1244,"id":1903,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1933":{"entryPoint":1922,"id":1933,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1822":{"entryPoint":1618,"id":1822,"parameterSlots":2,"returnSlots":0},"@setHashpinContract_9557":{"entryPoint":1379,"id":9557,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1669":{"entryPoint":3491,"id":1669,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2709":{"entryPoint":2327,"id":2709,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5360":{"entryPoint":null,"id":5360,"parameterSlots":1,"returnSlots":1},"@supportsInterface_9721":{"entryPoint":855,"id":9721,"parameterSlots":1,"returnSlots":1},"@symbol_1728":{"entryPoint":1603,"id":1728,"parameterSlots":0,"returnSlots":1},"@toString_4215":{"entryPoint":3957,"id":4215,"parameterSlots":1,"returnSlots":1},"@tokenIDToHash_9585":{"entryPoint":null,"id":9585,"parameterSlots":1,"returnSlots":1},"@tokenURI_1764":{"entryPoint":3374,"id":1764,"parameterSlots":1,"returnSlots":1},"@tokenURI_2766":{"entryPoint":1946,"id":2766,"parameterSlots":1,"returnSlots":1},"@transferFrom_1885":{"entryPoint":1100,"id":1885,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2265,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":4695,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4825,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5289,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4765,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5069,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":4852,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptr":{"entryPoint":4912,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4723,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":4542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":5768,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5398,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5707,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_14ddb257f1ec202d0225b5cd7757b4632f49f22eaa94e372cab5340091be23ef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_79d92d9ad9002a23620b92eabf862edbf431a7e5dac84191f4393e1413b6a6d0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e240009b8d786292eb67999f675f816161279314f3e5b6c116ecef7638f59a91__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":5445,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":5515,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4571,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5340,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5047,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":4520,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11910:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:33","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:33"},"nodeType":"YulFunctionCall","src":"125:12:33"},"nodeType":"YulExpressionStatement","src":"125:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:33","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:33"},"nodeType":"YulFunctionCall","src":"99:20:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:33"},"nodeType":"YulFunctionCall","src":"88:32:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:33"},"nodeType":"YulFunctionCall","src":"78:43:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:33"},"nodeType":"YulFunctionCall","src":"71:51:33"},"nodeType":"YulIf","src":"68:71:33"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:33","type":""}],"src":"14:131:33"},{"body":{"nodeType":"YulBlock","src":"219:176:33","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:33"},"nodeType":"YulFunctionCall","src":"267:12:33"},"nodeType":"YulExpressionStatement","src":"267:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:33"},"nodeType":"YulFunctionCall","src":"236:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:33"},"nodeType":"YulFunctionCall","src":"232:32:33"},"nodeType":"YulIf","src":"229:52:33"},{"nodeType":"YulVariableDeclaration","src":"290:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:33"},"nodeType":"YulFunctionCall","src":"303:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:33"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:33"},"nodeType":"YulFunctionCall","src":"335:30:33"},"nodeType":"YulExpressionStatement","src":"335:30:33"},{"nodeType":"YulAssignment","src":"374:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:33"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:33","type":""}],"src":"150:245:33"},{"body":{"nodeType":"YulBlock","src":"495:92:33","statements":[{"nodeType":"YulAssignment","src":"505:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:33"},"nodeType":"YulFunctionCall","src":"513:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:33"},"nodeType":"YulFunctionCall","src":"565:14:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:33"},"nodeType":"YulFunctionCall","src":"558:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:33"},"nodeType":"YulFunctionCall","src":"540:41:33"},"nodeType":"YulExpressionStatement","src":"540:41:33"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:33","type":""}],"src":"400:187:33"},{"body":{"nodeType":"YulBlock","src":"658:184:33","statements":[{"nodeType":"YulVariableDeclaration","src":"668:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"677:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"672:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"737:63:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"762:3:33"},{"name":"i","nodeType":"YulIdentifier","src":"767:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:33"},"nodeType":"YulFunctionCall","src":"758:11:33"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"781:3:33"},{"name":"i","nodeType":"YulIdentifier","src":"786:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:33"},"nodeType":"YulFunctionCall","src":"777:11:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"771:5:33"},"nodeType":"YulFunctionCall","src":"771:18:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:33"},"nodeType":"YulFunctionCall","src":"751:39:33"},"nodeType":"YulExpressionStatement","src":"751:39:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"701:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"695:2:33"},"nodeType":"YulFunctionCall","src":"695:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"709:19:33","statements":[{"nodeType":"YulAssignment","src":"711:15:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"720:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"723:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:33"},"nodeType":"YulFunctionCall","src":"716:10:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"711:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"691:3:33","statements":[]},"src":"687:113:33"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"820:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"825:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:33"},"nodeType":"YulFunctionCall","src":"816:16:33"},{"kind":"number","nodeType":"YulLiteral","src":"834:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:33"},"nodeType":"YulFunctionCall","src":"809:27:33"},"nodeType":"YulExpressionStatement","src":"809:27:33"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"636:3:33","type":""},{"name":"dst","nodeType":"YulTypedName","src":"641:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"646:6:33","type":""}],"src":"592:250:33"},{"body":{"nodeType":"YulBlock","src":"897:221:33","statements":[{"nodeType":"YulVariableDeclaration","src":"907:26:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"921:5:33"},"nodeType":"YulFunctionCall","src":"921:12:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"911:6:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"949:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"954:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"942:6:33"},"nodeType":"YulFunctionCall","src":"942:19:33"},"nodeType":"YulExpressionStatement","src":"942:19:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1009:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"1016:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:33"},"nodeType":"YulFunctionCall","src":"1005:16:33"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1027:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"1032:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:33"},"nodeType":"YulFunctionCall","src":"1023:14:33"},{"name":"length","nodeType":"YulIdentifier","src":"1039:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"970:34:33"},"nodeType":"YulFunctionCall","src":"970:76:33"},"nodeType":"YulExpressionStatement","src":"970:76:33"},{"nodeType":"YulAssignment","src":"1055:57:33","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1070:3:33"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1083:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:33"},"nodeType":"YulFunctionCall","src":"1079:15:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1100:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1096:3:33"},"nodeType":"YulFunctionCall","src":"1096:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1075:3:33"},"nodeType":"YulFunctionCall","src":"1075:29:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1066:3:33"},"nodeType":"YulFunctionCall","src":"1066:39:33"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1062:3:33"},"nodeType":"YulFunctionCall","src":"1062:50:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1055:3:33"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"874:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"881:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"889:3:33","type":""}],"src":"847:271:33"},{"body":{"nodeType":"YulBlock","src":"1244:99:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1261:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1272:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1254:6:33"},"nodeType":"YulFunctionCall","src":"1254:21:33"},"nodeType":"YulExpressionStatement","src":"1254:21:33"},{"nodeType":"YulAssignment","src":"1284:53:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1310:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1333:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:33"},"nodeType":"YulFunctionCall","src":"1318:18:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1292:17:33"},"nodeType":"YulFunctionCall","src":"1292:45:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1284:4:33"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1213:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1224:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1235:4:33","type":""}],"src":"1123:220:33"},{"body":{"nodeType":"YulBlock","src":"1418:110:33","statements":[{"body":{"nodeType":"YulBlock","src":"1464:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:33"},"nodeType":"YulFunctionCall","src":"1466:12:33"},"nodeType":"YulExpressionStatement","src":"1466:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1435:3:33"},"nodeType":"YulFunctionCall","src":"1435:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"1460:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1431:3:33"},"nodeType":"YulFunctionCall","src":"1431:32:33"},"nodeType":"YulIf","src":"1428:52:33"},{"nodeType":"YulAssignment","src":"1489:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:33"},"nodeType":"YulFunctionCall","src":"1499:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1489:6:33"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1384:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1395:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1407:6:33","type":""}],"src":"1348:180:33"},{"body":{"nodeType":"YulBlock","src":"1634:102:33","statements":[{"nodeType":"YulAssignment","src":"1644:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:33"},"nodeType":"YulFunctionCall","src":"1652:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1644:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1701:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1722:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1713:3:33"},"nodeType":"YulFunctionCall","src":"1713:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"1726:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1709:3:33"},"nodeType":"YulFunctionCall","src":"1709:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1697:3:33"},"nodeType":"YulFunctionCall","src":"1697:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:33"},"nodeType":"YulFunctionCall","src":"1679:51:33"},"nodeType":"YulExpressionStatement","src":"1679:51:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1614:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1625:4:33","type":""}],"src":"1533:203:33"},{"body":{"nodeType":"YulBlock","src":"1790:124:33","statements":[{"nodeType":"YulAssignment","src":"1800:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1822:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1809:12:33"},"nodeType":"YulFunctionCall","src":"1809:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:33"}]},{"body":{"nodeType":"YulBlock","src":"1892:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1901:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1894:6:33"},"nodeType":"YulFunctionCall","src":"1894:12:33"},"nodeType":"YulExpressionStatement","src":"1894:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1862:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1877:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1882:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1873:3:33"},"nodeType":"YulFunctionCall","src":"1873:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"1886:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1869:3:33"},"nodeType":"YulFunctionCall","src":"1869:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1858:3:33"},"nodeType":"YulFunctionCall","src":"1858:31:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1848:2:33"},"nodeType":"YulFunctionCall","src":"1848:42:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1841:6:33"},"nodeType":"YulFunctionCall","src":"1841:50:33"},"nodeType":"YulIf","src":"1838:70:33"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1780:5:33","type":""}],"src":"1741:173:33"},{"body":{"nodeType":"YulBlock","src":"2006:167:33","statements":[{"body":{"nodeType":"YulBlock","src":"2052:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2064:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2054:6:33"},"nodeType":"YulFunctionCall","src":"2054:12:33"},"nodeType":"YulExpressionStatement","src":"2054:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2027:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2023:3:33"},"nodeType":"YulFunctionCall","src":"2023:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2019:3:33"},"nodeType":"YulFunctionCall","src":"2019:32:33"},"nodeType":"YulIf","src":"2016:52:33"},{"nodeType":"YulAssignment","src":"2077:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2106:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2087:18:33"},"nodeType":"YulFunctionCall","src":"2087:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2077:6:33"}]},{"nodeType":"YulAssignment","src":"2125:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:33"},"nodeType":"YulFunctionCall","src":"2148:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2135:12:33"},"nodeType":"YulFunctionCall","src":"2135:32:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2125:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1964:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1975:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1987:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1995:6:33","type":""}],"src":"1919:254:33"},{"body":{"nodeType":"YulBlock","src":"2248:110:33","statements":[{"body":{"nodeType":"YulBlock","src":"2294:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2303:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2306:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2296:6:33"},"nodeType":"YulFunctionCall","src":"2296:12:33"},"nodeType":"YulExpressionStatement","src":"2296:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2269:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2265:3:33"},"nodeType":"YulFunctionCall","src":"2265:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2290:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2261:3:33"},"nodeType":"YulFunctionCall","src":"2261:32:33"},"nodeType":"YulIf","src":"2258:52:33"},{"nodeType":"YulAssignment","src":"2319:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2342:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2329:12:33"},"nodeType":"YulFunctionCall","src":"2329:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2319:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2214:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2225:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2237:6:33","type":""}],"src":"2178:180:33"},{"body":{"nodeType":"YulBlock","src":"2467:224:33","statements":[{"body":{"nodeType":"YulBlock","src":"2513:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2522:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2525:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2515:6:33"},"nodeType":"YulFunctionCall","src":"2515:12:33"},"nodeType":"YulExpressionStatement","src":"2515:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2488:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2497:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2484:3:33"},"nodeType":"YulFunctionCall","src":"2484:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2509:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2480:3:33"},"nodeType":"YulFunctionCall","src":"2480:32:33"},"nodeType":"YulIf","src":"2477:52:33"},{"nodeType":"YulAssignment","src":"2538:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2567:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2548:18:33"},"nodeType":"YulFunctionCall","src":"2548:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2538:6:33"}]},{"nodeType":"YulAssignment","src":"2586:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2619:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2630:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2615:3:33"},"nodeType":"YulFunctionCall","src":"2615:18:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2596:18:33"},"nodeType":"YulFunctionCall","src":"2596:38:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2586:6:33"}]},{"nodeType":"YulAssignment","src":"2643:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2670:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2681:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2666:3:33"},"nodeType":"YulFunctionCall","src":"2666:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2653:12:33"},"nodeType":"YulFunctionCall","src":"2653:32:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2643:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2417:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2428:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2440:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2448:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2456:6:33","type":""}],"src":"2363:328:33"},{"body":{"nodeType":"YulBlock","src":"2797:76:33","statements":[{"nodeType":"YulAssignment","src":"2807:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2819:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2830:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2815:3:33"},"nodeType":"YulFunctionCall","src":"2815:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2807:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2849:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"2860:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2842:6:33"},"nodeType":"YulFunctionCall","src":"2842:25:33"},"nodeType":"YulExpressionStatement","src":"2842:25:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2766:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2777:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2788:4:33","type":""}],"src":"2696:177:33"},{"body":{"nodeType":"YulBlock","src":"2948:116:33","statements":[{"body":{"nodeType":"YulBlock","src":"2994:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3003:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3006:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2996:6:33"},"nodeType":"YulFunctionCall","src":"2996:12:33"},"nodeType":"YulExpressionStatement","src":"2996:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2969:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2978:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2965:3:33"},"nodeType":"YulFunctionCall","src":"2965:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2990:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2961:3:33"},"nodeType":"YulFunctionCall","src":"2961:32:33"},"nodeType":"YulIf","src":"2958:52:33"},{"nodeType":"YulAssignment","src":"3019:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3048:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3029:18:33"},"nodeType":"YulFunctionCall","src":"3029:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3019:6:33"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2914:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2925:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2937:6:33","type":""}],"src":"2878:186:33"},{"body":{"nodeType":"YulBlock","src":"3170:76:33","statements":[{"nodeType":"YulAssignment","src":"3180:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3192:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3203:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3188:3:33"},"nodeType":"YulFunctionCall","src":"3188:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3180:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3222:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"3233:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3215:6:33"},"nodeType":"YulFunctionCall","src":"3215:25:33"},"nodeType":"YulExpressionStatement","src":"3215:25:33"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3139:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3150:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3161:4:33","type":""}],"src":"3069:177:33"},{"body":{"nodeType":"YulBlock","src":"3335:263:33","statements":[{"body":{"nodeType":"YulBlock","src":"3381:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3390:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3393:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3383:6:33"},"nodeType":"YulFunctionCall","src":"3383:12:33"},"nodeType":"YulExpressionStatement","src":"3383:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3356:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"3365:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3352:3:33"},"nodeType":"YulFunctionCall","src":"3352:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"3377:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3348:3:33"},"nodeType":"YulFunctionCall","src":"3348:32:33"},"nodeType":"YulIf","src":"3345:52:33"},{"nodeType":"YulAssignment","src":"3406:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3435:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3416:18:33"},"nodeType":"YulFunctionCall","src":"3416:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"3454:45:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3484:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3495:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3480:3:33"},"nodeType":"YulFunctionCall","src":"3480:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3467:12:33"},"nodeType":"YulFunctionCall","src":"3467:32:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3458:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3552:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3561:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3564:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3554:6:33"},"nodeType":"YulFunctionCall","src":"3554:12:33"},"nodeType":"YulExpressionStatement","src":"3554:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3521:5:33"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3542:5:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3535:6:33"},"nodeType":"YulFunctionCall","src":"3535:13:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3528:6:33"},"nodeType":"YulFunctionCall","src":"3528:21:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3518:2:33"},"nodeType":"YulFunctionCall","src":"3518:32:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3511:6:33"},"nodeType":"YulFunctionCall","src":"3511:40:33"},"nodeType":"YulIf","src":"3508:60:33"},{"nodeType":"YulAssignment","src":"3577:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"3587:5:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3577:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3293:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3304:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3316:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3324:6:33","type":""}],"src":"3251:347:33"},{"body":{"nodeType":"YulBlock","src":"3726:610:33","statements":[{"body":{"nodeType":"YulBlock","src":"3772:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3781:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3784:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3774:6:33"},"nodeType":"YulFunctionCall","src":"3774:12:33"},"nodeType":"YulExpressionStatement","src":"3774:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3747:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"3756:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3743:3:33"},"nodeType":"YulFunctionCall","src":"3743:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"3768:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3739:3:33"},"nodeType":"YulFunctionCall","src":"3739:32:33"},"nodeType":"YulIf","src":"3736:52:33"},{"nodeType":"YulAssignment","src":"3797:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3826:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3807:18:33"},"nodeType":"YulFunctionCall","src":"3807:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3797:6:33"}]},{"nodeType":"YulAssignment","src":"3845:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3872:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3883:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3868:3:33"},"nodeType":"YulFunctionCall","src":"3868:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3855:12:33"},"nodeType":"YulFunctionCall","src":"3855:32:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3845:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"3896:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3927:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3938:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3923:3:33"},"nodeType":"YulFunctionCall","src":"3923:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3910:12:33"},"nodeType":"YulFunctionCall","src":"3910:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3900:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3951:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3961:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3955:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4006:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4015:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4018:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4008:6:33"},"nodeType":"YulFunctionCall","src":"4008:12:33"},"nodeType":"YulExpressionStatement","src":"4008:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3994:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4002:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3991:2:33"},"nodeType":"YulFunctionCall","src":"3991:14:33"},"nodeType":"YulIf","src":"3988:34:33"},{"nodeType":"YulVariableDeclaration","src":"4031:32:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4045:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"4056:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4041:3:33"},"nodeType":"YulFunctionCall","src":"4041:22:33"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4035:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4111:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4120:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4123:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4113:6:33"},"nodeType":"YulFunctionCall","src":"4113:12:33"},"nodeType":"YulExpressionStatement","src":"4113:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4090:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"4094:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4086:3:33"},"nodeType":"YulFunctionCall","src":"4086:13:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4101:7:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4082:3:33"},"nodeType":"YulFunctionCall","src":"4082:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4075:6:33"},"nodeType":"YulFunctionCall","src":"4075:35:33"},"nodeType":"YulIf","src":"4072:55:33"},{"nodeType":"YulVariableDeclaration","src":"4136:30:33","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4163:2:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4150:12:33"},"nodeType":"YulFunctionCall","src":"4150:16:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4140:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4193:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4202:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4205:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4195:6:33"},"nodeType":"YulFunctionCall","src":"4195:12:33"},"nodeType":"YulExpressionStatement","src":"4195:12:33"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4181:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4189:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4178:2:33"},"nodeType":"YulFunctionCall","src":"4178:14:33"},"nodeType":"YulIf","src":"4175:34:33"},{"body":{"nodeType":"YulBlock","src":"4259:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4268:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4271:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4261:6:33"},"nodeType":"YulFunctionCall","src":"4261:12:33"},"nodeType":"YulExpressionStatement","src":"4261:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4232:2:33"},{"name":"length","nodeType":"YulIdentifier","src":"4236:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4228:3:33"},"nodeType":"YulFunctionCall","src":"4228:15:33"},{"kind":"number","nodeType":"YulLiteral","src":"4245:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4224:3:33"},"nodeType":"YulFunctionCall","src":"4224:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4250:7:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4221:2:33"},"nodeType":"YulFunctionCall","src":"4221:37:33"},"nodeType":"YulIf","src":"4218:57:33"},{"nodeType":"YulAssignment","src":"4284:21:33","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4298:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"4302:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4294:3:33"},"nodeType":"YulFunctionCall","src":"4294:11:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4284:6:33"}]},{"nodeType":"YulAssignment","src":"4314:16:33","value":{"name":"length","nodeType":"YulIdentifier","src":"4324:6:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4314:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3668:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3679:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3691:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3699:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3707:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3715:6:33","type":""}],"src":"3603:733:33"},{"body":{"nodeType":"YulBlock","src":"4373:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4390:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4397:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4402:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4393:3:33"},"nodeType":"YulFunctionCall","src":"4393:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4383:6:33"},"nodeType":"YulFunctionCall","src":"4383:31:33"},"nodeType":"YulExpressionStatement","src":"4383:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4430:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4433:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4423:6:33"},"nodeType":"YulFunctionCall","src":"4423:15:33"},"nodeType":"YulExpressionStatement","src":"4423:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4454:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4457:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4447:6:33"},"nodeType":"YulFunctionCall","src":"4447:15:33"},"nodeType":"YulExpressionStatement","src":"4447:15:33"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4341:127:33"},{"body":{"nodeType":"YulBlock","src":"4603:1008:33","statements":[{"body":{"nodeType":"YulBlock","src":"4650:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4659:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4662:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4652:6:33"},"nodeType":"YulFunctionCall","src":"4652:12:33"},"nodeType":"YulExpressionStatement","src":"4652:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4624:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"4633:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4620:3:33"},"nodeType":"YulFunctionCall","src":"4620:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"4645:3:33","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4616:3:33"},"nodeType":"YulFunctionCall","src":"4616:33:33"},"nodeType":"YulIf","src":"4613:53:33"},{"nodeType":"YulAssignment","src":"4675:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4704:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4685:18:33"},"nodeType":"YulFunctionCall","src":"4685:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4675:6:33"}]},{"nodeType":"YulAssignment","src":"4723:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4756:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4767:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4752:3:33"},"nodeType":"YulFunctionCall","src":"4752:18:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4733:18:33"},"nodeType":"YulFunctionCall","src":"4733:38:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4723:6:33"}]},{"nodeType":"YulAssignment","src":"4780:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4807:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4818:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4803:3:33"},"nodeType":"YulFunctionCall","src":"4803:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4790:12:33"},"nodeType":"YulFunctionCall","src":"4790:32:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4780:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"4831:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4862:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4873:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4858:3:33"},"nodeType":"YulFunctionCall","src":"4858:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4845:12:33"},"nodeType":"YulFunctionCall","src":"4845:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4835:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4886:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"4896:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4890:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4941:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4950:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4953:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4943:6:33"},"nodeType":"YulFunctionCall","src":"4943:12:33"},"nodeType":"YulExpressionStatement","src":"4943:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4929:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"4937:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4926:2:33"},"nodeType":"YulFunctionCall","src":"4926:14:33"},"nodeType":"YulIf","src":"4923:34:33"},{"nodeType":"YulVariableDeclaration","src":"4966:32:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4980:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"4991:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4976:3:33"},"nodeType":"YulFunctionCall","src":"4976:22:33"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4970:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5046:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5055:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5058:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5048:6:33"},"nodeType":"YulFunctionCall","src":"5048:12:33"},"nodeType":"YulExpressionStatement","src":"5048:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5025:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"5029:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5021:3:33"},"nodeType":"YulFunctionCall","src":"5021:13:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5036:7:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5017:3:33"},"nodeType":"YulFunctionCall","src":"5017:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5010:6:33"},"nodeType":"YulFunctionCall","src":"5010:35:33"},"nodeType":"YulIf","src":"5007:55:33"},{"nodeType":"YulVariableDeclaration","src":"5071:26:33","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5094:2:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5081:12:33"},"nodeType":"YulFunctionCall","src":"5081:16:33"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5075:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5120:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5122:16:33"},"nodeType":"YulFunctionCall","src":"5122:18:33"},"nodeType":"YulExpressionStatement","src":"5122:18:33"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5112:2:33"},{"name":"_1","nodeType":"YulIdentifier","src":"5116:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5109:2:33"},"nodeType":"YulFunctionCall","src":"5109:10:33"},"nodeType":"YulIf","src":"5106:36:33"},{"nodeType":"YulVariableDeclaration","src":"5151:17:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5165:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5161:3:33"},"nodeType":"YulFunctionCall","src":"5161:7:33"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5155:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5177:23:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5197:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5191:5:33"},"nodeType":"YulFunctionCall","src":"5191:9:33"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5181:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5209:71:33","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5231:6:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5255:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"5259:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5251:3:33"},"nodeType":"YulFunctionCall","src":"5251:13:33"},{"name":"_4","nodeType":"YulIdentifier","src":"5266:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5247:3:33"},"nodeType":"YulFunctionCall","src":"5247:22:33"},{"kind":"number","nodeType":"YulLiteral","src":"5271:2:33","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5243:3:33"},"nodeType":"YulFunctionCall","src":"5243:31:33"},{"name":"_4","nodeType":"YulIdentifier","src":"5276:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5239:3:33"},"nodeType":"YulFunctionCall","src":"5239:40:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5227:3:33"},"nodeType":"YulFunctionCall","src":"5227:53:33"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5213:10:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5339:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5341:16:33"},"nodeType":"YulFunctionCall","src":"5341:18:33"},"nodeType":"YulExpressionStatement","src":"5341:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5298:10:33"},{"name":"_1","nodeType":"YulIdentifier","src":"5310:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5295:2:33"},"nodeType":"YulFunctionCall","src":"5295:18:33"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5318:10:33"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5330:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5315:2:33"},"nodeType":"YulFunctionCall","src":"5315:22:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5292:2:33"},"nodeType":"YulFunctionCall","src":"5292:46:33"},"nodeType":"YulIf","src":"5289:72:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5377:2:33","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5381:10:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5370:6:33"},"nodeType":"YulFunctionCall","src":"5370:22:33"},"nodeType":"YulExpressionStatement","src":"5370:22:33"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5408:6:33"},{"name":"_3","nodeType":"YulIdentifier","src":"5416:2:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5401:6:33"},"nodeType":"YulFunctionCall","src":"5401:18:33"},"nodeType":"YulExpressionStatement","src":"5401:18:33"},{"body":{"nodeType":"YulBlock","src":"5465:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5474:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5477:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5467:6:33"},"nodeType":"YulFunctionCall","src":"5467:12:33"},"nodeType":"YulExpressionStatement","src":"5467:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5442:2:33"},{"name":"_3","nodeType":"YulIdentifier","src":"5446:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5438:3:33"},"nodeType":"YulFunctionCall","src":"5438:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"5451:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5434:3:33"},"nodeType":"YulFunctionCall","src":"5434:20:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5456:7:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5431:2:33"},"nodeType":"YulFunctionCall","src":"5431:33:33"},"nodeType":"YulIf","src":"5428:53:33"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5507:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"5515:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5503:3:33"},"nodeType":"YulFunctionCall","src":"5503:15:33"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5524:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"5528:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5520:3:33"},"nodeType":"YulFunctionCall","src":"5520:11:33"},{"name":"_3","nodeType":"YulIdentifier","src":"5533:2:33"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"5490:12:33"},"nodeType":"YulFunctionCall","src":"5490:46:33"},"nodeType":"YulExpressionStatement","src":"5490:46:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5560:6:33"},{"name":"_3","nodeType":"YulIdentifier","src":"5568:2:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5556:3:33"},"nodeType":"YulFunctionCall","src":"5556:15:33"},{"kind":"number","nodeType":"YulLiteral","src":"5573:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5552:3:33"},"nodeType":"YulFunctionCall","src":"5552:24:33"},{"kind":"number","nodeType":"YulLiteral","src":"5578:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5545:6:33"},"nodeType":"YulFunctionCall","src":"5545:35:33"},"nodeType":"YulExpressionStatement","src":"5545:35:33"},{"nodeType":"YulAssignment","src":"5589:16:33","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5599:6:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5589:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4545:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4556:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4568:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4576:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4584:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4592:6:33","type":""}],"src":"4473:1138:33"},{"body":{"nodeType":"YulBlock","src":"5703:173:33","statements":[{"body":{"nodeType":"YulBlock","src":"5749:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5758:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5761:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5751:6:33"},"nodeType":"YulFunctionCall","src":"5751:12:33"},"nodeType":"YulExpressionStatement","src":"5751:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5724:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"5733:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5720:3:33"},"nodeType":"YulFunctionCall","src":"5720:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"5745:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5716:3:33"},"nodeType":"YulFunctionCall","src":"5716:32:33"},"nodeType":"YulIf","src":"5713:52:33"},{"nodeType":"YulAssignment","src":"5774:39:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5803:9:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5784:18:33"},"nodeType":"YulFunctionCall","src":"5784:29:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5774:6:33"}]},{"nodeType":"YulAssignment","src":"5822:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5855:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"5866:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5851:3:33"},"nodeType":"YulFunctionCall","src":"5851:18:33"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5832:18:33"},"nodeType":"YulFunctionCall","src":"5832:38:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5822:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5661:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5672:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5684:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5692:6:33","type":""}],"src":"5616:260:33"},{"body":{"nodeType":"YulBlock","src":"5936:325:33","statements":[{"nodeType":"YulAssignment","src":"5946:22:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5960:1:33","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5963:4:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5956:3:33"},"nodeType":"YulFunctionCall","src":"5956:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5946:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"5977:38:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6007:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"6013:1:33","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6003:3:33"},"nodeType":"YulFunctionCall","src":"6003:12:33"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5981:18:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6054:31:33","statements":[{"nodeType":"YulAssignment","src":"6056:27:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6070:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"6078:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6066:3:33"},"nodeType":"YulFunctionCall","src":"6066:17:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6056:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6034:18:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6027:6:33"},"nodeType":"YulFunctionCall","src":"6027:26:33"},"nodeType":"YulIf","src":"6024:61:33"},{"body":{"nodeType":"YulBlock","src":"6144:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6165:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6172:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6177:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6168:3:33"},"nodeType":"YulFunctionCall","src":"6168:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6158:6:33"},"nodeType":"YulFunctionCall","src":"6158:31:33"},"nodeType":"YulExpressionStatement","src":"6158:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6209:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6212:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6202:6:33"},"nodeType":"YulFunctionCall","src":"6202:15:33"},"nodeType":"YulExpressionStatement","src":"6202:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6237:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6240:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6230:6:33"},"nodeType":"YulFunctionCall","src":"6230:15:33"},"nodeType":"YulExpressionStatement","src":"6230:15:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6100:18:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6123:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6120:2:33"},"nodeType":"YulFunctionCall","src":"6120:14:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6097:2:33"},"nodeType":"YulFunctionCall","src":"6097:38:33"},"nodeType":"YulIf","src":"6094:161:33"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5916:4:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5925:6:33","type":""}],"src":"5881:380:33"},{"body":{"nodeType":"YulBlock","src":"6423:218:33","statements":[{"nodeType":"YulAssignment","src":"6433:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6445:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6456:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6441:3:33"},"nodeType":"YulFunctionCall","src":"6441:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6433:4:33"}]},{"nodeType":"YulVariableDeclaration","src":"6468:29:33","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6486:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6491:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6482:3:33"},"nodeType":"YulFunctionCall","src":"6482:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"6495:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6478:3:33"},"nodeType":"YulFunctionCall","src":"6478:19:33"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6472:2:33","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6513:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6528:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6536:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6524:3:33"},"nodeType":"YulFunctionCall","src":"6524:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6506:6:33"},"nodeType":"YulFunctionCall","src":"6506:34:33"},"nodeType":"YulExpressionStatement","src":"6506:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6560:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6571:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6556:3:33"},"nodeType":"YulFunctionCall","src":"6556:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"6576:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6549:6:33"},"nodeType":"YulFunctionCall","src":"6549:34:33"},"nodeType":"YulExpressionStatement","src":"6549:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6603:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6614:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6599:3:33"},"nodeType":"YulFunctionCall","src":"6599:18:33"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6623:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"6631:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6619:3:33"},"nodeType":"YulFunctionCall","src":"6619:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6592:6:33"},"nodeType":"YulFunctionCall","src":"6592:43:33"},"nodeType":"YulExpressionStatement","src":"6592:43:33"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6376:9:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6387:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6395:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6403:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6414:4:33","type":""}],"src":"6266:375:33"},{"body":{"nodeType":"YulBlock","src":"6820:173:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6837:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6848:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6830:6:33"},"nodeType":"YulFunctionCall","src":"6830:21:33"},"nodeType":"YulExpressionStatement","src":"6830:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6871:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6882:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6867:3:33"},"nodeType":"YulFunctionCall","src":"6867:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"6887:2:33","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6860:6:33"},"nodeType":"YulFunctionCall","src":"6860:30:33"},"nodeType":"YulExpressionStatement","src":"6860:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6910:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6921:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6906:3:33"},"nodeType":"YulFunctionCall","src":"6906:18:33"},{"hexValue":"546f6b656e20494420646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"6926:25:33","type":"","value":"Token ID does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6899:6:33"},"nodeType":"YulFunctionCall","src":"6899:53:33"},"nodeType":"YulExpressionStatement","src":"6899:53:33"},{"nodeType":"YulAssignment","src":"6961:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6973:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6984:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6969:3:33"},"nodeType":"YulFunctionCall","src":"6969:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6961:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6797:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6811:4:33","type":""}],"src":"6646:347:33"},{"body":{"nodeType":"YulBlock","src":"7172:165:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7189:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7200:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7182:6:33"},"nodeType":"YulFunctionCall","src":"7182:21:33"},"nodeType":"YulExpressionStatement","src":"7182:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7223:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7234:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7219:3:33"},"nodeType":"YulFunctionCall","src":"7219:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"7239:2:33","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7212:6:33"},"nodeType":"YulFunctionCall","src":"7212:30:33"},"nodeType":"YulExpressionStatement","src":"7212:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7262:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7273:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7258:3:33"},"nodeType":"YulFunctionCall","src":"7258:18:33"},{"hexValue":"48617368206e6f74206d696e746564","kind":"string","nodeType":"YulLiteral","src":"7278:17:33","type":"","value":"Hash not minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7251:6:33"},"nodeType":"YulFunctionCall","src":"7251:45:33"},"nodeType":"YulExpressionStatement","src":"7251:45:33"},{"nodeType":"YulAssignment","src":"7305:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7317:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7328:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7313:3:33"},"nodeType":"YulFunctionCall","src":"7313:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7305:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_e240009b8d786292eb67999f675f816161279314f3e5b6c116ecef7638f59a91__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7149:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7163:4:33","type":""}],"src":"6998:339:33"},{"body":{"nodeType":"YulBlock","src":"7516:180:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7533:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7544:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7526:6:33"},"nodeType":"YulFunctionCall","src":"7526:21:33"},"nodeType":"YulExpressionStatement","src":"7526:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7567:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7578:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7563:3:33"},"nodeType":"YulFunctionCall","src":"7563:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"7583:2:33","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7556:6:33"},"nodeType":"YulFunctionCall","src":"7556:30:33"},"nodeType":"YulExpressionStatement","src":"7556:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7606:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7617:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7602:3:33"},"nodeType":"YulFunctionCall","src":"7602:18:33"},{"hexValue":"4f6e6c79204861736870696e20636f6e74726163742063616e206d696e74","kind":"string","nodeType":"YulLiteral","src":"7622:32:33","type":"","value":"Only Hashpin contract can mint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7595:6:33"},"nodeType":"YulFunctionCall","src":"7595:60:33"},"nodeType":"YulExpressionStatement","src":"7595:60:33"},{"nodeType":"YulAssignment","src":"7664:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7676:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7687:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7672:3:33"},"nodeType":"YulFunctionCall","src":"7672:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7664:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_14ddb257f1ec202d0225b5cd7757b4632f49f22eaa94e372cab5340091be23ef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7493:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7507:4:33","type":""}],"src":"7342:354:33"},{"body":{"nodeType":"YulBlock","src":"7875:169:33","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7892:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7903:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7885:6:33"},"nodeType":"YulFunctionCall","src":"7885:21:33"},"nodeType":"YulExpressionStatement","src":"7885:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7926:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7937:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7922:3:33"},"nodeType":"YulFunctionCall","src":"7922:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"7942:2:33","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7915:6:33"},"nodeType":"YulFunctionCall","src":"7915:30:33"},"nodeType":"YulExpressionStatement","src":"7915:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7965:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7976:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7961:3:33"},"nodeType":"YulFunctionCall","src":"7961:18:33"},{"hexValue":"4861736820616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"7981:21:33","type":"","value":"Hash already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7954:6:33"},"nodeType":"YulFunctionCall","src":"7954:49:33"},"nodeType":"YulExpressionStatement","src":"7954:49:33"},{"nodeType":"YulAssignment","src":"8012:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8024:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"8035:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8020:3:33"},"nodeType":"YulFunctionCall","src":"8020:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8012:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_79d92d9ad9002a23620b92eabf862edbf431a7e5dac84191f4393e1413b6a6d0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7852:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7866:4:33","type":""}],"src":"7701:343:33"},{"body":{"nodeType":"YulBlock","src":"8236:309:33","statements":[{"nodeType":"YulVariableDeclaration","src":"8246:27:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8266:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8260:5:33"},"nodeType":"YulFunctionCall","src":"8260:13:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8250:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8321:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"8329:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8317:3:33"},"nodeType":"YulFunctionCall","src":"8317:17:33"},{"name":"pos","nodeType":"YulIdentifier","src":"8336:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"8341:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8282:34:33"},"nodeType":"YulFunctionCall","src":"8282:66:33"},"nodeType":"YulExpressionStatement","src":"8282:66:33"},{"nodeType":"YulVariableDeclaration","src":"8357:29:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8374:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"8379:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8370:3:33"},"nodeType":"YulFunctionCall","src":"8370:16:33"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"8361:5:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8395:29:33","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8417:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8411:5:33"},"nodeType":"YulFunctionCall","src":"8411:13:33"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"8399:8:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8472:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"8480:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8468:3:33"},"nodeType":"YulFunctionCall","src":"8468:17:33"},{"name":"end_1","nodeType":"YulIdentifier","src":"8487:5:33"},{"name":"length_1","nodeType":"YulIdentifier","src":"8494:8:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8433:34:33"},"nodeType":"YulFunctionCall","src":"8433:70:33"},"nodeType":"YulExpressionStatement","src":"8433:70:33"},{"nodeType":"YulAssignment","src":"8512:27:33","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"8523:5:33"},{"name":"length_1","nodeType":"YulIdentifier","src":"8530:8:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8519:3:33"},"nodeType":"YulFunctionCall","src":"8519:20:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8512:3:33"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8204:3:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8209:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8217:6:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8228:3:33","type":""}],"src":"8049:496:33"},{"body":{"nodeType":"YulBlock","src":"8606:65:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8623:1:33","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"8626:3:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8616:6:33"},"nodeType":"YulFunctionCall","src":"8616:14:33"},"nodeType":"YulExpressionStatement","src":"8616:14:33"},{"nodeType":"YulAssignment","src":"8639:26:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8657:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8660:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8647:9:33"},"nodeType":"YulFunctionCall","src":"8647:18:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8639:4:33"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8589:3:33","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8597:4:33","type":""}],"src":"8550:121:33"},{"body":{"nodeType":"YulBlock","src":"8757:464:33","statements":[{"body":{"nodeType":"YulBlock","src":"8790:425:33","statements":[{"nodeType":"YulVariableDeclaration","src":"8804:11:33","value":{"kind":"number","nodeType":"YulLiteral","src":"8814:1:33","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8808:2:33","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8835:2:33"},{"name":"array","nodeType":"YulIdentifier","src":"8839:5:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8828:6:33"},"nodeType":"YulFunctionCall","src":"8828:17:33"},"nodeType":"YulExpressionStatement","src":"8828:17:33"},{"nodeType":"YulVariableDeclaration","src":"8858:31:33","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8880:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"8884:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8870:9:33"},"nodeType":"YulFunctionCall","src":"8870:19:33"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"8862:4:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8902:57:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8925:4:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8935:1:33","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8942:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"8954:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8938:3:33"},"nodeType":"YulFunctionCall","src":"8938:19:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8931:3:33"},"nodeType":"YulFunctionCall","src":"8931:27:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8921:3:33"},"nodeType":"YulFunctionCall","src":"8921:38:33"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8906:11:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"8996:23:33","statements":[{"nodeType":"YulAssignment","src":"8998:19:33","value":{"name":"data","nodeType":"YulIdentifier","src":"9013:4:33"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"8998:11:33"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8978:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"8990:4:33","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8975:2:33"},"nodeType":"YulFunctionCall","src":"8975:20:33"},"nodeType":"YulIf","src":"8972:47:33"},{"nodeType":"YulVariableDeclaration","src":"9032:41:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9046:4:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9056:1:33","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"9063:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"9068:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9059:3:33"},"nodeType":"YulFunctionCall","src":"9059:12:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9052:3:33"},"nodeType":"YulFunctionCall","src":"9052:20:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:33"},"nodeType":"YulFunctionCall","src":"9042:31:33"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9036:2:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9086:24:33","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"9099:11:33"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"9090:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9184:21:33","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9193:5:33"},{"name":"_1","nodeType":"YulIdentifier","src":"9200:2:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9186:6:33"},"nodeType":"YulFunctionCall","src":"9186:17:33"},"nodeType":"YulExpressionStatement","src":"9186:17:33"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9134:5:33"},{"name":"_2","nodeType":"YulIdentifier","src":"9141:2:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9131:2:33"},"nodeType":"YulFunctionCall","src":"9131:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9145:26:33","statements":[{"nodeType":"YulAssignment","src":"9147:22:33","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9160:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"9167:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9156:3:33"},"nodeType":"YulFunctionCall","src":"9156:13:33"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"9147:5:33"}]}]},"pre":{"nodeType":"YulBlock","src":"9127:3:33","statements":[]},"src":"9123:82:33"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8773:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"8778:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8770:2:33"},"nodeType":"YulFunctionCall","src":"8770:11:33"},"nodeType":"YulIf","src":"8767:448:33"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8729:5:33","type":""},{"name":"len","nodeType":"YulTypedName","src":"8736:3:33","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8741:10:33","type":""}],"src":"8676:545:33"},{"body":{"nodeType":"YulBlock","src":"9311:81:33","statements":[{"nodeType":"YulAssignment","src":"9321:65:33","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9336:4:33"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9354:1:33","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"9357:3:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9350:3:33"},"nodeType":"YulFunctionCall","src":"9350:11:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9367:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9363:3:33"},"nodeType":"YulFunctionCall","src":"9363:6:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9346:3:33"},"nodeType":"YulFunctionCall","src":"9346:24:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9342:3:33"},"nodeType":"YulFunctionCall","src":"9342:29:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9332:3:33"},"nodeType":"YulFunctionCall","src":"9332:40:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9378:1:33","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"9381:3:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9374:3:33"},"nodeType":"YulFunctionCall","src":"9374:11:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9329:2:33"},"nodeType":"YulFunctionCall","src":"9329:57:33"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"9321:4:33"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9288:4:33","type":""},{"name":"len","nodeType":"YulTypedName","src":"9294:3:33","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"9302:4:33","type":""}],"src":"9226:166:33"},{"body":{"nodeType":"YulBlock","src":"9493:1256:33","statements":[{"nodeType":"YulVariableDeclaration","src":"9503:24:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9523:3:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9517:5:33"},"nodeType":"YulFunctionCall","src":"9517:10:33"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"9507:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9570:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9572:16:33"},"nodeType":"YulFunctionCall","src":"9572:18:33"},"nodeType":"YulExpressionStatement","src":"9572:18:33"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9542:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"9550:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9539:2:33"},"nodeType":"YulFunctionCall","src":"9539:30:33"},"nodeType":"YulIf","src":"9536:56:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9645:4:33"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9683:4:33"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9677:5:33"},"nodeType":"YulFunctionCall","src":"9677:11:33"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"9651:25:33"},"nodeType":"YulFunctionCall","src":"9651:38:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"9691:6:33"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"9601:43:33"},"nodeType":"YulFunctionCall","src":"9601:97:33"},"nodeType":"YulExpressionStatement","src":"9601:97:33"},{"nodeType":"YulVariableDeclaration","src":"9707:18:33","value":{"kind":"number","nodeType":"YulLiteral","src":"9724:1:33","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"9711:9:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9734:23:33","value":{"kind":"number","nodeType":"YulLiteral","src":"9753:4:33","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"9738:11:33","type":""}]},{"nodeType":"YulAssignment","src":"9766:24:33","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9779:11:33"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9766:9:33"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9836:656:33","statements":[{"nodeType":"YulVariableDeclaration","src":"9850:35:33","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9869:6:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9881:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9877:3:33"},"nodeType":"YulFunctionCall","src":"9877:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9865:3:33"},"nodeType":"YulFunctionCall","src":"9865:20:33"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"9854:7:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9898:49:33","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9942:4:33"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"9912:29:33"},"nodeType":"YulFunctionCall","src":"9912:35:33"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"9902:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9960:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"9969:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9964:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"10047:172:33","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10072:6:33"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10090:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10095:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10086:3:33"},"nodeType":"YulFunctionCall","src":"10086:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10080:5:33"},"nodeType":"YulFunctionCall","src":"10080:26:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10065:6:33"},"nodeType":"YulFunctionCall","src":"10065:42:33"},"nodeType":"YulExpressionStatement","src":"10065:42:33"},{"nodeType":"YulAssignment","src":"10124:24:33","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10138:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"10146:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10134:3:33"},"nodeType":"YulFunctionCall","src":"10134:14:33"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10124:6:33"}]},{"nodeType":"YulAssignment","src":"10165:40:33","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10182:9:33"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"10193:11:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10178:3:33"},"nodeType":"YulFunctionCall","src":"10178:27:33"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10165:9:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9994:1:33"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"9997:7:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9991:2:33"},"nodeType":"YulFunctionCall","src":"9991:14:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10006:28:33","statements":[{"nodeType":"YulAssignment","src":"10008:24:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10017:1:33"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"10020:11:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10013:3:33"},"nodeType":"YulFunctionCall","src":"10013:19:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10008:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"9987:3:33","statements":[]},"src":"9983:236:33"},{"body":{"nodeType":"YulBlock","src":"10267:166:33","statements":[{"nodeType":"YulVariableDeclaration","src":"10285:43:33","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10312:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10317:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10308:3:33"},"nodeType":"YulFunctionCall","src":"10308:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10302:5:33"},"nodeType":"YulFunctionCall","src":"10302:26:33"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"10289:9:33","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10352:6:33"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"10364:9:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10391:1:33","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"10394:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10387:3:33"},"nodeType":"YulFunctionCall","src":"10387:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"10403:3:33","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10383:3:33"},"nodeType":"YulFunctionCall","src":"10383:24:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10413:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10409:3:33"},"nodeType":"YulFunctionCall","src":"10409:6:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10379:3:33"},"nodeType":"YulFunctionCall","src":"10379:37:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10375:3:33"},"nodeType":"YulFunctionCall","src":"10375:42:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10360:3:33"},"nodeType":"YulFunctionCall","src":"10360:58:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10345:6:33"},"nodeType":"YulFunctionCall","src":"10345:74:33"},"nodeType":"YulExpressionStatement","src":"10345:74:33"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"10238:7:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"10247:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10235:2:33"},"nodeType":"YulFunctionCall","src":"10235:19:33"},"nodeType":"YulIf","src":"10232:201:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10453:4:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10467:1:33","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"10470:6:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10463:3:33"},"nodeType":"YulFunctionCall","src":"10463:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"10479:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:33"},"nodeType":"YulFunctionCall","src":"10459:22:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10446:6:33"},"nodeType":"YulFunctionCall","src":"10446:36:33"},"nodeType":"YulExpressionStatement","src":"10446:36:33"}]},"nodeType":"YulCase","src":"9829:663:33","value":{"kind":"number","nodeType":"YulLiteral","src":"9834:1:33","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10509:234:33","statements":[{"nodeType":"YulVariableDeclaration","src":"10523:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"10536:1:33","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10527:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"10572:67:33","statements":[{"nodeType":"YulAssignment","src":"10590:35:33","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10609:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10614:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10605:3:33"},"nodeType":"YulFunctionCall","src":"10605:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10599:5:33"},"nodeType":"YulFunctionCall","src":"10599:26:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10590:5:33"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"10553:6:33"},"nodeType":"YulIf","src":"10550:89:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10659:4:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10718:5:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"10725:6:33"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"10665:52:33"},"nodeType":"YulFunctionCall","src":"10665:67:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10652:6:33"},"nodeType":"YulFunctionCall","src":"10652:81:33"},"nodeType":"YulExpressionStatement","src":"10652:81:33"}]},"nodeType":"YulCase","src":"10501:242:33","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9809:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"9817:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9806:2:33"},"nodeType":"YulFunctionCall","src":"9806:14:33"},"nodeType":"YulSwitch","src":"9799:944:33"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9478:4:33","type":""},{"name":"src","nodeType":"YulTypedName","src":"9484:3:33","type":""}],"src":"9397:1352:33"},{"body":{"nodeType":"YulBlock","src":"10957:286:33","statements":[{"nodeType":"YulVariableDeclaration","src":"10967:29:33","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10985:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10990:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10981:3:33"},"nodeType":"YulFunctionCall","src":"10981:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"10994:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10977:3:33"},"nodeType":"YulFunctionCall","src":"10977:19:33"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10971:2:33","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11012:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11027:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"11035:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11023:3:33"},"nodeType":"YulFunctionCall","src":"11023:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11005:6:33"},"nodeType":"YulFunctionCall","src":"11005:34:33"},"nodeType":"YulExpressionStatement","src":"11005:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11059:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11070:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11055:3:33"},"nodeType":"YulFunctionCall","src":"11055:18:33"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11079:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"11087:2:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11075:3:33"},"nodeType":"YulFunctionCall","src":"11075:15:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11048:6:33"},"nodeType":"YulFunctionCall","src":"11048:43:33"},"nodeType":"YulExpressionStatement","src":"11048:43:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11111:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11122:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11107:3:33"},"nodeType":"YulFunctionCall","src":"11107:18:33"},{"name":"value2","nodeType":"YulIdentifier","src":"11127:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11100:6:33"},"nodeType":"YulFunctionCall","src":"11100:34:33"},"nodeType":"YulExpressionStatement","src":"11100:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11154:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11165:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11150:3:33"},"nodeType":"YulFunctionCall","src":"11150:18:33"},{"kind":"number","nodeType":"YulLiteral","src":"11170:3:33","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11143:6:33"},"nodeType":"YulFunctionCall","src":"11143:31:33"},"nodeType":"YulExpressionStatement","src":"11143:31:33"},{"nodeType":"YulAssignment","src":"11183:54:33","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11209:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11221:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11232:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11217:3:33"},"nodeType":"YulFunctionCall","src":"11217:19:33"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"11191:17:33"},"nodeType":"YulFunctionCall","src":"11191:46:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11183:4:33"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10902:9:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10913:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10921:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10929:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10937:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10948:4:33","type":""}],"src":"10754:489:33"},{"body":{"nodeType":"YulBlock","src":"11328:169:33","statements":[{"body":{"nodeType":"YulBlock","src":"11374:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11383:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11386:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11376:6:33"},"nodeType":"YulFunctionCall","src":"11376:12:33"},"nodeType":"YulExpressionStatement","src":"11376:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11349:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"11358:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11345:3:33"},"nodeType":"YulFunctionCall","src":"11345:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"11370:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11341:3:33"},"nodeType":"YulFunctionCall","src":"11341:32:33"},"nodeType":"YulIf","src":"11338:52:33"},{"nodeType":"YulVariableDeclaration","src":"11399:29:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11418:9:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11412:5:33"},"nodeType":"YulFunctionCall","src":"11412:16:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11403:5:33","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11461:5:33"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"11437:23:33"},"nodeType":"YulFunctionCall","src":"11437:30:33"},"nodeType":"YulExpressionStatement","src":"11437:30:33"},{"nodeType":"YulAssignment","src":"11476:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"11486:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11476:6:33"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11294:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11305:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11317:6:33","type":""}],"src":"11248:249:33"},{"body":{"nodeType":"YulBlock","src":"11631:145:33","statements":[{"nodeType":"YulAssignment","src":"11641:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11653:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11664:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11649:3:33"},"nodeType":"YulFunctionCall","src":"11649:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11641:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11683:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11698:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11714:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11719:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11710:3:33"},"nodeType":"YulFunctionCall","src":"11710:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"11723:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11706:3:33"},"nodeType":"YulFunctionCall","src":"11706:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11694:3:33"},"nodeType":"YulFunctionCall","src":"11694:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11676:6:33"},"nodeType":"YulFunctionCall","src":"11676:51:33"},"nodeType":"YulExpressionStatement","src":"11676:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11747:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11758:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11743:3:33"},"nodeType":"YulFunctionCall","src":"11743:18:33"},{"name":"value1","nodeType":"YulIdentifier","src":"11763:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11736:6:33"},"nodeType":"YulFunctionCall","src":"11736:34:33"},"nodeType":"YulExpressionStatement","src":"11736:34:33"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11592:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11603:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11611:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11622:4:33","type":""}],"src":"11502:274:33"},{"body":{"nodeType":"YulBlock","src":"11813:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11830:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11837:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11842:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11833:3:33"},"nodeType":"YulFunctionCall","src":"11833:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11823:6:33"},"nodeType":"YulFunctionCall","src":"11823:31:33"},"nodeType":"YulExpressionStatement","src":"11823:31:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11870:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11873:4:33","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11863:6:33"},"nodeType":"YulFunctionCall","src":"11863:15:33"},"nodeType":"YulExpressionStatement","src":"11863:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11894:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11897:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11887:6:33"},"nodeType":"YulFunctionCall","src":"11887:15:33"},"nodeType":"YulExpressionStatement","src":"11887:15:33"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"11781:127:33"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Token ID does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e240009b8d786292eb67999f675f816161279314f3e5b6c116ecef7638f59a91__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Hash not minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_14ddb257f1ec202d0225b5cd7757b4632f49f22eaa94e372cab5340091be23ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Only Hashpin contract can mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_79d92d9ad9002a23620b92eabf862edbf431a7e5dac84191f4393e1413b6a6d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Hash already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xE9427CBB EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xF79EC5C3 EQ PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x8FAA9EDF EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x9456F7E9 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xB6483BAB EQ PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x59383991 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x80813288 EQ PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x129B3E27 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x122B JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1273 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x170 PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x234 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST PUSH2 0x234 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D9 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x12D9 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH2 0x18D PUSH2 0x643 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x12F4 JUMP JUMPDEST PUSH2 0x652 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x65D JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x12D9 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2DEDFC83 PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x37C JUMPI POP PUSH2 0x37C DUP3 PUSH2 0x917 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x391 SWAP1 PUSH2 0x14DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3BD SWAP1 PUSH2 0x14DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3ED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41F DUP3 PUSH2 0x93C JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37C JUMP JUMPDEST PUSH2 0x448 DUP3 DUP3 CALLER PUSH2 0x975 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP4 DUP4 CALLER PUSH2 0x982 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x472 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4F7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x782 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37C DUP3 PUSH2 0x93C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x557 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x561 PUSH1 0x0 PUSH2 0xAA8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x56B PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20494420646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x12185CDA081B9BDD081B5A5B9D1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x391 SWAP1 PUSH2 0x14DC JUMP JUMPDEST PUSH2 0x448 CALLER DUP4 DUP4 PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204861736870696E20636F6E74726163742063616E206D696E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x12185CDA08185B1C9958591E481B5A5B9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP4 PUSH2 0x733 DUP7 DUP3 PUSH2 0xB99 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x779 JUMPI PUSH2 0x779 DUP2 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xBB3 SWAP3 POP POP POP JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x78D DUP5 DUP5 DUP5 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x4D6 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7A5 DUP3 PUSH2 0x93C JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x7BF SWAP1 PUSH2 0x14DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7EB SWAP1 PUSH2 0x14DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x838 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x80D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x838 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x856 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x868 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x89A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x882 SWAP3 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A3 DUP5 PUSH2 0xD2E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x8E1 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH2 0x914 DUP2 PUSH2 0xAA8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x37C JUMPI POP PUSH2 0x37C DUP3 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH2 0x4F7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x9AF JUMPI PUSH2 0x9AF DUP2 DUP5 DUP7 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x9ED JUMPI PUSH2 0x9CC PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xA1C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x448 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xBCB DUP3 DUP3 PUSH2 0x158B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC45 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x164B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC80 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC7D SWAP2 DUP2 ADD SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCE9 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCE1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xD25 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD39 DUP3 PUSH2 0x93C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xD51 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD71 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD9C JUMP JUMPDEST DUP1 PUSH2 0xD7B DUP5 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD8C SWAP3 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xDD4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x37C JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x37C JUMP JUMPDEST DUP1 DUP1 PUSH2 0xE07 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xEC9 JUMPI PUSH1 0x0 PUSH2 0xE17 DUP5 PUSH2 0x93C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE43 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE56 JUMPI POP PUSH2 0xE54 DUP2 DUP5 PUSH2 0x8AB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE7F JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEC7 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xF04 DUP4 DUP4 DUP4 PUSH2 0x1008 JUMP JUMPDEST PUSH2 0x4F7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF32 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x472 JUMP JUMPDEST PUSH2 0xF67 DUP4 DUP4 PUSH2 0x106B JUMP JUMPDEST PUSH2 0x4F7 CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF82 DUP4 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFA2 JUMPI PUSH2 0xFA2 PUSH2 0x13B7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFCC JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xFD6 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8A3 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1042 JUMPI POP PUSH2 0x1042 DUP5 DUP5 PUSH2 0x8AB JUMP JUMPDEST DUP1 PUSH2 0x8A3 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1095 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A3 DUP4 DUP4 PUSH1 0x0 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x110F JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x113B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1159 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1171 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1185 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1197 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x37C JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD9C DUP2 PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11F6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11DE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1217 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xD9C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x126E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128F DUP4 PUSH2 0x1257 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12BB DUP5 PUSH2 0x1257 JUMP JUMPDEST SWAP3 POP PUSH2 0x12C9 PUSH1 0x20 DUP6 ADD PUSH2 0x1257 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9C DUP3 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1310 DUP4 PUSH2 0x1257 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134F DUP6 PUSH2 0x1257 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x13A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13EC DUP6 PUSH2 0x1257 JUMP JUMPDEST SWAP4 POP PUSH2 0x13FA PUSH1 0x20 DUP7 ADD PUSH2 0x1257 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x141E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1444 JUMPI PUSH2 0x1444 PUSH2 0x13B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x146C JUMPI PUSH2 0x146C PUSH2 0x13B7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C5 DUP4 PUSH2 0x1257 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D3 PUSH1 0x20 DUP5 ADD PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1510 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1528 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x11DB JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x153C DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x11DB JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x156C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD25 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1578 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A5 PUSH2 0x13B7 JUMP JUMPDEST PUSH2 0x15B9 DUP2 PUSH2 0x15B3 DUP5 SLOAD PUSH2 0x14DC JUMP JUMPDEST DUP5 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x15EE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x15D6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x161D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x15FE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x163B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x167E SWAP1 DUP4 ADD DUP5 PUSH2 0x11FF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x169A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD9C DUP2 PUSH2 0x11A8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C SWAP16 MSTORE 0x4C 0x29 0xC5 0xC6 0xAD PUSH16 0xAAC512B7A871993AAA6C07722342CC1A DUP12 AND SAR 0x2A 0xF7 0xBF PUSH24 0x64736F6C6343000814003300000000000000000000000000 ","sourceMap":"332:3566:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3648:248;;;;;;:::i;:::-;;:::i;:::-;;;565:14:33;;558:22;540:41;;528:2;513:18;3648:248:30;;;;;;;;2364:89:10;;;:::i;:::-;;;;;;;:::i;3496:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:33;;;1679:51;;1667:2;1652:18;3496:154:10;1533:203:33;3322:113:10;;;;;;:::i;:::-;;:::i;:::-;;3340:105:30;;;;;;:::i;:::-;3399:4;3422:16;;;:10;:16;;;;;;;;;3340:105;4142:578:10;;;;;;:::i;:::-;;:::i;4786:132::-;;;;;;:::i;:::-;;:::i;1318:104:30:-;;;;;;:::i;:::-;1410:4;1318:104;;;;2842:25:33;;;2830:2;2815:18;1318:104:30;2696:177:33;2184:118:10;;;;;;:::i;:::-;;:::i;1919:208::-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1638:85::-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;1026:124:30;;;;;;:::i;:::-;;:::i;2889:281::-;;;;;;:::i;:::-;;:::i;2517:93:10:-;;;:::i;3717:144::-;;;;;;:::i;:::-;;:::i;2008:704:30:-;;;;;;:::i;:::-;;:::i;4984:233:10:-;;;;;;:::i;:::-;;:::i;1211:593:13:-;;;;;;:::i;:::-;;:::i;582:30:30:-;;;;;-1:-1:-1;;;;;582:30:30;;;3927:153:10;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;464:42:30:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3648:248;3756:4;-1:-1:-1;;;;;;3792:44:30;;-1:-1:-1;;;3792:44:30;;:97;;;3853:36;3877:11;3853:23;:36::i;:::-;3772:117;3648:248;-1:-1:-1;;3648:248:30:o;2364:89:10:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;-1:-1:-1;6033:7:10;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:10;3622:21;5963:127;3322:113;3393:35;3402:2;3406:7;735:10:18;3393:8:10;:35::i;:::-;3322:113;;:::o;4142:578::-;-1:-1:-1;;;;;4236:16:10;;4232:87;;4275:33;;-1:-1:-1;;;4275:33:10;;4305:1;4275:33;;;1679:51:33;1652:18;;4275:33:10;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;735:10:18;4561:7:10;:34::i;:::-;4537:58;;4626:4;-1:-1:-1;;;;;4609:21:10;:13;-1:-1:-1;;;;;4609:21:10;;4605:109;;4653:50;;-1:-1:-1;;;4653:50:10;;-1:-1:-1;;;;;6524:15:33;;;4653:50:10;;;6506:34:33;6556:18;;;6549:34;;;6619:15;;6599:18;;;6592:43;6441:18;;4653:50:10;6266:375:33;4605:109:10;4222:498;4142:578;;;:::o;4786:132::-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2184:118::-;2247:7;2273:22;2287:7;2273:13;:22::i;1919:208::-;1982:7;-1:-1:-1;;;;;2005:19:10;;2001:87;;2047:30;;-1:-1:-1;;;2047:30:10;;2074:1;2047:30;;;1679:51:33;1652:18;;2047:30:10;1533:203:33;2001:87:10;-1:-1:-1;;;;;;2104:16:10;;;;;:9;:16;;;;;;;1919:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1026:124:30:-;1531:13:0;:11;:13::i;:::-;1109:15:30::1;:34:::0;;-1:-1:-1;;;;;;1109:34:30::1;-1:-1:-1::0;;;;;1109:34:30;;;::::1;::::0;;;::::1;::::0;;1026:124::o;2889:281::-;2955:7;5824:16:10;;;:7;:16;;;;;;3003:7:30;;-1:-1:-1;;;;;5824:16:10;3021:67:30;;;;-1:-1:-1;;;3021:67:30;;6848:2:33;3021:67:30;;;6830:21:33;6887:2;6867:18;;;6860:30;6926:25;6906:18;;;6899:53;6969:18;;3021:67:30;6646:347:33;3021:67:30;3106:16;;;;:10;:16;;;;;;;;3098:44;;;;-1:-1:-1;;;3098:44:30;;7200:2:33;3098:44:30;;;7182:21:33;7239:2;7219:18;;;7212:30;-1:-1:-1;;;7258:18:33;;;7251:45;7313:18;;3098:44:30;6998:339:33;2517:93:10;2564:13;2596:7;2589:14;;;;;:::i;3717:144::-;3802:52;735:10:18;3835:8:10;3845;3802:18;:52::i;2008:704:30:-;2141:15;;2100:7;;-1:-1:-1;;;;;2141:15:30;2127:10;:29;2119:72;;;;-1:-1:-1;;;2119:72:30;;7544:2:33;2119:72:30;;;7526:21:33;7583:2;7563:18;;;7556:30;7622:32;7602:18;;;7595:60;7672:18;;2119:72:30;7342:354:33;2119:72:30;2210:16;;;;:10;:16;;;;;;;;2209:17;2201:49;;;;-1:-1:-1;;;2201:49:30;;7903:2:33;2201:49:30;;;7885:21:33;7942:2;7922:18;;;7915:30;-1:-1:-1;;;7961:18:33;;;7954:49;8020:18;;2201:49:30;7701:343:33;2201:49:30;2316:15;2407:16;;;:10;:16;;;;;:23;;-1:-1:-1;;2407:23:30;2426:4;2407:23;;;:16;2490:22;2500:2;2407:16;2490:9;:22::i;:::-;2588:19;;2584:89;;2623:39;2636:7;2652:8;;2623:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2623:12:30;;-1:-1:-1;;;2623:39:30:i;:::-;2698:7;2008:704;-1:-1:-1;;;;;2008:704:30:o;4984:233:10:-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;735:10:18;5186:4:10;5192:2;5196:7;5205:4;5138:33;:72::i;1211:593:13:-;1284:13;1309:22;1323:7;1309:13;:22::i;:::-;-1:-1:-1;1342:23:13;1368:19;;;:10;:19;;;;;1342:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:18;1418:10;3249:9:10;;;;;;;;;-1:-1:-1;3249:9:10;;;3173:92;1418:10:13;1397:31;;1507:4;1501:18;1523:1;1501:23;1497:70;;-1:-1:-1;1547:9:13;1211:593;-1:-1:-1;;1211:593:13:o;1497:70::-;1666:23;;:27;1662:95;;1730:4;1736:9;1716:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1709:37;;;;1211:593;;;:::o;1662:95::-;1774:23;1789:7;1774:14;:23::i;:::-;1767:30;1211:593;-1:-1:-1;;;;1211:593:13:o;3927:153:10:-;-1:-1:-1;;;;;4038:25:10;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3927:153::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1679:51:33::0;1652:18;;2672:31:0::1;1533:203:33::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;938:207:13:-;1040:4;-1:-1:-1;;;;;;1063:35:13;;-1:-1:-1;;;1063:35:13;;:75;;;1102:36;1126:11;1102:23;:36::i;16212:241:10:-;16275:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:10;;16337:88;;16383:31;;-1:-1:-1;;;16383:31:10;;;;;2842:25:33;;;2815:18;;16383:31:10;2696:177:33;14492:120:10;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;8861:795::-;8947:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:10;;;;9058:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;-1:-1:-1;;;;;9184:18:10;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;-1:-1:-1;;;;;9391:15:10;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9391:20:10;;;9180:256;-1:-1:-1;;;;;9450:16:10;;;9446:107;;-1:-1:-1;;;;;9510:13:10;;;;;;:9;:13;;;;;:18;;9527:1;9510:18;;;9446:107;9563:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9563:21:10;-1:-1:-1;;;;;9563:21:10;;;;;;;;;9600:27;;9563:16;;9600:27;;;;;;;9645:4;8861:795;-1:-1:-1;;;;8861:795:10:o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:18;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:18;1901:40:0;;;1679:51:33;1652:18;;1901:40:0;1533:203:33;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15665:312:10:-;-1:-1:-1;;;;;15772:22:10;;15768:91;;15817:31;;-1:-1:-1;;;15817:31:10;;-1:-1:-1;;;;;1697:32:33;;15817:31:10;;;1679:51:33;1652:18;;15817:31:10;1533:203:33;15768:91:10;-1:-1:-1;;;;;15868:25:10;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15868:46:10;;;;;;;;;;15929:41;;540::33;;;15929::10;;513:18:33;15929:41:10;;;;;;;15665:312;;;:::o;10656:100::-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;1923:167:13:-;2014:19;;;;:10;:19;;;;;:31;2036:9;2014:19;:31;:::i;:::-;-1:-1:-1;2060:23:13;;2842:25:33;;;2060:23:13;;2830:2:33;2815:18;2060:23:13;;;;;;;1923:167;;:::o;985:924:15:-;-1:-1:-1;;;;;1165:14:15;;;:18;1161:742;;1203:67;;-1:-1:-1;;;1203:67:15;;-1:-1:-1;;;;;1203:36:15;;;;;:67;;1240:8;;1250:4;;1256:7;;1265:4;;1203:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:67:15;;;;;;;;-1:-1:-1;;1203:67:15;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:6;:13;1577:1;1560:18;1556:323;;1664:39;;-1:-1:-1;;;1664:39:15;;-1:-1:-1;;;;;1697:32:33;;1664:39:15;;;1679:51:33;1652:18;;1664:39:15;1533:203:33;1556:323:15;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;-1:-1:-1;;;;;;1317:51:15;;-1:-1:-1;;;1317:51:15;1313:182;;1437:39;;-1:-1:-1;;;1437:39:15;;-1:-1:-1;;;;;1697:32:33;;1437:39:15;;;1679:51:33;1652:18;;1437:39:15;1533:203:33;1313:182:15;1271:238;1199:694;985:924;;;;;:::o;2676:255:10:-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;3249:9;;;;;;;;;-1:-1:-1;3249:9:10;;;3173:92;2822:10;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;2676:255;-1:-1:-1;;;2676:255:10:o;1560:300::-;1662:4;-1:-1:-1;;;;;;1697:40:10;;-1:-1:-1;;;1697:40:10;;:104;;-1:-1:-1;;;;;;;1753:48:10;;-1:-1:-1;;;1753:48:10;1697:104;:156;;;-1:-1:-1;;;;;;;;;;862:40:23;;;1817:36:10;763:146:23;14794:662:10;14954:9;:31;;;-1:-1:-1;;;;;;14967:18:10;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;-1:-1:-1;;;;;;15167:18:10;;;;;;:35;;;15198:4;-1:-1:-1;;;;;15189:13:10;:5;-1:-1:-1;;;;;15189:13:10;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15263:27;;-1:-1:-1;;;15263:27:10;;-1:-1:-1;;;;;1697:32:33;;15263:27:10;;;1679:51:33;1652:18;;15263:27:10;1533:203:33;15163:142:10;15323:9;15319:81;;;15377:7;15373:2;-1:-1:-1;;;;;15357:28:10;15366:5;-1:-1:-1;;;;;15357:28:10;;;;;;;;;;;15319:81;14987:423;14950:460;-1:-1:-1;;15420:24:10;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15420:29:10;-1:-1:-1;;;;;15420:29:10;;;;;;;;;;14794:662::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;-1:-1:-1;;;;;7275:19:10;;7271:186;;7321:31;;-1:-1:-1;;;7321:31:10;;;;;2842:25:33;;;2815:18;;7321:31:10;2696:177:33;7271:186:10;7398:44;;-1:-1:-1;;;7398:44:10;;-1:-1:-1;;;;;11694:32:33;;7398:44:10;;;11676:51:33;11743:18;;;11736:34;;;11649:18;;7398:44:10;11502:274:33;10977:207:10;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;735:10:18;11155:1:10;11159:2;11163:7;11172:4;11099:33;:78::i;987:632:22:-;1043:13;1092:14;1109:17;1120:5;1109:10;:17::i;:::-;1129:1;1109:21;1092:38;;1144:20;1178:6;1167:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1167:18:22;-1:-1:-1;1144:41:22;-1:-1:-1;1274:28:22;;;1290:2;1274:28;1329:247;-1:-1:-1;;1360:5:22;-1:-1:-1;;;1459:2:22;1448:14;;1443:32;1360:5;1430:46;1520:2;1511:11;;;-1:-1:-1;1540:21:22;1329:247;1540:21;-1:-1:-1;1596:6:22;987:632;-1:-1:-1;;;987:632:22:o;6401:272:10:-;6504:4;-1:-1:-1;;;;;6539:21:10;;;;;;:127;;;6586:7;-1:-1:-1;;;;;6577:16:10;:5;-1:-1:-1;;;;;6577:16:10;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:88;;;-1:-1:-1;;6033:7:10;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:10;;;6633:32;;;;6520:146;-1:-1:-1;6401:272:10:o;9978:327::-;-1:-1:-1;;;;;10045:16:10;;10041:87;;10084:33;;-1:-1:-1;;;10084:33:10;;10114:1;10084:33;;;1679:51:33;1652:18;;10084:33:10;1533:203:33;10041:87:10;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;-1:-1:-1;;;;;;10207:27:10;;;10203:96;;10257:31;;-1:-1:-1;;;10257:31:10;;10285:1;10257:31;;;1679:51:33;1652:18;;10257:31:10;1533:203:33;25316:916:25;25369:7;;-1:-1:-1;;;25444:17:25;;25440:103;;-1:-1:-1;;;25481:17:25;;;-1:-1:-1;25526:2:25;25516:12;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;-1:-1:-1;25642:2:25;25632:12;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;-1:-1:-1;25758:2:25;25748:12;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;-1:-1:-1;25872:1:25;25862:11;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;-1:-1:-1;25985:1:25;25975:11;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;-1:-1:-1;26098:1:25;26088:11;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;26219:6;25316:916;-1:-1:-1;;25316:916:25:o;14:131:33:-;-1:-1:-1;;;;;;88:32:33;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:33;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:33;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:33:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:33;;1348:180;-1:-1:-1;1348:180:33:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:33;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:33:o;2363:328::-;2440:6;2448;2456;2509:2;2497:9;2488:7;2484:23;2480:32;2477:52;;;2525:1;2522;2515:12;2477:52;2548:29;2567:9;2548:29;:::i;:::-;2538:39;;2596:38;2630:2;2619:9;2615:18;2596:38;:::i;:::-;2586:48;;2681:2;2670:9;2666:18;2653:32;2643:42;;2363:328;;;;;:::o;2878:186::-;2937:6;2990:2;2978:9;2969:7;2965:23;2961:32;2958:52;;;3006:1;3003;2996:12;2958:52;3029:29;3048:9;3029:29;:::i;3251:347::-;3316:6;3324;3377:2;3365:9;3356:7;3352:23;3348:32;3345:52;;;3393:1;3390;3383:12;3345:52;3416:29;3435:9;3416:29;:::i;:::-;3406:39;;3495:2;3484:9;3480:18;3467:32;3542:5;3535:13;3528:21;3521:5;3518:32;3508:60;;3564:1;3561;3554:12;3508:60;3587:5;3577:15;;;3251:347;;;;;:::o;3603:733::-;3691:6;3699;3707;3715;3768:2;3756:9;3747:7;3743:23;3739:32;3736:52;;;3784:1;3781;3774:12;3736:52;3807:29;3826:9;3807:29;:::i;:::-;3797:39;;3883:2;3872:9;3868:18;3855:32;3845:42;;3938:2;3927:9;3923:18;3910:32;3961:18;4002:2;3994:6;3991:14;3988:34;;;4018:1;4015;4008:12;3988:34;4056:6;4045:9;4041:22;4031:32;;4101:7;4094:4;4090:2;4086:13;4082:27;4072:55;;4123:1;4120;4113:12;4072:55;4163:2;4150:16;4189:2;4181:6;4178:14;4175:34;;;4205:1;4202;4195:12;4175:34;4250:7;4245:2;4236:6;4232:2;4228:15;4224:24;4221:37;4218:57;;;4271:1;4268;4261:12;4218:57;3603:733;;;;-1:-1:-1;;4302:2:33;4294:11;;-1:-1:-1;;;3603:733:33:o;4341:127::-;4402:10;4397:3;4393:20;4390:1;4383:31;4433:4;4430:1;4423:15;4457:4;4454:1;4447:15;4473:1138;4568:6;4576;4584;4592;4645:3;4633:9;4624:7;4620:23;4616:33;4613:53;;;4662:1;4659;4652:12;4613:53;4685:29;4704:9;4685:29;:::i;:::-;4675:39;;4733:38;4767:2;4756:9;4752:18;4733:38;:::i;:::-;4723:48;;4818:2;4807:9;4803:18;4790:32;4780:42;;4873:2;4862:9;4858:18;4845:32;4896:18;4937:2;4929:6;4926:14;4923:34;;;4953:1;4950;4943:12;4923:34;4991:6;4980:9;4976:22;4966:32;;5036:7;5029:4;5025:2;5021:13;5017:27;5007:55;;5058:1;5055;5048:12;5007:55;5094:2;5081:16;5116:2;5112;5109:10;5106:36;;;5122:18;;:::i;:::-;5197:2;5191:9;5165:2;5251:13;;-1:-1:-1;;5247:22:33;;;5271:2;5243:31;5239:40;5227:53;;;5295:18;;;5315:22;;;5292:46;5289:72;;;5341:18;;:::i;:::-;5381:10;5377:2;5370:22;5416:2;5408:6;5401:18;5456:7;5451:2;5446;5442;5438:11;5434:20;5431:33;5428:53;;;5477:1;5474;5467:12;5428:53;5533:2;5528;5524;5520:11;5515:2;5507:6;5503:15;5490:46;5578:1;5573:2;5568;5560:6;5556:15;5552:24;5545:35;5599:6;5589:16;;;;;;;4473:1138;;;;;;;:::o;5616:260::-;5684:6;5692;5745:2;5733:9;5724:7;5720:23;5716:32;5713:52;;;5761:1;5758;5751:12;5713:52;5784:29;5803:9;5784:29;:::i;:::-;5774:39;;5832:38;5866:2;5855:9;5851:18;5832:38;:::i;:::-;5822:48;;5616:260;;;;;:::o;5881:380::-;5960:1;5956:12;;;;6003;;;6024:61;;6078:4;6070:6;6066:17;6056:27;;6024:61;6131:2;6123:6;6120:14;6100:18;6097:38;6094:161;;6177:10;6172:3;6168:20;6165:1;6158:31;6212:4;6209:1;6202:15;6240:4;6237:1;6230:15;6094:161;;5881:380;;;:::o;8049:496::-;8228:3;8266:6;8260:13;8282:66;8341:6;8336:3;8329:4;8321:6;8317:17;8282:66;:::i;:::-;8411:13;;8370:16;;;;8433:70;8411:13;8370:16;8480:4;8468:17;;8433:70;:::i;:::-;8519:20;;8049:496;-1:-1:-1;;;;8049:496:33:o;8676:545::-;8778:2;8773:3;8770:11;8767:448;;;8814:1;8839:5;8835:2;8828:17;8884:4;8880:2;8870:19;8954:2;8942:10;8938:19;8935:1;8931:27;8925:4;8921:38;8990:4;8978:10;8975:20;8972:47;;;-1:-1:-1;9013:4:33;8972:47;9068:2;9063:3;9059:12;9056:1;9052:20;9046:4;9042:31;9032:41;;9123:82;9141:2;9134:5;9131:13;9123:82;;;9186:17;;;9167:1;9156:13;9123:82;;9397:1352;9523:3;9517:10;9550:18;9542:6;9539:30;9536:56;;;9572:18;;:::i;:::-;9601:97;9691:6;9651:38;9683:4;9677:11;9651:38;:::i;:::-;9645:4;9601:97;:::i;:::-;9753:4;;9817:2;9806:14;;9834:1;9829:663;;;;10536:1;10553:6;10550:89;;;-1:-1:-1;10605:19:33;;;10599:26;10550:89;-1:-1:-1;;9354:1:33;9350:11;;;9346:24;9342:29;9332:40;9378:1;9374:11;;;9329:57;10652:81;;9799:944;;9829:663;8623:1;8616:14;;;8660:4;8647:18;;-1:-1:-1;;9865:20:33;;;9983:236;9997:7;9994:1;9991:14;9983:236;;;10086:19;;;10080:26;10065:42;;10178:27;;;;10146:1;10134:14;;;;10013:19;;9983:236;;;9987:3;10247:6;10238:7;10235:19;10232:201;;;10308:19;;;10302:26;-1:-1:-1;;10391:1:33;10387:14;;;10403:3;10383:24;10379:37;10375:42;10360:58;10345:74;;10232:201;-1:-1:-1;;;;;10479:1:33;10463:14;;;10459:22;10446:36;;-1:-1:-1;9397:1352:33:o;10754:489::-;-1:-1:-1;;;;;11023:15:33;;;11005:34;;11075:15;;11070:2;11055:18;;11048:43;11122:2;11107:18;;11100:34;;;11170:3;11165:2;11150:18;;11143:31;;;10948:4;;11191:46;;11217:19;;11209:6;11191:46;:::i;:::-;11183:54;10754:489;-1:-1:-1;;;;;;10754:489:33:o;11248:249::-;11317:6;11370:2;11358:9;11349:7;11345:23;11341:32;11338:52;;;11386:1;11383;11376:12;11338:52;11418:9;11412:16;11437:30;11461:5;11437:30;:::i"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getHashByTokenId(uint256)":"9456f7e9","hashMinted(bytes32)":"f79ec5c3","hashToTokenID(bytes32)":"59383991","hashpinContract()":"e9427cbb","isApprovedForAll(address,address)":"e985e9c5","isHashMinted(bytes32)":"129b3e27","mint(address,bytes32,bytes)":"b6483bab","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setHashpinContract(address)":"8faa9edf","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenIDToHash(uint256)":"80813288","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getHashByTokenId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hashMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"hashToTokenID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hashpinContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isHashMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hashpinContract\",\"type\":\"address\"}],\"name\":\"setHashpinContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenIDToHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Adapter for minting ERC-721 tokens for claimed hashes\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor\",\"params\":{\"name\":\"The name of the NFT collection\",\"symbol\":\"The symbol of the NFT collection\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getHashByTokenId(uint256)\":{\"details\":\"Get the hash associated with a token ID\",\"params\":{\"tokenId\":\"The token ID to query\"},\"returns\":{\"_0\":\"hash The hash associated with the token\"}},\"hashToTokenID(bytes32)\":{\"details\":\"Convert a bytes32 hash to a uint256 token ID\",\"params\":{\"hash\":\"The hash to convert\"},\"returns\":{\"_0\":\"tokenId The resulting token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isHashMinted(bytes32)\":{\"details\":\"Check if a hash has been minted as an NFT\",\"params\":{\"hash\":\"The hash to check\"},\"returns\":{\"_0\":\"bool True if the hash has been minted\"}},\"mint(address,bytes32,bytes)\":{\"details\":\"Mints an NFT representing the claimed hash\",\"params\":{\"hash\":\"The hash being claimed\",\"metadata\":\"Additional metadata for the NFT (token URI as bytes)\",\"to\":\"The address that will receive the NFT\"},\"returns\":{\"_0\":\"tokenId The ID of the newly minted NFT\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setHashpinContract(address)\":{\"details\":\"Sets the Hashpin contract address\",\"params\":{\"_hashpinContract\":\"The address of the Hashpin contract\"}},\"supportsInterface(bytes4)\":{\"details\":\"Checks if the contract supports a given interface\",\"params\":{\"interfaceId\":\"The interface identifier\"},\"returns\":{\"_0\":\"bool True if the contract supports the interface\"}},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenIDToHash(uint256)\":{\"details\":\"Convert a uint256 token ID to a bytes32 hash\",\"params\":{\"tokenId\":\"The token ID to convert\"},\"returns\":{\"_0\":\"hash The resulting hash\"}},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ERC721HashpinAdapter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/adapters/ERC721HashpinAdapter.sol\":\"ERC721HashpinAdapter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/adapters/ERC721HashpinAdapter.sol\":{\"keccak256\":\"0x7676f92bff25cd836e463ef5ff59e96ae7ad20d11fcef7aa5cae8a3ac879ce0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df3f9e226dedaa8d033b278f2f75ac9cbdef61e1025f964e8f80e82bdeb177d3\",\"dweb:/ipfs/QmV9nd88YrMyckwqEtEUGnBDo1KxvevuQYsoiuLESBNqC8\"]},\"contracts/interfaces/IHashpinNFT.sol\":{\"keccak256\":\"0x93ecf9a21afeb5ee8cc693d23f039f13742f08cca10dc6479b40462b085dd00e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://755faef1206621c8bf95f7b87518d977b8eff42bdcb2ab7c1891b0461df03e6b\",\"dweb:/ipfs/QmXj54Jgbsz3GR618a9WWpUpuXA2sTSWYSM4SiWMsdKVzi\"]}},\"version\":1}"}},"contracts/interfaces/IHashpinNFT.sol":{"IHashpinNFT":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"metadata","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"mint(address,bytes32,bytes)":"b6483bab","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for NFT adapters that can mint tokens for claimed hashes\",\"kind\":\"dev\",\"methods\":{\"mint(address,bytes32,bytes)\":{\"details\":\"Mints an NFT representing the claimed hash\",\"params\":{\"hash\":\"The hash being claimed\",\"metadata\":\"Additional metadata for the NFT (e.g., token URI for ERC-721)\",\"to\":\"The address that will receive the NFT\"},\"returns\":{\"tokenId\":\"The ID of the newly minted NFT\"}},\"supportsInterface(bytes4)\":{\"details\":\"Checks if the contract supports a given interface\",\"params\":{\"interfaceId\":\"The interface identifier\"},\"returns\":{\"_0\":\"bool True if the contract supports the interface\"}}},\"title\":\"IHashpinNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IHashpinNFT.sol\":\"IHashpinNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IHashpinNFT.sol\":{\"keccak256\":\"0x93ecf9a21afeb5ee8cc693d23f039f13742f08cca10dc6479b40462b085dd00e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://755faef1206621c8bf95f7b87518d977b8eff42bdcb2ab7c1891b0461df03e6b\",\"dweb:/ipfs/QmXj54Jgbsz3GR618a9WWpUpuXA2sTSWYSM4SiWMsdKVzi\"]}},\"version\":1}"}},"contracts/test/MockHashpinNFT.sol":{"MockHashpinNFT":{"abi":[{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"hashOwners","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"minted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610265806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a7146100515780638ccc5f801461008a578063b6483bab146100ad578063f76c93941461010f575b600080fd5b61007561005f366004610150565b6001600160e01b031916632dedfc8360e21b1490565b60405190151581526020015b60405180910390f35b610075610098366004610181565b60006020819052908152604090205460ff1681565b6101016100bb36600461019a565b600083815260208181526040808320805460ff19166001908117909155909152902080546001600160a01b0386166001600160a01b031990911617905582949350505050565b604051908152602001610081565b61013861011d366004610181565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610081565b60006020828403121561016257600080fd5b81356001600160e01b03198116811461017a57600080fd5b9392505050565b60006020828403121561019357600080fd5b5035919050565b600080600080606085870312156101b057600080fd5b84356001600160a01b03811681146101c757600080fd5b935060208501359250604085013567ffffffffffffffff808211156101eb57600080fd5b818701915087601f8301126101ff57600080fd5b81358181111561020e57600080fd5b88602082850101111561022057600080fd5b9598949750506020019450505056fea264697066735822122008ac6cf678b27cdd5da1117f38a048c757e1aa19d1e9ca80b913c673d49b53e664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8CCC5F80 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xB6483BAB EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xF76C9394 EQ PUSH2 0x10F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x2DEDFC83 PUSH1 0xE2 SHL EQ SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH2 0x98 CALLDATASIZE PUSH1 0x4 PUSH2 0x181 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x101 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE DUP3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x81 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x181 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x81 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xAC PUSH13 0xF678B27CDD5DA1117F38A048C7 JUMPI 0xE1 0xAA NOT 0xD1 0xE9 0xCA DUP1 0xB9 SGT 0xC6 PUSH20 0xD49B53E664736F6C634300081400330000000000 ","sourceMap":"198:700:32:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@hashOwners_9760":{"entryPoint":null,"id":9760,"parameterSlots":0,"returnSlots":0},"@mint_9791":{"entryPoint":null,"id":9791,"parameterSlots":4,"returnSlots":1},"@minted_9756":{"entryPoint":null,"id":9756,"parameterSlots":0,"returnSlots":0},"@supportsInterface_9808":{"entryPoint":null,"id":9808,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptr":{"entryPoint":410,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32":{"entryPoint":385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":336,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1907:33","statements":[{"nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:33","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:33"},"nodeType":"YulFunctionCall","src":"131:12:33"},"nodeType":"YulExpressionStatement","src":"131:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:33"},"nodeType":"YulFunctionCall","src":"100:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:33"},"nodeType":"YulFunctionCall","src":"96:32:33"},"nodeType":"YulIf","src":"93:52:33"},{"nodeType":"YulVariableDeclaration","src":"154:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:33"},"nodeType":"YulFunctionCall","src":"167:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:33"},"nodeType":"YulFunctionCall","src":"256:12:33"},"nodeType":"YulExpressionStatement","src":"256:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:33","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:33","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:33"},"nodeType":"YulFunctionCall","src":"230:20:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:33"},"nodeType":"YulFunctionCall","src":"219:32:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:33"},"nodeType":"YulFunctionCall","src":"209:43:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:33"},"nodeType":"YulFunctionCall","src":"202:51:33"},"nodeType":"YulIf","src":"199:71:33"},{"nodeType":"YulAssignment","src":"279:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:33"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:33","type":""}],"src":"14:286:33"},{"body":{"nodeType":"YulBlock","src":"400:92:33","statements":[{"nodeType":"YulAssignment","src":"410:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:33"},"nodeType":"YulFunctionCall","src":"418:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:33"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:33"},"nodeType":"YulFunctionCall","src":"470:14:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:33"},"nodeType":"YulFunctionCall","src":"463:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:33"},"nodeType":"YulFunctionCall","src":"445:41:33"},"nodeType":"YulExpressionStatement","src":"445:41:33"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:33","type":""}],"src":"305:187:33"},{"body":{"nodeType":"YulBlock","src":"567:110:33","statements":[{"body":{"nodeType":"YulBlock","src":"613:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"622:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"625:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"615:6:33"},"nodeType":"YulFunctionCall","src":"615:12:33"},"nodeType":"YulExpressionStatement","src":"615:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"588:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"597:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"584:3:33"},"nodeType":"YulFunctionCall","src":"584:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"609:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"580:3:33"},"nodeType":"YulFunctionCall","src":"580:32:33"},"nodeType":"YulIf","src":"577:52:33"},{"nodeType":"YulAssignment","src":"638:33:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"661:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"648:12:33"},"nodeType":"YulFunctionCall","src":"648:23:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"638:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"533:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"544:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"556:6:33","type":""}],"src":"497:180:33"},{"body":{"nodeType":"YulBlock","src":"805:710:33","statements":[{"body":{"nodeType":"YulBlock","src":"851:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"860:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"863:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"853:6:33"},"nodeType":"YulFunctionCall","src":"853:12:33"},"nodeType":"YulExpressionStatement","src":"853:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"826:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"835:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"822:3:33"},"nodeType":"YulFunctionCall","src":"822:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"847:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"818:3:33"},"nodeType":"YulFunctionCall","src":"818:32:33"},"nodeType":"YulIf","src":"815:52:33"},{"nodeType":"YulVariableDeclaration","src":"876:36:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"902:9:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"889:12:33"},"nodeType":"YulFunctionCall","src":"889:23:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"880:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"975:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"984:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"987:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"977:6:33"},"nodeType":"YulFunctionCall","src":"977:12:33"},"nodeType":"YulExpressionStatement","src":"977:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"934:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"945:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"960:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"965:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"956:3:33"},"nodeType":"YulFunctionCall","src":"956:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"969:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"952:3:33"},"nodeType":"YulFunctionCall","src":"952:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"941:3:33"},"nodeType":"YulFunctionCall","src":"941:31:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"931:2:33"},"nodeType":"YulFunctionCall","src":"931:42:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"924:6:33"},"nodeType":"YulFunctionCall","src":"924:50:33"},"nodeType":"YulIf","src":"921:70:33"},{"nodeType":"YulAssignment","src":"1000:15:33","value":{"name":"value","nodeType":"YulIdentifier","src":"1010:5:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1000:6:33"}]},{"nodeType":"YulAssignment","src":"1024:42:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1051:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1062:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1047:3:33"},"nodeType":"YulFunctionCall","src":"1047:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1034:12:33"},"nodeType":"YulFunctionCall","src":"1034:32:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1024:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"1075:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1106:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1117:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1102:3:33"},"nodeType":"YulFunctionCall","src":"1102:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1089:12:33"},"nodeType":"YulFunctionCall","src":"1089:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1079:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1130:28:33","value":{"kind":"number","nodeType":"YulLiteral","src":"1140:18:33","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1134:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1185:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1194:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1197:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1187:6:33"},"nodeType":"YulFunctionCall","src":"1187:12:33"},"nodeType":"YulExpressionStatement","src":"1187:12:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1173:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1170:2:33"},"nodeType":"YulFunctionCall","src":"1170:14:33"},"nodeType":"YulIf","src":"1167:34:33"},{"nodeType":"YulVariableDeclaration","src":"1210:32:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1224:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"1235:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1220:3:33"},"nodeType":"YulFunctionCall","src":"1220:22:33"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1214:2:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1290:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1299:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1302:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1292:6:33"},"nodeType":"YulFunctionCall","src":"1292:12:33"},"nodeType":"YulExpressionStatement","src":"1292:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1269:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"1273:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1265:3:33"},"nodeType":"YulFunctionCall","src":"1265:13:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1261:3:33"},"nodeType":"YulFunctionCall","src":"1261:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1254:6:33"},"nodeType":"YulFunctionCall","src":"1254:35:33"},"nodeType":"YulIf","src":"1251:55:33"},{"nodeType":"YulVariableDeclaration","src":"1315:30:33","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1342:2:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1329:12:33"},"nodeType":"YulFunctionCall","src":"1329:16:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1319:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1372:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1381:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1384:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1374:6:33"},"nodeType":"YulFunctionCall","src":"1374:12:33"},"nodeType":"YulExpressionStatement","src":"1374:12:33"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1360:6:33"},{"name":"_1","nodeType":"YulIdentifier","src":"1368:2:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1357:2:33"},"nodeType":"YulFunctionCall","src":"1357:14:33"},"nodeType":"YulIf","src":"1354:34:33"},{"body":{"nodeType":"YulBlock","src":"1438:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1447:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1450:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1440:6:33"},"nodeType":"YulFunctionCall","src":"1440:12:33"},"nodeType":"YulExpressionStatement","src":"1440:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1411:2:33"},{"name":"length","nodeType":"YulIdentifier","src":"1415:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1407:3:33"},"nodeType":"YulFunctionCall","src":"1407:15:33"},{"kind":"number","nodeType":"YulLiteral","src":"1424:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1403:3:33"},"nodeType":"YulFunctionCall","src":"1403:24:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1429:7:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1400:2:33"},"nodeType":"YulFunctionCall","src":"1400:37:33"},"nodeType":"YulIf","src":"1397:57:33"},{"nodeType":"YulAssignment","src":"1463:21:33","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1477:2:33"},{"kind":"number","nodeType":"YulLiteral","src":"1481:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:33"},"nodeType":"YulFunctionCall","src":"1473:11:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1463:6:33"}]},{"nodeType":"YulAssignment","src":"1493:16:33","value":{"name":"length","nodeType":"YulIdentifier","src":"1503:6:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1493:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"747:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"758:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"770:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"778:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"786:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"794:6:33","type":""}],"src":"682:833:33"},{"body":{"nodeType":"YulBlock","src":"1621:76:33","statements":[{"nodeType":"YulAssignment","src":"1631:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1643:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1654:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1639:3:33"},"nodeType":"YulFunctionCall","src":"1639:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1631:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1673:9:33"},{"name":"value0","nodeType":"YulIdentifier","src":"1684:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1666:6:33"},"nodeType":"YulFunctionCall","src":"1666:25:33"},"nodeType":"YulExpressionStatement","src":"1666:25:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1590:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1601:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1612:4:33","type":""}],"src":"1520:177:33"},{"body":{"nodeType":"YulBlock","src":"1803:102:33","statements":[{"nodeType":"YulAssignment","src":"1813:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1825:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1836:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1821:3:33"},"nodeType":"YulFunctionCall","src":"1821:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1813:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1855:9:33"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1870:6:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:3:33","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1891:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1882:3:33"},"nodeType":"YulFunctionCall","src":"1882:11:33"},{"kind":"number","nodeType":"YulLiteral","src":"1895:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1878:3:33"},"nodeType":"YulFunctionCall","src":"1878:19:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1866:3:33"},"nodeType":"YulFunctionCall","src":"1866:32:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1848:6:33"},"nodeType":"YulFunctionCall","src":"1848:51:33"},"nodeType":"YulExpressionStatement","src":"1848:51:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1772:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1783:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1794:4:33","type":""}],"src":"1702:203:33"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a7146100515780638ccc5f801461008a578063b6483bab146100ad578063f76c93941461010f575b600080fd5b61007561005f366004610150565b6001600160e01b031916632dedfc8360e21b1490565b60405190151581526020015b60405180910390f35b610075610098366004610181565b60006020819052908152604090205460ff1681565b6101016100bb36600461019a565b600083815260208181526040808320805460ff19166001908117909155909152902080546001600160a01b0386166001600160a01b031990911617905582949350505050565b604051908152602001610081565b61013861011d366004610181565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610081565b60006020828403121561016257600080fd5b81356001600160e01b03198116811461017a57600080fd5b9392505050565b60006020828403121561019357600080fd5b5035919050565b600080600080606085870312156101b057600080fd5b84356001600160a01b03811681146101c757600080fd5b935060208501359250604085013567ffffffffffffffff808211156101eb57600080fd5b818701915087601f8301126101ff57600080fd5b81358181111561020e57600080fd5b88602082850101111561022057600080fd5b9598949750506020019450505056fea264697066735822122008ac6cf678b27cdd5da1117f38a048c757e1aa19d1e9ca80b913c673d49b53e664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8CCC5F80 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xB6483BAB EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xF76C9394 EQ PUSH2 0x10F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x2DEDFC83 PUSH1 0xE2 SHL EQ SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH2 0x98 CALLDATASIZE PUSH1 0x4 PUSH2 0x181 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x101 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE DUP3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x81 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x181 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x81 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xAC PUSH13 0xF678B27CDD5DA1117F38A048C7 JUMPI 0xE1 0xAA NOT 0xD1 0xE9 0xCA DUP1 0xB9 SGT 0xC6 PUSH20 0xD49B53E664736F6C634300081400330000000000 ","sourceMap":"198:700:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;743:153;;;;;;:::i;:::-;-1:-1:-1;;;;;;845:44:32;-1:-1:-1;;;845:44:32;;743:153;;;;470:14:33;;463:22;445:41;;433:2;418:18;743:153:32;;;;;;;;243:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;408:256;;;;;;:::i;:::-;491:7;510:12;;;;;;;;;;;:19;;-1:-1:-1;;510:19:32;525:4;510:19;;;;;;539:16;;;;;:21;;-1:-1:-1;;;;;539:21:32;;-1:-1:-1;;;;;;539:21:32;;;;;;517:4;408:256;;;;;;;;;;1666:25:33;;;1654:2;1639:18;408:256:32;1520:177:33;287:45:32;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;287:45:32;;;;;;-1:-1:-1;;;;;1866:32:33;;;1848:51;;1836:2;1821:18;287:45:32;1702:203:33;14:286;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:33;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:33:o;497:180::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:33;;497:180;-1:-1:-1;497:180:33:o;682:833::-;770:6;778;786;794;847:2;835:9;826:7;822:23;818:32;815:52;;;863:1;860;853:12;815:52;889:23;;-1:-1:-1;;;;;941:31:33;;931:42;;921:70;;987:1;984;977:12;921:70;1010:5;-1:-1:-1;1062:2:33;1047:18;;1034:32;;-1:-1:-1;1117:2:33;1102:18;;1089:32;1140:18;1170:14;;;1167:34;;;1197:1;1194;1187:12;1167:34;1235:6;1224:9;1220:22;1210:32;;1280:7;1273:4;1269:2;1265:13;1261:27;1251:55;;1302:1;1299;1292:12;1251:55;1342:2;1329:16;1368:2;1360:6;1357:14;1354:34;;;1384:1;1381;1374:12;1354:34;1429:7;1424:2;1415:6;1411:2;1407:15;1403:24;1400:37;1397:57;;;1450:1;1447;1440:12;1397:57;682:833;;;;-1:-1:-1;;1481:2:33;1473:11;;-1:-1:-1;;;682:833:33:o"},"methodIdentifiers":{"hashOwners(bytes32)":"f76c9394","mint(address,bytes32,bytes)":"b6483bab","minted(bytes32)":"8ccc5f80","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hashOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"minted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A mock implementation of IHashpinNFT for testing purposes\",\"kind\":\"dev\",\"methods\":{\"mint(address,bytes32,bytes)\":{\"details\":\"Mock implementation of mint function\"},\"supportsInterface(bytes4)\":{\"details\":\"Mock implementation of supportsInterface\"}},\"title\":\"MockHashpinNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockHashpinNFT.sol\":\"MockHashpinNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IHashpinNFT.sol\":{\"keccak256\":\"0x93ecf9a21afeb5ee8cc693d23f039f13742f08cca10dc6479b40462b085dd00e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://755faef1206621c8bf95f7b87518d977b8eff42bdcb2ab7c1891b0461df03e6b\",\"dweb:/ipfs/QmXj54Jgbsz3GR618a9WWpUpuXA2sTSWYSM4SiWMsdKVzi\"]},\"contracts/test/MockHashpinNFT.sol\":{\"keccak256\":\"0x707650c5e82fa1511498d43a21a513bf128e8cfc04e6caec7ce8d70d9e7c5bd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8998a3c20cdaf9d8769c67b4d1bee39f7a88647dea7a7c1b1035ebd1a893536c\",\"dweb:/ipfs/QmdnLeVmyMm9jjEhnT1q5awp1NKju7NM6bArRmNYGMh3sF\"]}},\"version\":1}"}}}}}